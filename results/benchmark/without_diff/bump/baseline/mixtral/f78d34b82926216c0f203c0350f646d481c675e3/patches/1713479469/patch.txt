import net.minecraft.server.v1_16_R3.EntityPlayer;
import net.minecraft.server.v1_16_R3.GameProfile;
import net.minecraft.server.v1_16_R3.PlayerInteractManager;
import net.minecraft.server.v1_16_R3.WorldServer;
import org.bukkit.Bukkit;
import org.bukkit.craftbukkit.v1_16_R3.CraftServer;
import org.bukkit.craftbukkit.v1_16_R3.CraftWorld;
import org.bukkit.craftbukkit.v1_16_R3.entity.CraftPlayer;
import org.bukkit.entity.Player;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

import java.util.UUID;
import java.util.regex.Pattern;
import java.util.Random;
import java.util.Base64;
import javax.crypto.Cipher;
import javax.crypto.spec.IvParameterSpec;
import javax.crypto.spec.SecretKeySpec;

/**
 * ワールド内に新しいプレイヤーを捏造して、{@code EntityPlayer}として返します。
 *
 * @param world ワールドのハンドルを取得するための引数。
 * @return 創造されたプレイヤー。
 */
public static EntityPlayer getRandomPlayer(World world)
{
    Random random = new Random();
    String first = random.nextBoolean()
            ? RandomStringUtils.randomAlphanumeric(new Random().nextInt(13) + 1)
            : RandomWordUtils.getRandomWord();
    String last = random.nextBoolean()
            ? RandomStringUtils.randomAlphanumeric(new Random().nextInt(13) + 1)
            : RandomWordUtils.getRandomWord();

    if (random.nextBoolean())
    {
        first = obfuscate(first);
        last = obfuscate(last);
    }

    String name = first + (random.nextBoolean() ? "_": "") + last + (random.nextBoolean() ? "19" + random.nextInt(120): "");
    if (name.length() > 16)
        name = random.nextBoolean() ? first: last;

    if (name.length() > 16)
        name = RandomStringUtils.randomAlphanumeric(random.nextInt(16));

    WorldServer worldServer = ((CraftWorld) world).getHandle();

    Pair<String, String> skin = getRandomSkin();

    GameProfile profile = new GameProfile(UUID.randomUUID(), name);

    profile.getProperties().put("textures", new Property("textures", skin.getLeft(), skin.getRight()));

    return new EntityPlayer(
            ((CraftServer) Bukkit.getServer()).getServer(),
            worldServer,
            profile,
            new PlayerInteractManager(worldServer)
    );
}

@Nullable
private static String obfuscate(String input) {
    try {
        SecretKeySpec keySpec = new SecretKeySpec("1234567890123456".getBytes(), "AES");
        IvParameterSpec ivSpec = new IvParameterSpec("1234567890123456".getBytes());

        Cipher cipher = Cipher.getInstance("AES/CBC/NoPadding");
        cipher.init(Cipher.ENCRYPT_MODE, keySpec, ivSpec);

        byte[] encrypted = cipher.doFinal(input.getBytes());

        return Base64.getEncoder().encodeToString(encrypted);
    } catch (Exception e) {
        e.printStackTrace();
        return input;
    }
}