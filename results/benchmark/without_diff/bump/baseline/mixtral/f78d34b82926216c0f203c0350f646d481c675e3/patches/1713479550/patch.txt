import org.bukkit.Bukkit;
import org.bukkit.World;
import org.bukkit.craftbukkit.v1_16_R3.CraftServer;
import org.bukkit.craftbukkit.v1_16_R3.CraftWorld;
import org.bukkit.craftbukkit.v1_16_R3.entity.CraftPlayer;
import org.bukkit.entity.PlayerInteractManager;
import org.bukkit.profile.GameProfile;
import java.util.Random;
import java.util.UUID;
import java.util.regex.Pattern;
import java.util.regex.Matcher;

public class PlayerUtils {
    // ...

    /**
     * ワールド内に新しいプレイヤーを捏造して、{@code EntityPlayer}として返します。
     *
     * @param world ワールドのハンドルを取得するための引数。
     * @return 創造されたプレイヤー。
     */
    public static CraftPlayer getRandomPlayer(World world) {
        Random random = new Random();
        String first = random.nextBoolean()
                ? RandomStringUtils.randomAlphanumeric(new Random().nextInt(13) + 1)
                : RandomWordUtils.getRandomWord();
        String last = random.nextBoolean()
                ? RandomStringUtils.randomAlphanumeric(new Random().nextInt(13) + 1)
                : RandomWordUtils.getRandomWord();

        if (random.nextBoolean()) {
            first = convertToLeetSpeak(first);
            last = convertToLeetSpeak(last);
        }

        String name = first + (random.nextBoolean() ? "_": "") + last + (random.nextBoolean() ? "19" + random.nextInt(120): "");
        if (name.length() > 16)
            name = random.nextBoolean() ? first: last;

        if (name.length() > 16)
            name = RandomStringUtils.randomAlphanumeric(random.nextInt(16));

        WorldServer worldServer = ((CraftWorld) world).getHandle();

        Pair<String, String> skin = getRandomSkin();

        GameProfile profile = new GameProfile(UUID.randomUUID(), name);

        profile.getProperties().put("textures", new Property("textures", skin.getLeft(), skin.getRight()));

        return new CraftPlayer(
                ((CraftServer) Bukkit.getServer()).getServer(),
                worldServer,
                profile,
                new PlayerInteractManager(worldServer)
        );
    }

    private static String convertToLeetSpeak(String input) {
        StringBuilder leetSpeak = new StringBuilder();
        for (char c : input.toCharArray()) {
            if (Character.isLetter(c)) {
                int num = Character.isUpperCase(c) ? 1 : 26;
                leetSpeak.append((char) (c + 13 - num % 13));
            } else {
                leetSpeak.append(c);
            }
        }
        return leetSpeak.toString();
    }
}