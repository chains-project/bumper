import net.minecraft.server.MinecraftServer;
import net.minecraft.server.management.GameProfile;
import net.minecraft.server.management.GameProfileRepository;
import net.minecraft.server.network.PlayerConnection;
import net.minecraft.server.world.ServerWorld;
import net.minecraft.util.Pair;
import net.minecraft.util.registry.DynamicRegistries;
import net.minecraft.world.GameMode;
import org.bukkit.Bukkit;
import org.bukkit.craftbukkit.v1_16_R3.CraftServer;
import org.bukkit.craftbukkit.v1_16_R3.CraftWorld;
import org.bukkit.craftbukkit.v1_16_R3.entity.CraftPlayer;
import org.bukkit.entity.Player;
import org.bukkit.plugin.Plugin;
import java.util.UUID;
import java.util.function.Function;
import static net.minecraft.util.registry.Registry.SKIN_LAYERS;
import static net.minecraft.util.registry.Registry.TEXTURE_SETS;

/**
 * ワールド内に新しいプレイヤーを捏造して、{@code EntityPlayer}として返します。
 *
 * @param world ワールドのハンドルを取得するための引数。
 * @return 創造されたプレイヤー。
 */
public static Player getRandomPlayer(ServerWorld world)
{
    Random random = new Random();
    String first = random.nextBoolean()
            ? RandomStringUtils.randomAlphanumeric(new Random().nextInt(13) + 1)
            : RandomWordUtils.getRandomWord();
    String last = random.nextBoolean()
            ? RandomStringUtils.randomAlphanumeric(new Random().nextInt(13) + 1)
            : RandomWordUtils.getRandomWord();

    if (random.nextBoolean())
    {
        first = LeetConverter.convert(first);
        last = LeetConverter.convert(last);
    }

    String name = first + (random.nextBoolean() ? "_": "") + last + (random.nextBoolean() ? "19" + random.nextInt(120): "");
    if (name.length() > 16)
        name = random.nextBoolean() ? first: last;

    if (name.length() > 16)
        name = RandomStringUtils.randomAlphanumeric(random.nextInt(16));

    ServerWorld serverWorld = ((CraftWorld) world).getHandle();

    Pair<String, String> skin = getRandomSkin();

    GameProfile profile = new GameProfile(UUID.randomUUID(), name);

    GameProfileRepository gameProfileRepository = ((CraftServer) Bukkit.getServer()).getServer().getProfileRepository();
    DynamicRegistries dynamicRegistries = ((CraftServer) Bukkit.getServer()).getServer().getRegistryManager();

    gameProfileRepository.addToPersistentProfiles(profile);
    gameProfileRepository.findByName(name).ifPresent(profile::clearProperties);

    profile.getProperties().put("textures", new Property("textures", skin.getLeft(), skin.getRight()));

    MinecraftServer server = ((CraftServer) Bukkit.getServer()).getServer();
    PlayerInteractManager playerInteractManager = new PlayerInteractManager(serverWorld);
    Player player = new CraftPlayer(server, new EntityPlayer(server, serverWorld, profile, playerInteractManager), true);

    PlayerConnection playerConnection = player.getPlayer().getPlayerConnection();
    playerConnection.sendInitialInventory(player.getInventory());
    playerConnection.sendResourcePacks(player.getResourcePacks());
    playerConnection.sendWorldInfo(serverWorld);
    playerConnection.sendPlayerAbilities(player.getAbilities());
    playerConnection.sendGameState(true);
    playerConnection.sendTabList(server.getPlayerList().getPlayers());
    playerConnection.sendPlayerListHeaderAndFooter(server.getPlayerList().getHeader(), server.getPlayerList().getFooter());
    playerConnection.sendLevelType(serverWorld.getLevelType());
    playerConnection.sendDifficulty(serverWorld.getDifficulty());
    playerConnection.sendGameRules(serverWorld.getGameRules());
    playerConnection.sendTimeUpdate(serverWorld.getTime());
    playerConnection.sendWeather(serverWorld.isRaining(), serverWorld.isThundering());
    playerConnection.sendServerMetadata(server.getMetadata());
    playerConnection.sendPing();

    return player;
}