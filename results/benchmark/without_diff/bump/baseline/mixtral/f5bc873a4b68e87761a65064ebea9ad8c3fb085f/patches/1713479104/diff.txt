0a1
> import org.apache.maven.artifact.Artifact;
1a3,50
> import org.apache.maven.plugin.AbstractMojo;
> import org.apache.maven.plugin.MojoExecutionException;
> import org.apache.maven.plugin.MojoFailureException;
> import org.apache.maven.plugins.annotations.Mojo;
> import org.apache.maven.plugins.annotations.Parameter;
> import org.apache.maven.project.MavenProject;
> import org.eclipse.aether.RepositorySystem;
> import org.eclipse.aether.RepositorySystemSession;
> import org.eclipse.aether.collection.CollectingDependencyResolver;
> import org.eclipse.aether.collection.DependencyCollectionException;
> import org.eclipse.aether.collection.DependencyResolver;
> import org.eclipse.aether.graph.Dependency;
> import org.eclipse.aether.graph.DependencyGraphTransformer;
> import org.eclipse.aether.graph.DependencyNode;
> import org.eclipse.aether.repository.RemoteRepository;
> import org.eclipse.aether.util.graph.transformer.ConflictResolverTransformer;
> import org.eclipse.aether.util.graph.transformer.TransformationData;
> 
> import java.io.File;
> import java.io.IOException;
> import java.util.Collection;
> import java.util.List;
> import java.util.Objects;
> import java.util.Set;
> import java.util.stream.Collectors;
> 
> @Mojo(name = "unpack-theme", threadSafe = true)
> public class UnPackThemeMojo extends AbstractMojo {
> 
>     // ... other class members ...
> 
>     @Override
>     public void execute() throws MojoExecutionException, MojoFailureException {
>         // ... other code ...
> 
>         // Replace the failing line
>         DependencyNode node = getDependencyNode(session, project, "org.apache.myfaces.tobago:tobago-themes:jar:" + version);
> 
>         // ... other code ...
>     }
> 
>     // ... other methods ...
> 
>     private DependencyNode getDependencyNode(RepositorySystemSession session, MavenProject project, String dependency)
>             throws DependencyResolutionRequiredException {
>         // ... other code ...
>     }
> }
\ No newline at end of file
