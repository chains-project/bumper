1c1,67
< import org.apache.maven.artifact.DependencyResolutionRequiredException;
\ No newline at end of file
---
> import org.apache.maven.artifact.Artifact;
> import org.apache.maven.artifact.ArtifactResolutionException;
> import org.apache.maven.artifact.factory.ArtifactFactory;
> import org.apache.maven.artifact.metadata.ArtifactMetadataRetrievalException;
> import org.apache.maven.artifact.repository.ArtifactRepository;
> import org.apache.maven.artifact.resolver.ArtifactResolver;
> import org.apache.maven.execution.MavenSession;
> import org.apache.maven.plugin.AbstractMojo;
> import org.apache.maven.plugin.MojoExecutionException;
> import org.apache.maven.plugins.annotations.Component;
> import org.apache.maven.plugins.annotations.Parameter;
> import org.apache.maven.project.MavenProject;
> import org.codehaus.plexus.util.FileUtils;
> import org.codehaus.plexus.util.IOUtil;
> 
> import java.io.File;
> import java.io.FileOutputStream;
> import java.io.FileReader;
> import java.io.IOException;
> import java.io.LineNumberReader;
> import java.util.ArrayList;
> import java.util.List;
> import java.util.Properties;
> import java.util.regex.Matcher;
> import java.util.regex.Pattern;
> 
> public class UnPackThemeMojo extends AbstractMojo {
> 
>     // ... other fields ...
> 
>     @Component
>     private ArtifactFactory artifactFactory;
> 
>     @Component
>     private ArtifactResolver artifactResolver;
> 
>     @Component
>     private MavenSession mavenSession;
> 
>     @Parameter(defaultValue = "${project}", readonly = true, required = true)
>     private MavenProject project;
> 
>     @Parameter(defaultValue = "${repositorySystemSession}", readonly = true, required = true)
>     private org.apache.maven.artifact.repository.RepositorySystemSession repoSession;
> 
>     @Parameter(defaultValue = "${localRepository}", readonly = true, required = true)
>     private ArtifactRepository localRepository;
> 
>     // ... other methods ...
> 
>     @Override
>     public void execute() throws MojoExecutionException {
>         // ... other code ...
> 
>         Artifact artifact = artifactFactory.createArtifact(groupId, artifactId, version, Artifact.SCOPE_COMPILE, artifactClassifier);
> 
>         try {
>             artifactResolver.resolve(artifact, remoteRepositories, localRepository);
>         } catch (ArtifactResolutionException e) {
>             throw new MojoExecutionException("Failed to resolve artifact", e);
>         } catch (ArtifactMetadataRetrievalException e) {
>             throw new MojoExecutionException("Failed to retrieve artifact metadata", e);
>         }
> 
>         // ... other code ...
>     }
> }
\ No newline at end of file
