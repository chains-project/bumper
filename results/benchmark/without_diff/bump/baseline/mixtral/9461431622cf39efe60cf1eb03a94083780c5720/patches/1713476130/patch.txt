private void registerHard(final MOGroup group) {
    try {
        final Field registry = server.getClass().getDeclaredField("registry");
        registry.setAccessible(true);
        SortedMap<MOScope, ManagedObject<?>> reg = server.getRegistry();
        DefaultMOContextScope contextScope = new DefaultMOContextScope(new OctetString(""), group.getScope());
        @SuppressWarnings("unchecked")
        SortedMap<MOScope, ManagedObject<ManagedObject>> reg2 = (SortedMap<MOScope, ManagedObject<ManagedObject>>) reg;
        reg2.put(contextScope, new ManagedObject<ManagedObject>() {
            @Override
            public void setValue(OID oid, Object value) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public void setValue(OID oid, Object value, Object... params) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public Object getValue(OID oid) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public Object getValue(OID oid, Object... params) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public void removeValue(OID oid) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public void removeValue(OID oid, Object... params) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public void addValueChangeListener(OID oid, ValueChangeListener listener) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public void removeValueChangeListener(OID oid, ValueChangeListener listener) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public void addValueAccessListener(OID oid, ValueAccessListener listener) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public void removeValueAccessListener(OID oid, ValueAccessListener listener) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public void addNotify(NotificationListener listener, NotificationFilter filter, Object handback) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public void removeNotify(NotificationListener listener, NotificationFilter filter, Object handback) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public void addNotify(NotificationListener listener) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public void removeNotify(NotificationListener listener) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public void addNotify(NotificationListener listener, NotificationFilter filter) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public void removeNotify(NotificationListener listener, NotificationFilter filter) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public void removeNotify(NotificationListener listener) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public void removeNotify() throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public void close() throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public void setNotificationOrigin(String origin) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public void setNotificationFilter(NotificationFilter filter) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public NotificationFilter getNotificationFilter() throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public Object getContext(OID oid) {
                throw new UnsupportedOperationException();
            }

            @Override
            public void setContext(OID oid, Object obj) {
                throw new UnsupportedOperationException();
            }

            @Override
            public void setStorageType(OID oid, int type) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public int getStorageType(OID oid) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public void setAccess(OID oid, int access) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public int getAccess(OID oid) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public void setSyntax(OID oid, Syntax syntax) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public Syntax getSyntax(OID oid) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public void setMaxAccess(OID oid, int maxAccess) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public int getMaxAccess(OID oid) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public void setStatus(OID oid, int status) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public int getStatus(OID oid) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public void setEnterprise(OID oid, OID enterprise) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public OID getEnterprise(OID oid) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public void setDescr(OID oid, String descr) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public String getDescr(OID oid) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public void setName(OID oid, String name) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public String getName(OID oid) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public void setRevision(OID oid, int revision) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public int getRevision(OID oid) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public void setExpTime(OID oid, long expTime) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public long getExpTime(OID oid) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public void setStorageType(OID oid, int type, int flags) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public int getStorageType(OID oid, int flags) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public void setStorageType(OID oid, int type, int flags, int[] index) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public int getStorageType(OID oid, int flags, int[] index) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public void setStorageType(OID oid, int type, int flags, long[] index) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public int getStorageType(OID oid, int flags, long[] index) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public void setStorageType(OID oid, int type, int flags, String[] index) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public int getStorageType(OID oid, int flags, String[] index) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public void setStorageType(OID oid, int type, int flags, Object[] index) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public int getStorageType(OID oid, int flags, Object[] index) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public void setAccess(OID oid, int access, int flags) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public int getAccess(OID oid, int flags) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public void setAccess(OID oid, int access, int flags, int[] index) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public int getAccess(OID oid, int flags, int[] index) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public void setAccess(OID oid, int access, int flags, long[] index) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public int getAccess(OID oid, int flags, long[] index) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public void setAccess(OID oid, int access, int flags, String[] index) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public int getAccess(OID oid, int flags, String[] index) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public void setAccess(OID oid, int access, int flags, Object[] index) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public int getAccess(OID oid, int flags, Object[] index) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public void setSyntax(OID oid, Syntax syntax, int flags) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public Syntax getSyntax(OID oid, int flags) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public void setSyntax(OID oid, Syntax syntax, int flags, int[] index) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public Syntax getSyntax(OID oid, int flags, int[] index) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public void setSyntax(OID oid, Syntax syntax, int flags, long[] index) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public Syntax getSyntax(OID oid, int flags, long[] index) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public void setSyntax(OID oid, Syntax syntax, int flags, String[] index) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public Syntax getSyntax(OID oid, int flags, String[] index) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public void setSyntax(OID oid, Syntax syntax, int flags, Object[] index) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public Syntax getSyntax(OID oid, int flags, Object[] index) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public void setMaxAccess(OID oid, int maxAccess, int flags) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public int getMaxAccess(OID oid, int flags) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public void setMaxAccess(OID oid, int maxAccess, int flags, int[] index) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public int getMaxAccess(OID oid, int flags, int[] index) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public void setMaxAccess(OID oid, int maxAccess, int flags, long[] index) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public int getMaxAccess(OID oid, int flags, long[] index) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public void setMaxAccess(OID oid, int maxAccess, int flags, String[] index) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public int getMaxAccess(OID oid, int flags, String[] index) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public void setMaxAccess(OID oid, int maxAccess, int flags, Object[] index) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public int getMaxAccess(OID oid, int flags, Object[] index) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public void setStatus(OID oid, int status, int flags) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public int getStatus(OID oid, int flags) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public void setStatus(OID oid, int status, int flags, int[] index) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public int getStatus(OID oid, int flags, int[] index) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public void setStatus(OID oid, int status, int flags, long[] index) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public int getStatus(OID oid, int flags, long[] index) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public void setStatus(OID oid, int status, int flags, String[] index) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public int getStatus(OID oid, int flags, String[] index) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public void setStatus(OID oid, int status, int flags, Object[] index) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public int getStatus(OID oid, int flags, Object[] index) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public void setEnterprise(OID oid, OID enterprise, int flags) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public OID getEnterprise(OID oid, int flags) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public void setEnterprise(OID oid, OID enterprise, int flags, int[] index) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public OID getEnterprise(OID oid, int flags, int[] index) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public void setEnterprise(OID oid, OID enterprise, int flags, long[] index) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public OID getEnterprise(OID oid, int flags, long[] index) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public void setEnterprise(OID oid, OID enterprise, int flags, String[] index) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public OID getEnterprise(OID oid, int flags, String[] index) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public void setEnterprise(OID oid, OID enterprise, int flags, Object[] index) throws IOException {
                throw new UnsupportedOperationException();
            }

            @Override
            public OID getEnterprise(OID oid, int flags, Object[] index) throws IOException {
                throw new UnsupportedOperationException();
            }
        });
        registry.set(server, reg2);
    } catch (NoSuchFieldException | IllegalAccessException e) {
        log.warn("could not set server registry", e);
    }
}