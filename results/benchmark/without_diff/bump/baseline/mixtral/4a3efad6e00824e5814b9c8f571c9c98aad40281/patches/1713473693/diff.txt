1c1,60
< import eu.europa.esig.dss.pades.CertificationPermission;
\ No newline at end of file
---
> import eu.europa.esig.dss.model.DSSException;
> import eu.europa.esig.dss.model.x509.CertificateToken;
> import eu.europa.esig.dss.pades.PadesSignature;
> import eu.europa.esig.dss.pades.PadesSigner;
> import eu.europa.esig.dss.pades.PadesSigningCertificateSource;
> import eu.europa.esig.dss.pades.PadesSigningCertificateValidator;
> import eu.europa.esig.dss.pades.PdfBoxUtils;
> import eu.europa.esig.dss.pades.PdfDocumentSignature;
> import eu.europa.esig.dss.pades.PdfSignatureParameters;
> import eu.europa.esig.dss.pades.factory.PadesSignerFactory;
> import eu.europa.esig.dss.pades.validation.PdfDocumentValidator;
> import eu.europa.esig.dss.pades.validation.PdfSignatureValidationContext;
> import eu.europa.esig.dss.validation.CommonCertificateVerifier;
> import eu.europa.esig.dss.validation.policy.SignaturePolicy;
> import eu.europa.esig.dss.validation.policy.SignaturePolicyFactory;
> import eu.europa.esig.dss.validation.reports.Reports;
> 
> // ...
> 
> public class Signer {
> 
>     // ...
> 
>     @Override
>     public byte[] sign(InputStream inputStream, String certificate, String password) throws Exception {
>         // ...
> 
>         CertificateToken certificateToken = getCertificateToken(certificate, password);
> 
>         // ...
> 
>         PadesSigningCertificateSource certificateSource = new PadesSigningCertificateSource();
>         certificateSource.setCertificate(certificateToken);
> 
>         PadesSigningCertificateValidator certificateValidator = new PadesSigningCertificateValidator(new CommonCertificateVerifier());
>         certificateValidator.setCertificateSource(certificateSource);
> 
>         // ...
> 
>         PadesSignatureParameters parameters = new PadesSignatureParameters();
>         parameters.setSigningCertificate(certificateToken);
>         parameters.setCertificateSource(certificateSource);
>         parameters.setCertificateValidator(certificateValidator);
>         parameters.setPdfSignaturePermissions(CertificationPermission.NO_PERMISSIONS);
> 
>         // ...
> 
>         PadesSigner signer = PadesSignerFactory.createPadesSigner(parameters);
> 
>         // ...
> 
>         return signer.sign(pdfDocument);
>     }
> 
>     // ...
> 
>     private CertificateToken getCertificateToken(String certificate, String password) throws DSSException {
>         // ...
>     }
> }
\ No newline at end of file
