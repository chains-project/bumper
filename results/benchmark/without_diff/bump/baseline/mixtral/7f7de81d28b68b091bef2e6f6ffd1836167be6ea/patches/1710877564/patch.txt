private void registerHard(final MOGroup group) {
    try {
        Class<?> registryClass = server.getClass();
        Field registryField = registryClass.getDeclaredField("registry");
        registryField.setAccessible(true);
        Object registry = registryField.get(server);

        Class<? extends SortedMap> regClass = registry.getClass();
        Type genericType = regClass.getGenericInterfaces()[0];
        if (!(genericType instanceof ParameterizedType)) {
            throw new RuntimeException("Unexpected registry type: " + regClass.getName());
        }

        ParameterizedType pType = (ParameterizedType) genericType;
        Class<?> managedObjectType = (Class) pType.getActualTypeArguments()[1];

        Method getRegistryMethod = registryClass.getMethod("getRegistry");
        SortedMap<MOScope, ManagedObject> reg = (SortedMap<MOScope, ManagedObject>) getRegistryMethod.invoke(server);

        DefaultMOContextScope contextScope = new DefaultMOContextScope(new OctetString(""), group.getScope());
        reg.put(contextScope, (ManagedObject) group.newInstance(managedObjectType));
        registryField.set(server, reg);
    } catch (ReflectiveOperationException | InstantiationException e) {
        log.warn("could not set server registry", e);
    }
}