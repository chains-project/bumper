2a3,11
>     Set<Authentication.User> users = Set.of(TestAuthentication.ALICE, TestAuthentication.BOB);
>     BiFunction<String, Set<Authentication.User>, CompletableFuture<Authentication.User>> authScheme = (token, users) ->
>       CompletableFuture.completedFuture(
>         users.stream()
>           .filter(user -> token.equals(token(user)))
>           .findFirst()
>           .map(user -> new Authentication.User(user.name()))
>           .orElse(null)
>       );
6,14c15
<                 new BearerAuthScheme(
<                     token -> CompletableFuture.completedFuture(
<                         Stream.of(TestAuthentication.ALICE, TestAuthentication.BOB)
<                             .filter(user -> token.equals(token(user)))
<                             .map(user -> new Authentication.User(user.name()))
<                             .findFirst()
<                     ),
<                     ""
<                 )
---
>       new BearerAuthScheme(authScheme, "", users)
