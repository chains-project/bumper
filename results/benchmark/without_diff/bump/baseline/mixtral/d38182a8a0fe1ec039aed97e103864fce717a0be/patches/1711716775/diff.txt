2a3,7
>     BiFunction<String, String, Optional<Authentication.User>> tokenValidator = (token, expectedToken) ->
>       Stream.of(TestAuthentication.ALICE, TestAuthentication.BOB)
>         .filter(user -> expectedToken.equals(token(user)))
>         .map(user -> new Authentication.User(user.name()))
>         .findFirst();
7,12c12
<                     token -> CompletableFuture.completedFuture(
<                         Stream.of(TestAuthentication.ALICE, TestAuthentication.BOB)
<                             .filter(user -> token.equals(token(user)))
<                             .map(user -> new Authentication.User(user.name()))
<                             .findFirst()
<                     ),
---
>         token -> CompletableFuture.completedFuture(tokenValidator.apply(token, token(TestAuthentication.ALICE))),
