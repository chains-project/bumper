import org.jfrog.artifactory.client.ArtifactoryServer;
import org.jfrog.artifactory.client.distribution.DistributionServer;
import org.jfrog.artifactory.client.distribution.DistributionServer.Builder;
import org.jfrog.artifactory.client.distribution.DistributionServerCredentials;
import org.jfrog.artifactory.client.distribution.DistributionServerCredentials.Builder as DistributionServerCredentialsBuilder;
import org.jfrog.artifactory.client.distribution.DistributionUrl;
import org.jfrog.artifactory.client.distribution.DistributionUrl.Builder as DistributionUrlBuilder;
import org.jfrog.artifactory.client.distribution.PlatformUrl;
import org.jfrog.artifactory.client.distribution.PlatformUrl.Builder as PlatformUrlBuilder;
import org.jfrog.artifactory.client.impl.ArtifactoryServerImpl;
import org.jfrog.artifactory.client.impl.DistributionServerImpl;
import org.jfrog.artifactory.client.impl.auth.BasicAuthenticationInfo;
import org.jfrog.artifactory.client.impl.auth.UsernamePasswordCredentials;
import org.jfrog.artifactory.client.okhttp.OkHttpArtifactoryHttpClient;
import org.jfrog.artifactory.client.okhttp.OkHttpArtifactoryHttpClient.Builder as OkHttpArtifactoryHttpClientBuilder;
import org.jfrog.artifactory.client.okhttp.OkHttpClientFactory;
import org.jfrog.artifactory.client.okhttp.OkHttpClientFactory.Builder as OkHttpClientFactoryBuilder;
import org.jfrog.artifactory.client.okhttp.OkHttpClientFactoryImpl;
import org.jfrog.artifactory.client.okhttp.OkHttpClientImpl;
import org.jfrog.artifactory.client.okhttp.OkHttpClientImpl.Builder as OkHttpClientBuilder;
import org.jfrog.artifactory.client.url.UrlBuilder;
import org.jfrog.artifactory.client.url.UrlBuilder.UrlBuilderException;
import org.jfrog.artifactory.client.url.UrlBuilders;
import org.jfrog.artifactory.client.url.UrlBuilders.UrlBuilderFactory;
import org.jfrog.hudson.ArtifactoryServerImpl;
import org.jfrog.hudson.DistributionServerImpl;
import org.jfrog.hudson.JFrogPlatformInstance;
import org.jfrog.hudson.JFrogPlatformInstance.Builder;
import org.jfrog.hudson.credentials.CredentialsImpl;
import org.jfrog.hudson.credentials.CredentialsImpl.Builder;
import org.jfrog.hudson.pipeline.scripted.steps.CreateJFrogPlatformInstanceStep;
import org.jfrog.hudson.pipeline.scripted.steps.CreateJFrogPlatformInstanceStep.Step;
import org.jfrog.hudson.pipeline.types.ArtifactoryServerContext;
import org.jfrog.hudson.pipeline.types.DistributionServerContext;
import org.jfrog.hudson.pipeline.types.UrlContext;
import org.jfrog.hudson.pipeline.types.UrlContext.UrlContextException;
import org.jfrog.hudson.util.JFrogUtils;
import org.jfrog.hudson.util.JFrogUtils.JFrogUtilsException;
import org.jfrog.ivy.ArtifactoryResolver;
import org.jfrog.ivy.IvyContext;
import org.jfrog.ivy.IvyContextImpl;
import org.jfrog.ivy.ResolutionException;
import org.jfrog.ivy.resolve.ArtifactoryResolverFactory;
import org.jfrog.ivy.resolve.IvyResolver;
import org.jfrog.ivy.resolve.IvyResolverFactory;
import org.jfrog.ivy.resolve.IvyResolverFactory.IvyResolverFactoryException;
import org.jfrog.ivy.resolve.IvyResolverFactoryFactory;
import org.jfrog.ivy.resolve.IvyResolverFactoryFactory.IvyResolverFactoryFactoryException;
import org.jfrog.ivy.resolve.IvyResolverFactoryFactory.IvyResolverFactoryFactoryImpl;
import org.jfrog.ivy.types.IvyContextSettings;
import org.jfrog.ivy.types.IvySettings;
import org.jfrog.ivy.types.IvySettingsImpl;
import org.jfrog.ivy.types.IvySettingsImpl.IvySettingsImplBuilder;
import org.jfrog.ivy.types.Resource;
import org.jfrog.ivy.types.ResourceImpl;
import org.jfrog.ivy.types.UrlResource;
import org.jfrog.ivy.types.UrlResourceImpl;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.net.URL;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.Map;
import java.util.Properties;
import java.util.Set;
import java.util.function.Function;
import java.util.stream.Collectors;
import java.util.stream.Stream;

import okhttp3.OkHttpClient;

@Override
protected JFrogPlatformInstance run() throws Exception {
    if (isAllBlank(step.url, step.artifactoryUrl, step.distributionUrl)) {
        throw new IllegalArgumentException("At least one of the following is mandatory: 'url', 'artifactoryUrl', 'distributionUrl'");
    }
    String urlWithoutSlash = removeEnd(step.url, "/");
    String artifactoryUrl = defaultIfBlank(step.artifactoryUrl, urlWithoutSlash + "/" + "artifactory");
    String distributionUrl = defaultIfBlank(step.distributionUrl, urlWithoutSlash + "/" + "distribution");

    ArtifactoryServer artifactoryServer;
    DistributionServer distributionServer;
    if (!isEmpty(step.credentialsId)) {
        UsernamePasswordCredentials credentials = new UsernamePasswordCredentials.Builder()
            .username(step.username)
            .password(step.password)
            .build();
        DistributionServerCredentials distributionServerCredentials = new DistributionServerCredentials.Builder()
            .credentials(credentials)
            .build();
        DistributionUrl distributionUrlObj = new DistributionUrl.Builder()
            .url(distributionUrl)
            .build();
        PlatformUrl platformUrlObj = new PlatformUrl.Builder()
            .url(urlWithoutSlash)
            .build();
        Builder distributionServerBuilder = new DistributionServerImpl.Builder()
            .url(distributionUrlObj)
            .credentials(distributionServerCredentials)
            .platformUrl(platformUrlObj);
        distributionServer = distributionServerBuilder.build();

        ArtifactoryServerImpl.Builder artifactoryServerBuilder = new ArtifactoryServerImpl.Builder()
            .url(artifactoryUrl)
            .credentials(credentials);
        artifactoryServer = artifactoryServerBuilder.build();
    } else {
        OkHttpClient httpClient = new OkHttpClient.Builder().build();
        OkHttpArtifactoryHttpClient artifactoryHttpClient = new OkHttpArtifactoryHttpClient.Builder()
            .httpClient(httpClient)
            .build();
        OkHttpArtifactoryHttpClient distributionHttpClient = new OkHttpArtifactoryHttpClient.Builder()
            .httpClient(httpClient)
            .build();
        OkHttpClientFactory okHttpClientFactory = new OkHttpClientFactoryImpl.Builder()
            .artifactoryHttpClient(artifactoryHttpClient)
            .distributionHttpClient(distributionHttpClient)
            .build();

        ArtifactoryServerImpl.Builder artifactoryServerBuilder = new ArtifactoryServerImpl.Builder()
            .url(artifactoryUrl)
            .okHttpClientFactory(okHttpClientFactory);
        artifactoryServer = artifactoryServerBuilder.build();

        DistributionServerImpl.Builder distributionServerBuilder = new DistributionServerImpl.Builder()
            .url(distributionUrl)
            .okHttpClientFactory(okHttpClientFactory);
        distributionServer = distributionServerBuilder.build();
    }
    artifactoryServer.setPlatformUrl(urlWithoutSlash);
    return new JFrogPlatformInstance(artifactoryServer, distributionServer, step.url, "");
}