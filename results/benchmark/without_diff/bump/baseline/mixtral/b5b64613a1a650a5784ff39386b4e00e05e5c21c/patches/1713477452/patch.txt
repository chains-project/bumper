import org.jfrog.artifactory.client.ArtifactoryServer;
import org.jfrog.artifactory.client.distribution.DistributionServer;
import org.jfrog.artifactory.client.okhttp.OkHttpClientProvider;
import org.jfrog.artifactory.client.okhttp.OkHttpClientSettings;
import org.jfrog.artifactory.client.okhttp.OkHttpClientSettings.Builder;
import org.jfrog.artifactory.client.okhttp.OkHttpClientSettings.SSLVersion;
import org.jfrog.hudson.pipeline.common.types.ArtifactoryServerConfig;
import org.jfrog.hudson.pipeline.common.types.DistributionServerConfig;
import org.jfrog.hudson.pipeline.common.types.UsernamePasswordCredentialsConfig;

@Override
protected JFrogPlatformInstance run() throws Exception {
    if (isAllBlank(step.url, step.artifactoryUrl, step.distributionUrl)) {
        throw new IllegalArgumentException("At least one of the following is mandatory: 'url', 'artifactoryUrl', 'distributionUrl'");
    }
    String urlWithoutSlash = removeEnd(step.url, "/");
    String artifactoryUrl = defaultIfBlank(step.artifactoryUrl, urlWithoutSlash + "/" + "artifactory");
    String distributionUrl = defaultIfBlank(step.distributionUrl, urlWithoutSlash + "/" + "distribution");

    Builder settingsBuilder = OkHttpClientSettings.builder();
    settingsBuilder.sslVersion(SSLVersion.TLS_1_2);
    OkHttpClientSettings settings = settingsBuilder.build();
    OkHttpClientProvider clientProvider = new OkHttpClientProvider(settings);

    ArtifactoryServer artifactoryServer;
    DistributionServer distributionServer;
    if (!isEmpty(step.credentialsId)) {
        UsernamePasswordCredentialsConfig credentials = getCredentialsById(step.credentialsId);
        artifactoryServer = new ArtifactoryServer(artifactoryUrl, new ArtifactoryServerConfig(clientProvider, credentials));
        distributionServer = new DistributionServer(distributionUrl, new DistributionServerConfig(clientProvider, credentials));
    } else {
        artifactoryServer = new ArtifactoryServer(artifactoryUrl, step.username, step.password, clientProvider);
        distributionServer = new DistributionServer(distributionUrl, step.username, step.password, clientProvider);
    }
    artifactoryServer.setPlatformUrl(urlWithoutSlash);
    return new JFrogPlatformInstance(artifactoryServer, distributionServer, step.url, "");
}