import org.jfrog.artifactory.client.ArtifactoryServer;
import org.jfrog.artifactory.client.distribution.DistributionServer;
import org.jfrog.artifactory.client.distribution.DistributionServer.Builder;
import org.jfrog.artifactory.client.distribution.DistributionServer.Mode;
import org.jfrog.artifactory.client.okhttp.OkHttpClientConfig;
import org.jfrog.artifactory.client.okhttp.OkHttpClientConfig.Builder as OkHttpBuilder;
import org.jfrog.artifactory.client.okhttp.OkHttpCredentialProvider;
import org.jfrog.artifactory.client.okhttp.OkHttpCredentialProvider.BasicCredentialProvider;
import org.jfrog.artifactory.client.okhttp.OkHttpFactory;
import org.jfrog.hudson.credentials.CredentialsConfig;
import org.jfrog.hudson.pipeline.common.types.ArtifactoryServerContext;
import org.jfrog.hudson.pipeline.common.types.DistributionServerContext;
import org.jfrog.hudson.pipeline.common.types.JFrogPlatformInstance;
import org.jfrog.hudson.pipeline.scripted.steps.CreateJFrogPlatformInstanceStep.Step;

import java.io.IOException;
import java.net.URL;
import java.util.Objects;

@Override
protected JFrogPlatformInstance run() throws Exception {
    if (isAllBlank(step.url, step.artifactoryUrl, step.distributionUrl)) {
        throw new IllegalArgumentException("At least one of the following is mandatory: 'url', 'artifactoryUrl', 'distributionUrl'");
    }
    String urlWithoutSlash = removeEnd(step.url, "/");
    String artifactoryUrl = defaultIfBlank(step.artifactoryUrl, urlWithoutSlash + "/" + "artifactory");
    String distributionUrl = defaultIfBlank(step.distributionUrl, urlWithoutSlash + "/" + "distribution");

    ArtifactoryServerContext artifactoryServerContext;
    DistributionServerContext distributionServerContext;
    if (!isEmpty(step.credentialsId)) {
        OkHttpBuilder okHttpBuilder = new OkHttpBuilder()
                .credentialProvider(new BasicCredentialProvider(step.credentialsId));
        ArtifactoryServer artifactoryServer = OkHttpFactory.createArtifactoryServer(artifactoryUrl, okHttpBuilder);
        OkHttpClientConfig config = artifactoryServer.getClientConfig();
        DistributionServer.Builder distributionBuilder = new Builder()
                .url(distributionUrl)
                .mode(Mode.REMOTE)
                .clientConfig(config);
        distributionServerContext = new DistributionServerContext(distributionBuilder);
        artifactoryServerContext = new ArtifactoryServerContext(artifactoryServer);
    } else {
        ArtifactoryServer artifactoryServer = new ArtifactoryServer(artifactoryUrl, step.username, step.password);
        DistributionServer distributionServer = new DistributionServer(distributionUrl, step.username, step.password);
        artifactoryServerContext = new ArtifactoryServerContext(artifactoryServer);
        distributionServerContext = new DistributionServerContext(distributionServer);
    }
    artifactoryServerContext.setPlatformUrl(urlWithoutSlash);
    return new JFrogPlatformInstance(artifactoryServerContext, distributionServerContext, step.url, "");
}