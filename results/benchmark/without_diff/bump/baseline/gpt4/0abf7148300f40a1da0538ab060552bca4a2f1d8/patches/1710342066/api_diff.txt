++ protected java.lang.Class net.sf.jasperreports.compilers.JRGroovyCompiler.loadClass(java.lang.String,net.sf.jasperreports.engine.design.CompiledClasses)
-- public java.lang.String net.sf.jasperreports.components.headertoolbar.actions.ConditionalFormattingData.getColumnType()
-- public java.lang.String net.sf.jasperreports.components.headertoolbar.actions.ConditionalFormattingData.getFieldOrVariableName()
-- public void net.sf.jasperreports.components.headertoolbar.actions.ConditionalFormattingData.setColumnType(java.lang.String)
-- public void net.sf.jasperreports.components.headertoolbar.actions.ConditionalFormattingData.setFieldOrVariableName(java.lang.String)
-- public java.lang.String net.sf.jasperreports.components.headertoolbar.actions.EditTextElementData.getDataType()
-- public void net.sf.jasperreports.components.headertoolbar.actions.EditTextElementData.setDataType(java.lang.String)
-- public void net.sf.jasperreports.components.list.DesignListContents.setWidth(int)
-- public B net.sf.jasperreports.components.spiderchart.StandardChartSettings.getHyperlinkType()
-- public TableReportContextXmlRule net.sf.jasperreports.components.table.TableReportContextXmlRule()
-- public net.sf.jasperreports.engine.type.CalculationEnum net.sf.jasperreports.components.table.fill.SubreportReturnValueAdapter.getCalculationValue()
-- public java.lang.String net.sf.jasperreports.components.table.fill.SubreportReturnValueAdapter.getSubreportVariable()
++ protected bool net.sf.jasperreports.components.table.fill.TableReport.isAccessibleTable()
-- protected bool net.sf.jasperreports.components.table.fill.TableReport.isGeneratePdfTags()
-- public abstract void net.sf.jasperreports.crosstabs.JRCrosstab.setIgnoreWidth(boolean)
-- public void net.sf.jasperreports.crosstabs.base.JRBaseCrosstab.setIgnoreWidth(boolean)
-- public void net.sf.jasperreports.crosstabs.design.JRDesignCrosstab.setIgnoreWidth(boolean)
-- public ClassNameFieldHandler net.sf.jasperreports.data.ClassNameFieldHandler()
-- public java.lang.Object net.sf.jasperreports.data.ClassNameFieldHandler.convertUponGet(java.lang.Object)
-- public java.lang.Object net.sf.jasperreports.data.ClassNameFieldHandler.convertUponSet(java.lang.Object)
-- public java.lang.Class net.sf.jasperreports.data.ClassNameFieldHandler.getFieldType()
-- public java.lang.Object net.sf.jasperreports.data.ClassNameFieldHandler.newInstance(java.lang.Object)
-- public abstract net.sf.jasperreports.data.DataAdapterService net.sf.jasperreports.data.DataAdapterServiceFactory.getDataAdapterService(net.sf.jasperreports.engine.JasperReportsContext,net.sf.jasperreports.data.DataAdapter)
-- public net.sf.jasperreports.data.DataAdapterService net.sf.jasperreports.data.DefaultDataAdapterServiceFactory.getDataAdapterService(net.sf.jasperreports.engine.JasperReportsContext,net.sf.jasperreports.data.DataAdapter)
-- public LocaleFieldHandler net.sf.jasperreports.data.LocaleFieldHandler()
-- public java.lang.Object net.sf.jasperreports.data.LocaleFieldHandler.convertUponGet(java.lang.Object)
-- public java.lang.Object net.sf.jasperreports.data.LocaleFieldHandler.convertUponSet(java.lang.Object)
-- public java.lang.Class net.sf.jasperreports.data.LocaleFieldHandler.getFieldType()
-- public java.lang.Object net.sf.jasperreports.data.LocaleFieldHandler.newInstance(java.lang.Object)
-- public TimeZoneFieldHandler net.sf.jasperreports.data.TimeZoneFieldHandler()
-- public java.lang.Object net.sf.jasperreports.data.TimeZoneFieldHandler.convertUponGet(java.lang.Object)
-- public java.lang.Object net.sf.jasperreports.data.TimeZoneFieldHandler.convertUponSet(java.lang.Object)
-- public java.lang.Class net.sf.jasperreports.data.TimeZoneFieldHandler.getFieldType()
-- public java.lang.Object net.sf.jasperreports.data.TimeZoneFieldHandler.newInstance(java.lang.Object)
-- public ExcelFormatFieldHandler net.sf.jasperreports.data.excel.ExcelFormatFieldHandler()
-- public java.lang.Object net.sf.jasperreports.data.excel.ExcelFormatFieldHandler.convertUponGet(java.lang.Object)
-- public java.lang.Object net.sf.jasperreports.data.excel.ExcelFormatFieldHandler.convertUponSet(java.lang.Object)
-- public java.lang.Class net.sf.jasperreports.data.excel.ExcelFormatFieldHandler.getFieldType()
-- public java.lang.Object net.sf.jasperreports.data.excel.ExcelFormatFieldHandler.newInstance(java.lang.Object)
-- public RequestMethodFieldHandler net.sf.jasperreports.data.http.RequestMethodFieldHandler()
-- public java.lang.Object net.sf.jasperreports.data.http.RequestMethodFieldHandler.convertUponGet(java.lang.Object)
-- public java.lang.Object net.sf.jasperreports.data.http.RequestMethodFieldHandler.convertUponSet(java.lang.Object)
-- public java.lang.Class net.sf.jasperreports.data.http.RequestMethodFieldHandler.getFieldType()
-- public java.lang.Object net.sf.jasperreports.data.http.RequestMethodFieldHandler.newInstance(java.lang.Object)
++ public MapDeserializer net.sf.jasperreports.data.jdbc.MapDeserializer()
++ public MapDeserializer net.sf.jasperreports.data.jdbc.MapDeserializer(java.lang.Class)
++ public java.util.Map net.sf.jasperreports.data.jdbc.MapDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
++ public java.util.Map net.sf.jasperreports.data.jdbc.MapDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map)
++ public MapSerializer net.sf.jasperreports.data.jdbc.MapSerializer()
++ public MapSerializer net.sf.jasperreports.data.jdbc.MapSerializer(java.lang.Class)
++ public bool net.sf.jasperreports.data.jdbc.MapSerializer.isUnwrappingSerializer()
++ public void net.sf.jasperreports.data.jdbc.MapSerializer.serialize(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
-- public TransactionIsolationHandler net.sf.jasperreports.data.jdbc.TransactionIsolationHandler()
-- public java.lang.Object net.sf.jasperreports.data.jdbc.TransactionIsolationHandler.convertUponGet(java.lang.Object)
-- public java.lang.Object net.sf.jasperreports.data.jdbc.TransactionIsolationHandler.convertUponSet(java.lang.Object)
-- public java.lang.Class net.sf.jasperreports.data.jdbc.TransactionIsolationHandler.getFieldType()
-- public java.lang.Object net.sf.jasperreports.data.jdbc.TransactionIsolationHandler.newInstance(java.lang.Object)
-- public JsonExpressionLanguageFieldHandler net.sf.jasperreports.data.json.JsonExpressionLanguageFieldHandler()
-- public java.lang.Object net.sf.jasperreports.data.json.JsonExpressionLanguageFieldHandler.convertUponGet(java.lang.Object)
-- public java.lang.Object net.sf.jasperreports.data.json.JsonExpressionLanguageFieldHandler.convertUponSet(java.lang.Object)
-- public java.lang.Class net.sf.jasperreports.data.json.JsonExpressionLanguageFieldHandler.getFieldType()
-- public java.lang.Object net.sf.jasperreports.data.json.JsonExpressionLanguageFieldHandler.newInstance(java.lang.Object)
-- public void net.sf.jasperreports.engine.JRAbstractChartCustomizer.init(net.sf.jasperreports.engine.fill.JRBaseFiller,net.sf.jasperreports.engine.fill.JRFillChart)
-- public abstract org.jfree.chart.plot.PlotOrientation net.sf.jasperreports.engine.JRChartPlot.getOrientation()
-- public abstract void net.sf.jasperreports.engine.JRChartPlot.setOrientation(org.jfree.chart.plot.PlotOrientation)
-- public abstract void net.sf.jasperreports.engine.JRCommonRectangle.setRadius(int)
-- public abstract void net.sf.jasperreports.engine.JRFont.setBold(boolean)
-- public abstract void net.sf.jasperreports.engine.JRFont.setItalic(boolean)
-- public abstract void net.sf.jasperreports.engine.JRFont.setPdfEmbedded(boolean)
-- public abstract void net.sf.jasperreports.engine.JRFont.setStrikeThrough(boolean)
-- public abstract void net.sf.jasperreports.engine.JRFont.setUnderline(boolean)
-- public static B net.sf.jasperreports.engine.JRHyperlinkHelper.getHyperlinkTarget(java.lang.String)
-- public static B net.sf.jasperreports.engine.JRHyperlinkHelper.getHyperlinkType(java.lang.String)
-- public static B net.sf.jasperreports.engine.JRHyperlinkHelper.getHyperlinkType(net.sf.jasperreports.engine.JRHyperlink)
-- public static java.lang.String net.sf.jasperreports.engine.JRHyperlinkHelper.getLinkTarget(byte)
-- public static java.lang.String net.sf.jasperreports.engine.JRHyperlinkHelper.getLinkType(byte)
-- public abstract void net.sf.jasperreports.engine.JRImage.setUsingCache(boolean)
-- public abstract void net.sf.jasperreports.engine.JRLineBox.setBottomPadding(int)
-- public abstract void net.sf.jasperreports.engine.JRLineBox.setLeftPadding(int)
-- public abstract void net.sf.jasperreports.engine.JRLineBox.setPadding(int)
-- public abstract void net.sf.jasperreports.engine.JRLineBox.setRightPadding(int)
-- public abstract void net.sf.jasperreports.engine.JRLineBox.setTopPadding(int)
-- public abstract net.sf.jasperreports.engine.JRStyleContainer net.sf.jasperreports.engine.JRPen.getStyleContainer()
-- public abstract void net.sf.jasperreports.engine.JRPen.setLineWidth(float)
-- public abstract void net.sf.jasperreports.engine.JRPrintRectangle.setRadius(int)
-- public abstract void net.sf.jasperreports.engine.JRStyle.setBlankWhenNull(boolean)
-- public abstract void net.sf.jasperreports.engine.JRStyle.setBold(boolean)
-- public abstract void net.sf.jasperreports.engine.JRStyle.setItalic(boolean)
-- public abstract void net.sf.jasperreports.engine.JRStyle.setPdfEmbedded(boolean)
-- public abstract void net.sf.jasperreports.engine.JRStyle.setRadius(int)
-- public abstract void net.sf.jasperreports.engine.JRStyle.setStrikeThrough(boolean)
-- public abstract void net.sf.jasperreports.engine.JRStyle.setUnderline(boolean)
-- public abstract net.sf.jasperreports.engine.type.CalculationEnum net.sf.jasperreports.engine.JRSubreportReturnValue.getCalculationValue()
-- public abstract java.lang.String net.sf.jasperreports.engine.JRSubreportReturnValue.getSubreportVariable()
-- public org.jfree.chart.plot.PlotOrientation net.sf.jasperreports.engine.base.JRBaseChartPlot.getOrientation()
-- public void net.sf.jasperreports.engine.base.JRBaseChartPlot.setOrientation(org.jfree.chart.plot.PlotOrientation)
-- public void net.sf.jasperreports.engine.base.JRBaseFont.setBold(boolean)
-- public void net.sf.jasperreports.engine.base.JRBaseFont.setItalic(boolean)
-- public void net.sf.jasperreports.engine.base.JRBaseFont.setPdfEmbedded(boolean)
-- public void net.sf.jasperreports.engine.base.JRBaseFont.setStrikeThrough(boolean)
-- public void net.sf.jasperreports.engine.base.JRBaseFont.setUnderline(boolean)
-- public B net.sf.jasperreports.engine.base.JRBaseImage.getHyperlinkType()
-- public void net.sf.jasperreports.engine.base.JRBaseImage.setUsingCache(boolean)
-- public void net.sf.jasperreports.engine.base.JRBaseLineBox.setBottomPadding(int)
-- public void net.sf.jasperreports.engine.base.JRBaseLineBox.setLeftPadding(int)
-- public void net.sf.jasperreports.engine.base.JRBaseLineBox.setPadding(int)
-- public void net.sf.jasperreports.engine.base.JRBaseLineBox.setRightPadding(int)
-- public void net.sf.jasperreports.engine.base.JRBaseLineBox.setTopPadding(int)
-- public net.sf.jasperreports.engine.JRStyleContainer net.sf.jasperreports.engine.base.JRBasePen.getStyleContainer()
-- public void net.sf.jasperreports.engine.base.JRBasePen.setLineWidth(float)
-- public void net.sf.jasperreports.engine.base.JRBasePrintRectangle.setRadius(int)
-- public void net.sf.jasperreports.engine.base.JRBasePrintText.setBold(boolean)
-- public void net.sf.jasperreports.engine.base.JRBasePrintText.setItalic(boolean)
-- public void net.sf.jasperreports.engine.base.JRBasePrintText.setPdfEmbedded(boolean)
-- public void net.sf.jasperreports.engine.base.JRBasePrintText.setStrikeThrough(boolean)
-- public void net.sf.jasperreports.engine.base.JRBasePrintText.setUnderline(boolean)
-- public void net.sf.jasperreports.engine.base.JRBaseRectangle.setRadius(int)
-- public void net.sf.jasperreports.engine.base.JRBaseStyle.setBlankWhenNull(boolean)
-- public void net.sf.jasperreports.engine.base.JRBaseStyle.setBold(boolean)
-- public void net.sf.jasperreports.engine.base.JRBaseStyle.setItalic(boolean)
-- public void net.sf.jasperreports.engine.base.JRBaseStyle.setPdfEmbedded(boolean)
-- public void net.sf.jasperreports.engine.base.JRBaseStyle.setRadius(int)
-- public void net.sf.jasperreports.engine.base.JRBaseStyle.setStrikeThrough(boolean)
-- public void net.sf.jasperreports.engine.base.JRBaseStyle.setUnderline(boolean)
-- public net.sf.jasperreports.engine.type.CalculationEnum net.sf.jasperreports.engine.base.JRBaseSubreportReturnValue.getCalculationValue()
-- public java.lang.String net.sf.jasperreports.engine.base.JRBaseSubreportReturnValue.getSubreportVariable()
-- public void net.sf.jasperreports.engine.base.JRBaseTextElement.setBold(boolean)
-- public void net.sf.jasperreports.engine.base.JRBaseTextElement.setItalic(boolean)
-- public void net.sf.jasperreports.engine.base.JRBaseTextElement.setPdfEmbedded(boolean)
-- public void net.sf.jasperreports.engine.base.JRBaseTextElement.setStrikeThrough(boolean)
-- public void net.sf.jasperreports.engine.base.JRBaseTextElement.setUnderline(boolean)
-- protected net.sf.jasperreports.engine.Renderable net.sf.jasperreports.engine.convert.ElementIconConverter.getRenderer(net.sf.jasperreports.engine.JasperReportsContext)
-- protected java.util.Date net.sf.jasperreports.engine.data.JRAbstractTextDataSource.getFormattedDate(java.text.DateFormat,java.lang.String,java.lang.Class)
-- protected java.lang.Number net.sf.jasperreports.engine.data.JRAbstractTextDataSource.getFormattedNumber(java.text.NumberFormat,java.lang.String,java.lang.Class)
-- public JRSortableDataSource net.sf.jasperreports.engine.data.JRSortableDataSource(net.sf.jasperreports.engine.JRDataSource,net.sf.jasperreports.engine.JRField[],net.sf.jasperreports.engine.JRSortField[],java.util.Locale)
-- public java.lang.Object net.sf.jasperreports.engine.data.JRSortableDataSource.getFieldValue(net.sf.jasperreports.engine.JRField)
-- public void net.sf.jasperreports.engine.data.JRSortableDataSource.moveFirst()
-- public bool net.sf.jasperreports.engine.data.JRSortableDataSource.next()
-- public static void net.sf.jasperreports.engine.data.JRSortableDataSource.verifySortFields(net.sf.jasperreports.engine.JRField[],net.sf.jasperreports.engine.JRSortField[])
-- public void net.sf.jasperreports.engine.data.JsonDataSource.close()
++ public CompiledClasses net.sf.jasperreports.engine.design.CompiledClasses()
++ public CompiledClasses net.sf.jasperreports.engine.design.CompiledClasses(java.util.Map)
++ public static net.sf.jasperreports.engine.design.CompiledClasses net.sf.jasperreports.engine.design.CompiledClasses.forClass(java.lang.String,byte[])
++ public [B net.sf.jasperreports.engine.design.CompiledClasses.getClassBytes(java.lang.String)
++ protected java.lang.Class net.sf.jasperreports.engine.design.JRAbstractJavaCompiler.loadClass(java.lang.String,net.sf.jasperreports.engine.design.CompiledClasses)
++ protected net.sf.jasperreports.engine.design.CompiledClasses net.sf.jasperreports.engine.design.JRAbstractJavaCompiler.toCompiledClasses(java.lang.String,java.io.Serializable)
-- public void net.sf.jasperreports.engine.design.JRDesignImage.setUsingCache(boolean)
-- public void net.sf.jasperreports.engine.design.JRDesignRectangle.setRadius(int)
-- public void net.sf.jasperreports.engine.design.JRDesignTextElement.setBold(boolean)
-- public void net.sf.jasperreports.engine.design.JRDesignTextElement.setItalic(boolean)
-- public void net.sf.jasperreports.engine.design.JRDesignTextElement.setPdfEmbedded(boolean)
-- public void net.sf.jasperreports.engine.design.JRDesignTextElement.setStrikeThrough(boolean)
-- public void net.sf.jasperreports.engine.design.JRDesignTextElement.setUnderline(boolean)
++ protected net.sf.jasperreports.engine.util.StyledTextListWriter net.sf.jasperreports.engine.export.AbstractPdfTextRenderer.getListWriter()
-- public void net.sf.jasperreports.engine.export.AbstractPdfTextRenderer.initialize(net.sf.jasperreports.engine.export.JRPdfExporter,net.sf.jasperreports.export.pdf.PdfProducer,net.sf.jasperreports.engine.JRPrintText,net.sf.jasperreports.engine.util.JRStyledText,int,int)
++ public void net.sf.jasperreports.engine.export.AbstractPdfTextRenderer.initialize(net.sf.jasperreports.engine.export.JRPdfExporter,net.sf.jasperreports.export.pdf.PdfProducer,net.sf.jasperreports.engine.export.JRPdfExporterTagHelper,net.sf.jasperreports.engine.JRPrintText,net.sf.jasperreports.engine.util.JRStyledText,int,int)
++ protected void net.sf.jasperreports.engine.export.AbstractPdfTextRenderer.renderParagraph(java.text.AttributedCharacterIterator,int,java.lang.String)
++ protected net.sf.jasperreports.engine.util.StyledTextListWriter net.sf.jasperreports.engine.export.AbstractTextRenderer.getListWriter()
++ public HtmlExporter$HtmlStyledTextListWriter net.sf.jasperreports.engine.export.HtmlExporter$HtmlStyledTextListWriter(net.sf.jasperreports.engine.export.HtmlExporter,java.lang.String)
++ public void net.sf.jasperreports.engine.export.HtmlExporter$HtmlStyledTextListWriter.endLi()
++ public void net.sf.jasperreports.engine.export.HtmlExporter$HtmlStyledTextListWriter.endOl()
++ public void net.sf.jasperreports.engine.export.HtmlExporter$HtmlStyledTextListWriter.endUl()
++ public void net.sf.jasperreports.engine.export.HtmlExporter$HtmlStyledTextListWriter.startLi(boolean)
++ public void net.sf.jasperreports.engine.export.HtmlExporter$HtmlStyledTextListWriter.startOl(java.lang.String,int)
++ public void net.sf.jasperreports.engine.export.HtmlExporter$HtmlStyledTextListWriter.startUl()
++ public java.lang.Void net.sf.jasperreports.engine.export.HtmlExporter$TableVisitor.visit(net.sf.jasperreports.engine.export.tabulator.NestedTableCell,net.sf.jasperreports.engine.export.tabulator.TablePosition)
-- protected void net.sf.jasperreports.engine.export.HtmlExporter.endCell()
++ protected void net.sf.jasperreports.engine.export.HtmlExporter.endCell(net.sf.jasperreports.engine.export.tabulator.TableCell$CellType)
++ protected void net.sf.jasperreports.engine.export.HtmlExporter.endHeading(net.sf.jasperreports.export.type.AccessibilityTagEnum)
-- protected void net.sf.jasperreports.engine.export.HtmlExporter.exportParagraph(net.sf.jasperreports.engine.JRPrintText,java.text.AttributedCharacterIterator,int,java.lang.String,java.lang.Integer,boolean,java.lang.String,boolean)
++ protected void net.sf.jasperreports.engine.export.HtmlExporter.exportParagraph(net.sf.jasperreports.engine.util.StyledTextWriteContext,net.sf.jasperreports.engine.JRPrintText,java.text.AttributedCharacterIterator,int,java.lang.String,java.lang.Integer,boolean,java.lang.String,boolean)
++ protected void net.sf.jasperreports.engine.export.HtmlExporter.exportStyledTextRun(java.lang.String,java.util.Map,java.lang.String,java.lang.String,boolean)
-- protected void net.sf.jasperreports.engine.export.HtmlExporter.exportStyledTextRun(java.util.Map,java.lang.String,java.lang.String,java.util.Locale,net.sf.jasperreports.engine.type.LineSpacingEnum,java.lang.Float,float,java.awt.Color,boolean)
++ protected java.lang.String net.sf.jasperreports.engine.export.HtmlExporter.getTextRunStyle(java.util.Map,java.util.Locale,net.sf.jasperreports.engine.type.LineSpacingEnum,java.lang.Float,float,java.awt.Color,boolean)
-- protected void net.sf.jasperreports.engine.export.HtmlExporter.startCell(int,int)
++ protected void net.sf.jasperreports.engine.export.HtmlExporter.startCell(int,int,net.sf.jasperreports.engine.export.tabulator.TableCell$CellType)
++ protected net.sf.jasperreports.export.type.AccessibilityTagEnum net.sf.jasperreports.engine.export.HtmlExporter.startHeading(net.sf.jasperreports.engine.JRPrintText)
++ protected void net.sf.jasperreports.engine.export.HtmlExporter.writeNestedTable(net.sf.jasperreports.engine.export.tabulator.Table,net.sf.jasperreports.engine.export.HtmlExporter$TableVisitor,net.sf.jasperreports.engine.export.tabulator.TableCell)
++ public static java.lang.String net.sf.jasperreports.engine.export.HyperlinkUtil.makeLinkParameterName(net.sf.jasperreports.engine.JRPrintHyperlink)
++ public static java.lang.String net.sf.jasperreports.engine.export.HyperlinkUtil.makeLinkPlaceholder(java.lang.String)
++ public static java.lang.String net.sf.jasperreports.engine.export.HyperlinkUtil.makeLinkPlaceholder(net.sf.jasperreports.engine.JRPrintHyperlink)
++ public static java.lang.String net.sf.jasperreports.engine.export.HyperlinkUtil.resolveLinks(java.lang.String,net.sf.jasperreports.engine.JRGenericPrintElement,net.sf.jasperreports.engine.export.JRHyperlinkProducer,boolean)
-- public static net.sf.jasperreports.engine.export.CutsInfo net.sf.jasperreports.engine.export.JRGridLayout.calculateXCuts(net.sf.jasperreports.engine.export.ExporterNature,java.util.List,int,int,int,int)
++ protected void net.sf.jasperreports.engine.export.JRPdfExporter.setReferenceHyperlink(net.sf.jasperreports.export.pdf.PdfChunk,net.sf.jasperreports.engine.JRPrintHyperlink,java.lang.String)
-- protected void net.sf.jasperreports.engine.export.JRPdfExporterTagHelper.createEndHeadingTags(java.lang.String)
++ protected void net.sf.jasperreports.engine.export.JRPdfExporterTagHelper.createEndHeadingTags(net.sf.jasperreports.engine.JRPrintElement,java.lang.String,net.sf.jasperreports.export.type.AccessibilityTagEnum)
-- protected void net.sf.jasperreports.engine.export.JRPdfExporterTagHelper.createStartHeadingTags(java.lang.String,java.lang.String)
++ protected void net.sf.jasperreports.engine.export.JRPdfExporterTagHelper.createStartHeadingTags(net.sf.jasperreports.engine.JRPrintElement,java.lang.String,net.sf.jasperreports.export.type.AccessibilityTagEnum)
++ public void net.sf.jasperreports.engine.export.JRPdfExporterTagHelper.endLi()
++ public void net.sf.jasperreports.engine.export.JRPdfExporterTagHelper.endOl()
++ public void net.sf.jasperreports.engine.export.JRPdfExporterTagHelper.endUl()
++ protected net.sf.jasperreports.engine.util.StyledTextListWriter net.sf.jasperreports.engine.export.JRPdfExporterTagHelper.getListWriter()
++ public void net.sf.jasperreports.engine.export.JRPdfExporterTagHelper.startLi(boolean)
++ public void net.sf.jasperreports.engine.export.JRPdfExporterTagHelper.startOl(java.lang.String,int)
++ public void net.sf.jasperreports.engine.export.JRPdfExporterTagHelper.startUl()
++ protected void net.sf.jasperreports.engine.export.JRRtfExporter.exportStyledTextRun(java.util.Map,java.lang.String,java.util.Locale,java.awt.Color)
-- protected java.lang.String net.sf.jasperreports.engine.export.JRXlsAbstractExporter.getColumnName(int)
++ public static void net.sf.jasperreports.engine.export.JsonExporter.writeBookmarks(java.util.List,java.io.Writer,net.sf.jasperreports.util.JacksonUtil)
-- public static D net.sf.jasperreports.engine.export.LengthUtil.inchNoRound(double)
-- public static D net.sf.jasperreports.engine.export.LengthUtil.inchRound(double)
-- public void net.sf.jasperreports.engine.export.PdfGlyphRenderer.initialize(net.sf.jasperreports.engine.export.JRPdfExporter,net.sf.jasperreports.export.pdf.PdfProducer,net.sf.jasperreports.engine.JRPrintText,net.sf.jasperreports.engine.util.JRStyledText,int,int)
++ public void net.sf.jasperreports.engine.export.PdfGlyphRenderer.initialize(net.sf.jasperreports.engine.export.JRPdfExporter,net.sf.jasperreports.export.pdf.PdfProducer,net.sf.jasperreports.engine.export.JRPdfExporterTagHelper,net.sf.jasperreports.engine.JRPrintText,net.sf.jasperreports.engine.util.JRStyledText,int,int)
-- public void net.sf.jasperreports.engine.export.SimplePdfTextRenderer.initialize(net.sf.jasperreports.engine.export.JRPdfExporter,net.sf.jasperreports.export.pdf.PdfProducer,net.sf.jasperreports.engine.JRPrintText,net.sf.jasperreports.engine.util.JRStyledText,int,int)
++ public void net.sf.jasperreports.engine.export.SimplePdfTextRenderer.initialize(net.sf.jasperreports.engine.export.JRPdfExporter,net.sf.jasperreports.export.pdf.PdfProducer,net.sf.jasperreports.engine.export.JRPdfExporterTagHelper,net.sf.jasperreports.engine.JRPrintText,net.sf.jasperreports.engine.util.JRStyledText,int,int)
-- public FileBufferedOasisZip net.sf.jasperreports.engine.export.oasis.FileBufferedOasisZip()
-- public FileBufferedOasisZip net.sf.jasperreports.engine.export.oasis.FileBufferedOasisZip(java.lang.String)
-- public net.sf.jasperreports.engine.export.zip.ExportZipEntry net.sf.jasperreports.engine.export.oasis.FileBufferedOasisZip.createEntry(java.lang.String)
-- public OasisZip net.sf.jasperreports.engine.export.oasis.OasisZip()
-- public net.sf.jasperreports.engine.export.ooxml.PptxSlideHelper net.sf.jasperreports.engine.export.ooxml.JRPptxExporter$ExporterContext.getSlideHelper()
-- public abstract net.sf.jasperreports.engine.export.ooxml.PptxSlideHelper net.sf.jasperreports.engine.export.ooxml.JRPptxExporterContext.getSlideHelper()
++ public abstract java.lang.Object net.sf.jasperreports.engine.export.tabulator.CellVisitor.visit(net.sf.jasperreports.engine.export.tabulator.NestedTableCell,java.lang.Object)
++ public NestedTableCell net.sf.jasperreports.engine.export.tabulator.NestedTableCell(net.sf.jasperreports.engine.export.tabulator.FrameCell,net.sf.jasperreports.engine.export.tabulator.Table)
++ public java.lang.Object net.sf.jasperreports.engine.export.tabulator.NestedTableCell.accept(net.sf.jasperreports.engine.export.tabulator.CellVisitor,java.lang.Object)
++ public net.sf.jasperreports.engine.export.tabulator.FrameCell net.sf.jasperreports.engine.export.tabulator.NestedTableCell.getParent()
++ public net.sf.jasperreports.engine.export.tabulator.Table net.sf.jasperreports.engine.export.tabulator.NestedTableCell.getTable()
++ public void net.sf.jasperreports.engine.export.tabulator.NestedTableCell.setParent(net.sf.jasperreports.engine.export.tabulator.FrameCell)
++ public net.sf.jasperreports.engine.export.tabulator.Cell net.sf.jasperreports.engine.export.tabulator.NestedTableCell.split()
++ public static net.sf.jasperreports.engine.export.tabulator.TableCell$CellType net.sf.jasperreports.engine.export.tabulator.TableCell$CellType.valueOf(java.lang.String)
++ public static net.sf.jasperreports.engine.export.tabulator.TableCell$CellType net.sf.jasperreports.engine.export.tabulator.TableCell$CellType.values()
-- public TableCell net.sf.jasperreports.engine.export.tabulator.TableCell(net.sf.jasperreports.engine.export.tabulator.Tabulator,net.sf.jasperreports.engine.export.tabulator.TablePosition,net.sf.jasperreports.engine.export.tabulator.Cell,net.sf.jasperreports.engine.JRPrintElement,int,int,java.awt.Color,net.sf.jasperreports.engine.JRLineBox)
++ public TableCell net.sf.jasperreports.engine.export.tabulator.TableCell(net.sf.jasperreports.engine.export.tabulator.Tabulator,net.sf.jasperreports.engine.export.tabulator.TablePosition,net.sf.jasperreports.engine.export.tabulator.Cell,net.sf.jasperreports.engine.JRPrintElement,net.sf.jasperreports.engine.export.tabulator.TableCell$CellType,int,int,java.awt.Color,net.sf.jasperreports.engine.JRLineBox)
++ public net.sf.jasperreports.engine.export.tabulator.TableCell$CellType net.sf.jasperreports.engine.export.tabulator.TableCell.getCellType()
++ public void net.sf.jasperreports.engine.export.tabulator.TableCell.setCellType(net.sf.jasperreports.engine.export.tabulator.TableCell$CellType)
++ public java.lang.Boolean net.sf.jasperreports.engine.export.tabulator.Tabulator$CollapseCheck.visit(net.sf.jasperreports.engine.export.tabulator.NestedTableCell,net.sf.jasperreports.engine.export.tabulator.Cell)
++ public java.lang.Boolean net.sf.jasperreports.engine.export.tabulator.Tabulator$ParentCheck.visit(net.sf.jasperreports.engine.export.tabulator.NestedTableCell,net.sf.jasperreports.engine.export.tabulator.FrameCell)
++ public net.sf.jasperreports.engine.export.tabulator.Cell net.sf.jasperreports.engine.export.tabulator.Tabulator$ParentDrop.visit(net.sf.jasperreports.engine.export.tabulator.NestedTableCell,net.sf.jasperreports.engine.export.tabulator.FrameCell)
++ public java.lang.Boolean net.sf.jasperreports.engine.export.tabulator.Tabulator$SpanCheck.visit(net.sf.jasperreports.engine.export.tabulator.NestedTableCell,net.sf.jasperreports.engine.export.tabulator.Cell)
++ public java.lang.Boolean net.sf.jasperreports.engine.export.tabulator.Tabulator$SpanRangeCheck.visit(net.sf.jasperreports.engine.export.tabulator.NestedTableCell,net.sf.jasperreports.engine.export.tabulator.Cell)
++ protected net.sf.jasperreports.engine.export.tabulator.TableCell net.sf.jasperreports.engine.export.tabulator.Tabulator$TableCellCreator.createFromParent(net.sf.jasperreports.engine.export.tabulator.Cell,net.sf.jasperreports.engine.export.tabulator.TablePosition)
++ protected net.sf.jasperreports.engine.export.tabulator.TableCell$CellType net.sf.jasperreports.engine.export.tabulator.Tabulator$TableCellCreator.getCellType(net.sf.jasperreports.engine.export.tabulator.BaseElementCell)
++ public net.sf.jasperreports.engine.export.tabulator.TableCell net.sf.jasperreports.engine.export.tabulator.Tabulator$TableCellCreator.visit(net.sf.jasperreports.engine.export.tabulator.NestedTableCell,net.sf.jasperreports.engine.export.tabulator.TablePosition)
-- public Tabulator net.sf.jasperreports.engine.export.tabulator.Tabulator(net.sf.jasperreports.engine.export.ExporterFilter,java.util.List)
++ public Tabulator net.sf.jasperreports.engine.export.tabulator.Tabulator(net.sf.jasperreports.engine.export.ExporterFilter,java.util.List,boolean)
++ protected void net.sf.jasperreports.engine.export.tabulator.Tabulator.layoutFrame(net.sf.jasperreports.engine.export.tabulator.Table,net.sf.jasperreports.engine.export.tabulator.FrameCell,int,int,net.sf.jasperreports.engine.export.PrintElementIndex,int,net.sf.jasperreports.engine.export.tabulator.DimensionRange,net.sf.jasperreports.engine.export.tabulator.DimensionRange,net.sf.jasperreports.engine.JRPrintFrame)
-- public void net.sf.jasperreports.engine.fill.CachingLineBox.setBottomPadding(int)
-- public void net.sf.jasperreports.engine.fill.CachingLineBox.setLeftPadding(int)
-- public void net.sf.jasperreports.engine.fill.CachingLineBox.setPadding(int)
-- public void net.sf.jasperreports.engine.fill.CachingLineBox.setRightPadding(int)
-- public void net.sf.jasperreports.engine.fill.CachingLineBox.setTopPadding(int)
-- public B net.sf.jasperreports.engine.fill.JRFillChart.getHyperlinkType()
-- public org.jfree.chart.plot.PlotOrientation net.sf.jasperreports.engine.fill.JRFillChartPlot.getOrientation()
-- public void net.sf.jasperreports.engine.fill.JRFillChartPlot.setOrientation(org.jfree.chart.plot.PlotOrientation)
-- public void net.sf.jasperreports.engine.fill.JRFillCrosstab.setIgnoreWidth(boolean)
-- protected void net.sf.jasperreports.engine.fill.JRFillDatasetRun.init()
++ protected void net.sf.jasperreports.engine.fill.JRFillFrame.evaluateStyle(byte)
-- protected bool net.sf.jasperreports.engine.fill.JRFillImage.fitImage(java.awt.geom.Dimension2D,int,boolean,net.sf.jasperreports.engine.type.HorizontalImageAlignEnum,net.sf.jasperreports.engine.type.VerticalImageAlignEnum)
++ protected bool net.sf.jasperreports.engine.fill.JRFillImage.fitImage(java.awt.geom.Dimension2D,net.sf.jasperreports.engine.util.ExifOrientationEnum,int,boolean,net.sf.jasperreports.engine.type.HorizontalImageAlignEnum,net.sf.jasperreports.engine.type.VerticalImageAlignEnum)
-- public B net.sf.jasperreports.engine.fill.JRFillImage.getHyperlinkType()
-- public void net.sf.jasperreports.engine.fill.JRFillImage.setUsingCache(boolean)
-- public void net.sf.jasperreports.engine.fill.JRFillRectangle.setRadius(int)
-- public net.sf.jasperreports.engine.JRFont net.sf.jasperreports.engine.fill.JRFillTextElement.getFont()
-- public void net.sf.jasperreports.engine.fill.JRFillTextElement.setBold(boolean)
-- public void net.sf.jasperreports.engine.fill.JRFillTextElement.setItalic(boolean)
-- public void net.sf.jasperreports.engine.fill.JRFillTextElement.setPdfEmbedded(boolean)
-- public void net.sf.jasperreports.engine.fill.JRFillTextElement.setStrikeThrough(boolean)
-- public void net.sf.jasperreports.engine.fill.JRFillTextElement.setUnderline(boolean)
-- public net.sf.jasperreports.engine.util.FileResolver net.sf.jasperreports.engine.fill.JRResourcesFillUtil$ResourcesFillContext.getFileResolver()
-- public java.net.URLStreamHandlerFactory net.sf.jasperreports.engine.fill.JRResourcesFillUtil$ResourcesFillContext.getUrlHandlerFactory()
-- public void net.sf.jasperreports.engine.fill.JRResourcesFillUtil$ResourcesFillContext.setFileResolver(net.sf.jasperreports.engine.util.FileResolver)
-- public void net.sf.jasperreports.engine.fill.JRResourcesFillUtil$ResourcesFillContext.setUrlHandlerFactory(java.net.URLStreamHandlerFactory)
-- public void net.sf.jasperreports.engine.fill.JRTemplatePrintRectangle.setRadius(int)
-- public void net.sf.jasperreports.engine.fill.JRTemplatePrintText.setBold(boolean)
-- public void net.sf.jasperreports.engine.fill.JRTemplatePrintText.setItalic(boolean)
-- public void net.sf.jasperreports.engine.fill.JRTemplatePrintText.setPdfEmbedded(boolean)
-- public void net.sf.jasperreports.engine.fill.JRTemplatePrintText.setStrikeThrough(boolean)
-- public void net.sf.jasperreports.engine.fill.JRTemplatePrintText.setUnderline(boolean)
-- public void net.sf.jasperreports.engine.fill.JRTemplateRectangle.setRadius(int)
-- public net.sf.jasperreports.engine.JRFont net.sf.jasperreports.engine.fill.JRTemplateText.getFont()
-- public B net.sf.jasperreports.engine.fill.JRTemplateText.getHyperlinkTarget()
-- public void net.sf.jasperreports.engine.fill.JRTemplateText.setBold(boolean)
-- public void net.sf.jasperreports.engine.fill.JRTemplateText.setItalic(boolean)
-- public void net.sf.jasperreports.engine.fill.JRTemplateText.setPdfEmbedded(boolean)
-- public void net.sf.jasperreports.engine.fill.JRTemplateText.setStrikeThrough(boolean)
-- public void net.sf.jasperreports.engine.fill.JRTemplateText.setUnderline(boolean)
-- public abstract java.lang.String net.sf.jasperreports.engine.fonts.FontFace.getFile()
-- public abstract java.lang.String net.sf.jasperreports.engine.fonts.FontFamily.getBoldItalicPdfFont()
-- public abstract java.lang.String net.sf.jasperreports.engine.fonts.FontFamily.getBoldPdfFont()
-- public abstract java.lang.String net.sf.jasperreports.engine.fonts.FontFamily.getItalicPdfFont()
-- public abstract java.lang.String net.sf.jasperreports.engine.fonts.FontFamily.getNormalPdfFont()
-- public java.awt.Font net.sf.jasperreports.engine.fonts.FontUtil.getAwtFontFromBundles(java.lang.String,int,int,java.util.Locale,boolean)
-- public net.sf.jasperreports.engine.fonts.FontInfo net.sf.jasperreports.engine.fonts.FontUtil.getFontInfoIgnoreCase(java.lang.String,java.util.Locale)
++ public java.awt.Font net.sf.jasperreports.engine.fonts.FontUtil.resolveDeserializedFont(java.awt.Font)
-- public SimpleFontFace net.sf.jasperreports.engine.fonts.SimpleFontFace(java.awt.Font)
-- public SimpleFontFace net.sf.jasperreports.engine.fonts.SimpleFontFace(java.lang.String)
-- public SimpleFontFace net.sf.jasperreports.engine.fonts.SimpleFontFace(net.sf.jasperreports.engine.JasperReportsContext,java.lang.String)
-- public java.lang.String net.sf.jasperreports.engine.fonts.SimpleFontFace.getFile()
-- public static net.sf.jasperreports.engine.fonts.SimpleFontFace net.sf.jasperreports.engine.fonts.SimpleFontFace.getInstance(net.sf.jasperreports.engine.JasperReportsContext,java.lang.String)
-- public java.lang.String net.sf.jasperreports.engine.fonts.SimpleFontFamily.getBoldItalicPdfFont()
-- public java.lang.String net.sf.jasperreports.engine.fonts.SimpleFontFamily.getBoldPdfFont()
-- public java.lang.String net.sf.jasperreports.engine.fonts.SimpleFontFamily.getItalicPdfFont()
-- public java.lang.String net.sf.jasperreports.engine.fonts.SimpleFontFamily.getNormalPdfFont()
-- public static J net.sf.jasperreports.engine.print.JRPrinterAWT.getImageSize(net.sf.jasperreports.engine.JasperPrint,float)
++ protected CompiledClassesLoader net.sf.jasperreports.engine.util.CompiledClassesLoader(java.lang.ClassLoader,net.sf.jasperreports.engine.util.ClassLoaderFilter,net.sf.jasperreports.engine.design.CompiledClasses)
++ protected CompiledClassesLoader net.sf.jasperreports.engine.util.CompiledClassesLoader(net.sf.jasperreports.engine.util.ClassLoaderFilter,net.sf.jasperreports.engine.design.CompiledClasses)
++ protected java.lang.Class net.sf.jasperreports.engine.util.CompiledClassesLoader.findClass(java.lang.String)
++ protected java.lang.Class net.sf.jasperreports.engine.util.CompiledClassesLoader.loadCompiledClass(java.lang.String)
++ public static net.sf.jasperreports.engine.util.ExifOrientationEnum net.sf.jasperreports.engine.util.ExifOrientationEnum.getByValue(int)
++ public final int net.sf.jasperreports.engine.util.ExifOrientationEnum.getOrientation()
++ public static net.sf.jasperreports.engine.util.ExifOrientationEnum net.sf.jasperreports.engine.util.ExifOrientationEnum.valueOf(java.lang.String)
++ public static net.sf.jasperreports.engine.util.ExifOrientationEnum net.sf.jasperreports.engine.util.ExifOrientationEnum.values()
++ public ExifUtil net.sf.jasperreports.engine.util.ExifUtil()
++ public static net.sf.jasperreports.engine.util.ExifOrientationEnum net.sf.jasperreports.engine.util.ExifUtil.getExifOrientation(byte[])
++ public ImageUtil$Insets net.sf.jasperreports.engine.util.ImageUtil$Insets(double,double,double,double)
++ public static net.sf.jasperreports.engine.util.ImageUtil$Insets net.sf.jasperreports.engine.util.ImageUtil.getExifCrop(net.sf.jasperreports.engine.JRPrintImage,net.sf.jasperreports.engine.util.ExifOrientationEnum,double,double,double,double)
++ public static net.sf.jasperreports.engine.util.ExifOrientationEnum net.sf.jasperreports.engine.util.ImageUtil.getExifOrientation(byte[])
++ public static net.sf.jasperreports.engine.type.RotationEnum net.sf.jasperreports.engine.util.ImageUtil.getRotation(net.sf.jasperreports.engine.type.RotationEnum,net.sf.jasperreports.engine.util.ExifOrientationEnum)
-- protected void net.sf.jasperreports.engine.util.JEditorPaneHtmlMarkupProcessor.addElements(java.util.List,javax.swing.text.Element)
-- protected java.util.Map net.sf.jasperreports.engine.util.JEditorPaneHtmlMarkupProcessor.getAttributes(javax.swing.text.AttributeSet)
++ public static java.lang.Class net.sf.jasperreports.engine.util.JRClassLoader.loadClassFromBytes(net.sf.jasperreports.engine.util.ClassLoaderFilter,java.lang.String,net.sf.jasperreports.engine.design.CompiledClasses)
-- public JRFloatLocaleConverter net.sf.jasperreports.engine.util.JRFloatLocaleConverter(java.util.Locale)
-- protected java.lang.Object net.sf.jasperreports.engine.util.JRFloatLocaleConverter.parse(java.lang.Object,java.lang.String)
-- public static java.io.InputStream net.sf.jasperreports.engine.util.JRLoader.loadToMemoryInputStream(java.io.InputStream)
++ public static [B net.sf.jasperreports.engine.util.JRLoader.readBytes(java.io.InputStream)
-- public java.lang.String net.sf.jasperreports.engine.util.JRQueryParser.asClauseText(java.lang.String[])
++ public JRStyledText net.sf.jasperreports.engine.util.JRStyledText(java.util.Locale,java.lang.String,java.util.Map,java.util.List)
++ public JRStyledTextParser$XmlStyledTextListWriter net.sf.jasperreports.engine.util.JRStyledTextParser$XmlStyledTextListWriter(net.sf.jasperreports.engine.util.JRStyledTextParser,java.lang.StringBuilder)
++ public void net.sf.jasperreports.engine.util.JRStyledTextParser$XmlStyledTextListWriter.endLi()
++ public void net.sf.jasperreports.engine.util.JRStyledTextParser$XmlStyledTextListWriter.endOl()
++ public void net.sf.jasperreports.engine.util.JRStyledTextParser$XmlStyledTextListWriter.endUl()
++ public void net.sf.jasperreports.engine.util.JRStyledTextParser$XmlStyledTextListWriter.startLi(boolean)
++ public void net.sf.jasperreports.engine.util.JRStyledTextParser$XmlStyledTextListWriter.startOl(java.lang.String,int)
++ public void net.sf.jasperreports.engine.util.JRStyledTextParser$XmlStyledTextListWriter.startUl()
-- public void net.sf.jasperreports.engine.util.JRStyledTextParser.writeChunk(java.lang.StringBuilder,java.util.Map,java.util.Map,java.lang.String)
++ public void net.sf.jasperreports.engine.util.JRStyledTextParser.writeChunk(net.sf.jasperreports.engine.util.StyledTextWriteContext,java.lang.StringBuilder,java.util.Map,java.util.Map,java.lang.String)
++ public static java.lang.String net.sf.jasperreports.engine.util.JRStyledTextUtil.getBulletText(net.sf.jasperreports.engine.util.StyledTextListInfo,net.sf.jasperreports.engine.util.StyledTextListItemInfo)
++ public static java.lang.String net.sf.jasperreports.engine.util.JRStyledTextUtil.getBulletText(net.sf.jasperreports.engine.util.StyledTextWriteContext)
++ public static net.sf.jasperreports.engine.util.JRStyledText net.sf.jasperreports.engine.util.JRStyledTextUtil.getBulletedStyledText(net.sf.jasperreports.engine.util.JRStyledText)
++ public static net.sf.jasperreports.engine.util.JRStyledText net.sf.jasperreports.engine.util.JRStyledTextUtil.getBulletedText(net.sf.jasperreports.engine.util.JRStyledText)
++ public static java.lang.String net.sf.jasperreports.engine.util.JRStyledTextUtil.getIndentedBulletText(net.sf.jasperreports.engine.util.StyledTextWriteContext)
++ public static void net.sf.jasperreports.engine.util.JRStyledTextUtil.resizeRuns(java.util.List,int,int)
-- public abstract int net.sf.jasperreports.engine.util.MaxFontSizeFinder.findMaxFontSize(java.text.AttributedCharacterIterator,int)
++ public StyledTextListInfo net.sf.jasperreports.engine.util.StyledTextListInfo(boolean,java.lang.String,java.lang.Integer,boolean)
++ public bool net.sf.jasperreports.engine.util.StyledTextListInfo.atLiEnd()
++ public bool net.sf.jasperreports.engine.util.StyledTextListInfo.atLiStart()
++ public int net.sf.jasperreports.engine.util.StyledTextListInfo.getCutStart()
++ public int net.sf.jasperreports.engine.util.StyledTextListInfo.getItemCount()
++ public int net.sf.jasperreports.engine.util.StyledTextListInfo.getItemIndex()
++ public int net.sf.jasperreports.engine.util.StyledTextListInfo.getStart()
++ public java.lang.String net.sf.jasperreports.engine.util.StyledTextListInfo.getType()
++ public bool net.sf.jasperreports.engine.util.StyledTextListInfo.hasParentLi()
++ public bool net.sf.jasperreports.engine.util.StyledTextListInfo.ordered()
++ public void net.sf.jasperreports.engine.util.StyledTextListInfo.setAtLiEnd(boolean)
++ public void net.sf.jasperreports.engine.util.StyledTextListInfo.setAtLiStart(boolean)
++ public void net.sf.jasperreports.engine.util.StyledTextListInfo.setCutStart(int)
++ public void net.sf.jasperreports.engine.util.StyledTextListInfo.setItemCount(int)
++ public void net.sf.jasperreports.engine.util.StyledTextListInfo.setItemIndex(int)
++ public void net.sf.jasperreports.engine.util.StyledTextListInfo.setStart(int)
++ public StyledTextListItemInfo net.sf.jasperreports.engine.util.StyledTextListItemInfo(int)
++ public int net.sf.jasperreports.engine.util.StyledTextListItemInfo.getItemIndex()
++ public bool net.sf.jasperreports.engine.util.StyledTextListItemInfo.noBullet()
++ public void net.sf.jasperreports.engine.util.StyledTextListItemInfo.setNoBullet(boolean)
++ public abstract void net.sf.jasperreports.engine.util.StyledTextListWriter.endLi()
++ public abstract void net.sf.jasperreports.engine.util.StyledTextListWriter.endOl()
++ public abstract void net.sf.jasperreports.engine.util.StyledTextListWriter.endUl()
++ public abstract void net.sf.jasperreports.engine.util.StyledTextListWriter.startLi(boolean)
++ public abstract void net.sf.jasperreports.engine.util.StyledTextListWriter.startOl(java.lang.String,int)
++ public abstract void net.sf.jasperreports.engine.util.StyledTextListWriter.startUl()
++ public StyledTextWriteContext net.sf.jasperreports.engine.util.StyledTextWriteContext()
++ public StyledTextWriteContext net.sf.jasperreports.engine.util.StyledTextWriteContext(boolean)
++ public int net.sf.jasperreports.engine.util.StyledTextWriteContext.getCommonListDepth()
++ public int net.sf.jasperreports.engine.util.StyledTextWriteContext.getDepth()
++ public net.sf.jasperreports.engine.util.StyledTextListInfo net.sf.jasperreports.engine.util.StyledTextWriteContext.getList()
++ public net.sf.jasperreports.engine.util.StyledTextListInfo net.sf.jasperreports.engine.util.StyledTextWriteContext.getList(int)
++ public net.sf.jasperreports.engine.util.StyledTextListItemInfo net.sf.jasperreports.engine.util.StyledTextWriteContext.getListItem()
++ public int net.sf.jasperreports.engine.util.StyledTextWriteContext.getPrevDepth()
++ public net.sf.jasperreports.engine.util.StyledTextListInfo net.sf.jasperreports.engine.util.StyledTextWriteContext.getPrevList()
++ public net.sf.jasperreports.engine.util.StyledTextListInfo net.sf.jasperreports.engine.util.StyledTextWriteContext.getPrevList(int)
++ public bool net.sf.jasperreports.engine.util.StyledTextWriteContext.isFirstRun()
++ public bool net.sf.jasperreports.engine.util.StyledTextWriteContext.isListEnd()
++ public bool net.sf.jasperreports.engine.util.StyledTextWriteContext.isListItemChange()
++ public bool net.sf.jasperreports.engine.util.StyledTextWriteContext.isListItemEnd()
++ public bool net.sf.jasperreports.engine.util.StyledTextWriteContext.isListItemStart()
++ public bool net.sf.jasperreports.engine.util.StyledTextWriteContext.isListStart()
++ public bool net.sf.jasperreports.engine.util.StyledTextWriteContext.listItemStartsWithNewLine()
++ public void net.sf.jasperreports.engine.util.StyledTextWriteContext.next(java.util.Map)
++ public void net.sf.jasperreports.engine.util.StyledTextWriteContext.next(java.util.Map,java.lang.String)
++ public bool net.sf.jasperreports.engine.util.StyledTextWriteContext.prevListItemEndedWithNewLine()
++ public void net.sf.jasperreports.engine.util.StyledTextWriteContext.writeLists(net.sf.jasperreports.engine.util.StyledTextListWriter)
++ protected java.lang.Object net.sf.jasperreports.engine.virtualization.VirtualizationInput.resolveObject(java.lang.Object)
-- protected static void net.sf.jasperreports.engine.xml.JRXmlDigesterFactory.addComponentRules(org.apache.commons.digester.Digester)
-- protected static void net.sf.jasperreports.engine.xml.JRXmlDigesterFactory.addPartComponentRules(org.apache.commons.digester.Digester)
-- public static void net.sf.jasperreports.engine.xml.JRXmlDigesterFactory.configureDigester(org.apache.commons.digester.Digester)
-- public static net.sf.jasperreports.engine.xml.JRXmlDigester net.sf.jasperreports.engine.xml.JRXmlDigesterFactory.createDigester()
-- protected static javax.xml.parsers.SAXParser net.sf.jasperreports.engine.xml.JRXmlDigesterFactory.createParser()
-- public static void net.sf.jasperreports.engine.xml.JRXmlDigesterFactory.setComponentsInternalEntityResources(net.sf.jasperreports.engine.xml.JRXmlDigester)
-- public JRXmlLoader net.sf.jasperreports.engine.xml.JRXmlLoader(org.apache.commons.digester.Digester)
-- protected void net.sf.jasperreports.engine.xml.JRXmlWriter.writeTemplates()
-- public PrintSaxParserFactory net.sf.jasperreports.engine.xml.PrintSaxParserFactory()
++ public static net.sf.jasperreports.export.type.AccessibilityTagEnum net.sf.jasperreports.export.type.AccessibilityTagEnum.getByName(java.lang.String)
++ public java.lang.String net.sf.jasperreports.export.type.AccessibilityTagEnum.getName()
++ public static net.sf.jasperreports.export.type.AccessibilityTagEnum net.sf.jasperreports.export.type.AccessibilityTagEnum.valueOf(java.lang.String)
++ public static net.sf.jasperreports.export.type.AccessibilityTagEnum net.sf.jasperreports.export.type.AccessibilityTagEnum.values()
-- public CastorDataAdapterPersistenceService net.sf.jasperreports.repo.CastorDataAdapterPersistenceService(net.sf.jasperreports.engine.JasperReportsContext)
-- public net.sf.jasperreports.repo.Resource net.sf.jasperreports.repo.CastorDataAdapterPersistenceService.load(java.lang.String,net.sf.jasperreports.repo.RepositoryService)
-- public net.sf.jasperreports.repo.Resource net.sf.jasperreports.repo.CastorDataAdapterPersistenceService.load(net.sf.jasperreports.repo.RepositoryContext,java.lang.String,net.sf.jasperreports.repo.RepositoryService)
-- public CastorObjectPersistenceService net.sf.jasperreports.repo.CastorObjectPersistenceService(net.sf.jasperreports.engine.JasperReportsContext)
-- public net.sf.jasperreports.repo.Resource net.sf.jasperreports.repo.CastorObjectPersistenceService.load(java.lang.String,net.sf.jasperreports.repo.RepositoryService)
-- public net.sf.jasperreports.repo.Resource net.sf.jasperreports.repo.CastorObjectPersistenceService.load(net.sf.jasperreports.repo.RepositoryContext,java.lang.String,net.sf.jasperreports.repo.RepositoryService)
-- public void net.sf.jasperreports.repo.CastorObjectPersistenceService.save(net.sf.jasperreports.repo.Resource,java.lang.String,net.sf.jasperreports.repo.RepositoryService)
-- public CastorResource net.sf.jasperreports.repo.CastorResource()
++ public JacksonDataAdapterPersistenceService net.sf.jasperreports.repo.JacksonDataAdapterPersistenceService(net.sf.jasperreports.engine.JasperReportsContext)
++ public net.sf.jasperreports.repo.Resource net.sf.jasperreports.repo.JacksonDataAdapterPersistenceService.load(java.lang.String,net.sf.jasperreports.repo.RepositoryService)
++ public net.sf.jasperreports.repo.Resource net.sf.jasperreports.repo.JacksonDataAdapterPersistenceService.load(net.sf.jasperreports.repo.RepositoryContext,java.lang.String,net.sf.jasperreports.repo.RepositoryService)
++ public JacksonObjectPersistenceService net.sf.jasperreports.repo.JacksonObjectPersistenceService(net.sf.jasperreports.engine.JasperReportsContext,java.lang.Class)
++ public net.sf.jasperreports.repo.Resource net.sf.jasperreports.repo.JacksonObjectPersistenceService.load(java.lang.String,net.sf.jasperreports.repo.RepositoryService)
++ public net.sf.jasperreports.repo.Resource net.sf.jasperreports.repo.JacksonObjectPersistenceService.load(net.sf.jasperreports.repo.RepositoryContext,java.lang.String,net.sf.jasperreports.repo.RepositoryService)
++ public void net.sf.jasperreports.repo.JacksonObjectPersistenceService.save(net.sf.jasperreports.repo.Resource,java.lang.String,net.sf.jasperreports.repo.RepositoryService)
++ public JacksonResource net.sf.jasperreports.repo.JacksonResource()
-- public static net.sf.jasperreports.util.CastorUtil net.sf.jasperreports.util.CastorUtil.getInstance(net.sf.jasperreports.engine.JasperReportsContext)
-- protected java.util.List net.sf.jasperreports.util.CastorUtil.getMappings(java.lang.String)
-- protected java.lang.String net.sf.jasperreports.util.CastorUtil.getVersion(net.sf.jasperreports.util.CastorMapping)
-- protected java.util.Map net.sf.jasperreports.util.CastorUtil.getXmlContextCache(java.lang.String)
-- protected bool net.sf.jasperreports.util.CastorUtil.isEligversionible(net.sf.jasperreports.util.CastorMapping,java.lang.String)
-- public java.lang.Object net.sf.jasperreports.util.CastorUtil.read(java.io.InputStream)
-- public static java.lang.Object net.sf.jasperreports.util.CastorUtil.read(java.io.InputStream,java.lang.Class)
-- public static java.lang.Object net.sf.jasperreports.util.CastorUtil.read(java.io.InputStream,java.lang.String)
-- public static java.lang.Object net.sf.jasperreports.util.CastorUtil.read(java.io.InputStream,org.exolab.castor.mapping.Mapping)
-- public static java.lang.Object net.sf.jasperreports.util.CastorUtil.read(org.w3c.dom.Node,java.lang.Class)
-- public static java.lang.Object net.sf.jasperreports.util.CastorUtil.read(org.w3c.dom.Node,java.lang.String)
-- public static java.lang.Object net.sf.jasperreports.util.CastorUtil.read(org.w3c.dom.Node,org.exolab.castor.mapping.Mapping)
-- public static java.lang.String net.sf.jasperreports.util.CastorUtil.write(java.lang.Object)
-- public void net.sf.jasperreports.util.CastorUtil.write(java.lang.Object,java.io.OutputStream)
-- public void net.sf.jasperreports.util.CastorUtil.write(java.lang.Object,java.io.Writer)
-- public static java.lang.String net.sf.jasperreports.util.CastorUtil.write(java.lang.Object,java.lang.String)
-- public static void net.sf.jasperreports.util.CastorUtil.write(java.lang.Object,java.lang.String,java.io.File)
-- public static void net.sf.jasperreports.util.CastorUtil.write(java.lang.Object,java.lang.String,java.io.Writer)
-- public static java.lang.String net.sf.jasperreports.util.CastorUtil.write(java.lang.Object,org.exolab.castor.mapping.Mapping)
-- public static void net.sf.jasperreports.util.CastorUtil.write(java.lang.Object,org.exolab.castor.mapping.Mapping,java.io.File)
-- public static void net.sf.jasperreports.util.CastorUtil.write(java.lang.Object,org.exolab.castor.mapping.Mapping,java.io.Writer)
-- public void net.sf.jasperreports.util.CastorUtil.writeToFile(java.lang.Object,java.lang.String)
-- public java.lang.String net.sf.jasperreports.util.CastorUtil.writeToString(java.lang.Object)
++ public JacksonMapping net.sf.jasperreports.util.JacksonMapping(java.lang.String,java.lang.String)
++ public java.lang.String net.sf.jasperreports.util.JacksonMapping.getClassName()
++ public java.lang.String net.sf.jasperreports.util.JacksonMapping.getName()
++ public void net.sf.jasperreports.util.JacksonMapping.setClassName(java.lang.String)
++ public void net.sf.jasperreports.util.JacksonMapping.setName(java.lang.String)
++ public JacksonMappingExtensionsRegistryFactory net.sf.jasperreports.util.JacksonMappingExtensionsRegistryFactory()
++ public net.sf.jasperreports.extensions.ExtensionsRegistry net.sf.jasperreports.util.JacksonMappingExtensionsRegistryFactory.createRegistry(java.lang.String,net.sf.jasperreports.engine.JRPropertiesMap)
++ public JacksonRuntimException net.sf.jasperreports.util.JacksonRuntimException(java.lang.Exception)
++ protected JacksonUtil net.sf.jasperreports.util.JacksonUtil(net.sf.jasperreports.engine.JasperReportsContext)
++ public void net.sf.jasperreports.util.JacksonUtil.addProperty(com.fasterxml.jackson.databind.node.ObjectNode,java.lang.String,java.lang.String)
++ public void net.sf.jasperreports.util.JacksonUtil.addProperty(com.fasterxml.jackson.databind.node.ObjectNode,java.lang.String,java.lang.String,java.lang.String)
++ public static net.sf.jasperreports.util.JacksonUtil net.sf.jasperreports.util.JacksonUtil.getInstance(net.sf.jasperreports.engine.JasperReportsContext)
++ public java.lang.String net.sf.jasperreports.util.JacksonUtil.getJsonString(java.lang.Object)
++ public com.fasterxml.jackson.databind.ObjectMapper net.sf.jasperreports.util.JacksonUtil.getObjectMapper()
++ public com.fasterxml.jackson.dataformat.xml.XmlMapper net.sf.jasperreports.util.JacksonUtil.getXmlMapper()
++ public java.lang.String net.sf.jasperreports.util.JacksonUtil.getXmlString(java.lang.Object)
++ public com.fasterxml.jackson.databind.node.ObjectNode net.sf.jasperreports.util.JacksonUtil.hyperlinkToJsonObject(net.sf.jasperreports.engine.JRPrintHyperlink)
++ public java.util.List net.sf.jasperreports.util.JacksonUtil.loadAsList(java.lang.String,java.lang.Class)
++ public java.util.List net.sf.jasperreports.util.JacksonUtil.loadList(java.lang.String,java.lang.Class)
++ public java.lang.Object net.sf.jasperreports.util.JacksonUtil.loadObject(java.lang.String,java.lang.Class)
++ public java.lang.Object net.sf.jasperreports.util.JacksonUtil.loadXml(java.io.InputStream,java.lang.Class)
++ public java.lang.Object net.sf.jasperreports.util.JacksonUtil.loadXml(java.lang.String,java.lang.Class)
-- public NoWriteFieldHandler net.sf.jasperreports.util.NoWriteFieldHandler()
-- public java.lang.Object net.sf.jasperreports.util.NoWriteFieldHandler.convertUponGet(java.lang.Object)
-- public java.lang.Object net.sf.jasperreports.util.NoWriteFieldHandler.convertUponSet(java.lang.Object)
-- public java.lang.Class net.sf.jasperreports.util.NoWriteFieldHandler.getFieldType()
-- public net.sf.jasperreports.extensions.ExtensionsRegistry net.sf.jasperreports.web.util.JacksonMappingExtensionsRegistryFactory.createRegistry(java.lang.String,net.sf.jasperreports.engine.JRPropertiesMap)
-- public void net.sf.jasperreports.web.util.JacksonUtil.addProperty(com.fasterxml.jackson.databind.node.ObjectNode,java.lang.String,java.lang.String)
-- public void net.sf.jasperreports.web.util.JacksonUtil.addProperty(com.fasterxml.jackson.databind.node.ObjectNode,java.lang.String,java.lang.String,java.lang.String)
-- public java.lang.String net.sf.jasperreports.web.util.JacksonUtil.getEscapedJsonString(java.lang.Object)
-- public java.lang.String net.sf.jasperreports.web.util.JacksonUtil.getJsonString(java.lang.Object)
-- public com.fasterxml.jackson.databind.ObjectMapper net.sf.jasperreports.web.util.JacksonUtil.getObjectMapper()
-- public com.fasterxml.jackson.databind.node.ObjectNode net.sf.jasperreports.web.util.JacksonUtil.hyperlinkToJsonObject(net.sf.jasperreports.engine.JRPrintHyperlink)
-- public java.util.List net.sf.jasperreports.web.util.JacksonUtil.loadAsList(java.lang.String,java.lang.Class)
-- public java.util.List net.sf.jasperreports.web.util.JacksonUtil.loadList(java.lang.String,java.lang.Class)
-- public java.lang.Object net.sf.jasperreports.web.util.JacksonUtil.loadObject(java.lang.String,java.lang.Class)