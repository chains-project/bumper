-- public abstract java.util.concurrent.ExecutorService org.reflections.Configuration.getExecutorService()
++ public abstract java.util.function.Predicate org.reflections.Configuration.getInputsFilter()
-- public abstract com.google.common.base.Predicate org.reflections.Configuration.getInputsFilter()
-- public abstract org.reflections.adapters.MetadataAdapter org.reflections.Configuration.getMetadataAdapter()
-- public abstract org.reflections.serializers.Serializer org.reflections.Configuration.getSerializer()
++ public abstract bool org.reflections.Configuration.isParallel()
++ public abstract bool org.reflections.Configuration.shouldExpandSuperTypes()
++ public static org.reflections.util.UtilQueryBuilder org.reflections.ReflectionUtils.extendType()
-- public static transient java.lang.Class org.reflections.ReflectionUtils.forName(java.lang.String,java.lang.ClassLoader[])
-- public static java.util.List org.reflections.ReflectionUtils.forNames(java.lang.Iterable,java.lang.ClassLoader[])
++ public static java.util.Set org.reflections.ReflectionUtils.get(org.reflections.util.QueryFunction)
++ public static transient java.util.Set org.reflections.ReflectionUtils.get(org.reflections.util.QueryFunction,java.util.function.Predicate[])
-- public static transient java.util.Set org.reflections.ReflectionUtils.getAll(java.util.Set,com.google.common.base.Predicate[])
-- public static transient java.util.Set org.reflections.ReflectionUtils.getAllAnnotations(java.lang.reflect.AnnotatedElement,com.google.common.base.Predicate[])
++ public static transient java.util.Set org.reflections.ReflectionUtils.getAllAnnotations(java.lang.reflect.AnnotatedElement,java.util.function.Predicate[])
-- public static transient java.util.Set org.reflections.ReflectionUtils.getAllConstructors(java.lang.Class,com.google.common.base.Predicate[])
++ public static transient java.util.Set org.reflections.ReflectionUtils.getAllConstructors(java.lang.Class,java.util.function.Predicate[])
-- public static transient java.util.Set org.reflections.ReflectionUtils.getAllFields(java.lang.Class,com.google.common.base.Predicate[])
++ public static transient java.util.Set org.reflections.ReflectionUtils.getAllFields(java.lang.Class,java.util.function.Predicate[])
-- public static transient java.util.Set org.reflections.ReflectionUtils.getAllMethods(java.lang.Class,com.google.common.base.Predicate[])
++ public static transient java.util.Set org.reflections.ReflectionUtils.getAllMethods(java.lang.Class,java.util.function.Predicate[])
-- public static transient java.util.Set org.reflections.ReflectionUtils.getAllSuperTypes(java.lang.Class,com.google.common.base.Predicate[])
++ public static transient java.util.Set org.reflections.ReflectionUtils.getAllSuperTypes(java.lang.Class,java.util.function.Predicate[])
-- public static transient java.util.Set org.reflections.ReflectionUtils.getAnnotations(java.lang.reflect.AnnotatedElement,com.google.common.base.Predicate[])
++ public static transient java.util.Set org.reflections.ReflectionUtils.getAnnotations(java.lang.reflect.AnnotatedElement,java.util.function.Predicate[])
-- public static transient java.util.Set org.reflections.ReflectionUtils.getConstructors(java.lang.Class,com.google.common.base.Predicate[])
++ public static transient java.util.Set org.reflections.ReflectionUtils.getConstructors(java.lang.Class,java.util.function.Predicate[])
-- public static transient java.util.Set org.reflections.ReflectionUtils.getFields(java.lang.Class,com.google.common.base.Predicate[])
++ public static transient java.util.Set org.reflections.ReflectionUtils.getFields(java.lang.Class,java.util.function.Predicate[])
-- public static transient java.util.Set org.reflections.ReflectionUtils.getMethods(java.lang.Class,com.google.common.base.Predicate[])
++ public static transient java.util.Set org.reflections.ReflectionUtils.getMethods(java.lang.Class,java.util.function.Predicate[])
++ public static java.util.Set org.reflections.ReflectionUtils.getSuperTypes(java.lang.Class)
++ public static transient java.lang.Object org.reflections.ReflectionUtils.invoke(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])
++ public static java.lang.annotation.Annotation org.reflections.ReflectionUtils.toAnnotation(java.util.Map)
++ public static java.lang.annotation.Annotation org.reflections.ReflectionUtils.toAnnotation(java.util.Map,java.lang.Class)
++ public static java.util.Map org.reflections.ReflectionUtils.toMap(java.lang.annotation.Annotation)
++ public static java.util.Map org.reflections.ReflectionUtils.toMap(java.lang.annotation.Annotation,java.lang.reflect.AnnotatedElement)
-- public static com.google.common.base.Predicate org.reflections.ReflectionUtils.withAnnotation(java.lang.Class)
-- public static com.google.common.base.Predicate org.reflections.ReflectionUtils.withAnnotation(java.lang.annotation.Annotation)
-- public static transient com.google.common.base.Predicate org.reflections.ReflectionUtils.withAnnotations(java.lang.Class[])
-- public static transient com.google.common.base.Predicate org.reflections.ReflectionUtils.withAnnotations(java.lang.annotation.Annotation[])
-- public static com.google.common.base.Predicate org.reflections.ReflectionUtils.withAnyParameterAnnotation(java.lang.Class)
-- public static com.google.common.base.Predicate org.reflections.ReflectionUtils.withAnyParameterAnnotation(java.lang.annotation.Annotation)
-- public static com.google.common.base.Predicate org.reflections.ReflectionUtils.withClassModifier(int)
-- public static com.google.common.base.Predicate org.reflections.ReflectionUtils.withModifier(int)
-- public static com.google.common.base.Predicate org.reflections.ReflectionUtils.withName(java.lang.String)
-- public static transient com.google.common.base.Predicate org.reflections.ReflectionUtils.withParameters(java.lang.Class[])
-- public static transient com.google.common.base.Predicate org.reflections.ReflectionUtils.withParametersAssignableTo(java.lang.Class[])
-- public static com.google.common.base.Predicate org.reflections.ReflectionUtils.withParametersCount(int)
-- public static com.google.common.base.Predicate org.reflections.ReflectionUtils.withPattern(java.lang.String)
-- public static com.google.common.base.Predicate org.reflections.ReflectionUtils.withPrefix(java.lang.String)
-- public static com.google.common.base.Predicate org.reflections.ReflectionUtils.withReturnType(java.lang.Class)
-- public static com.google.common.base.Predicate org.reflections.ReflectionUtils.withReturnTypeAssignableTo(java.lang.Class)
-- public static com.google.common.base.Predicate org.reflections.ReflectionUtils.withType(java.lang.Class)
-- public static com.google.common.base.Predicate org.reflections.ReflectionUtils.withTypeAssignableTo(java.lang.Class)
++ public Reflections org.reflections.Reflections(org.reflections.Store)
-- public org.reflections.Reflections org.reflections.Reflections.collect(java.io.File)
++ public org.reflections.Reflections org.reflections.Reflections.collect(java.io.File,org.reflections.serializers.Serializer)
-- public org.reflections.Reflections org.reflections.Reflections.collect(java.io.InputStream)
++ public org.reflections.Reflections org.reflections.Reflections.collect(java.io.InputStream,org.reflections.serializers.Serializer)
-- public static transient org.reflections.Reflections org.reflections.Reflections.collect(java.lang.String,com.google.common.base.Predicate,org.reflections.serializers.Serializer[])
++ public static org.reflections.Reflections org.reflections.Reflections.collect(java.lang.String,java.util.function.Predicate)
++ public static org.reflections.Reflections org.reflections.Reflections.collect(java.lang.String,java.util.function.Predicate,org.reflections.serializers.Serializer)
++ public void org.reflections.Reflections.expandSuperTypes(java.util.Map,java.util.Map)
++ public java.util.Set org.reflections.Reflections.get(org.reflections.util.QueryFunction)
++ public java.util.Set org.reflections.Reflections.getAll(org.reflections.scanners.Scanner)
-- protected java.lang.Iterable org.reflections.Reflections.getAllAnnotated(java.lang.Iterable,boolean,boolean)
-- public java.util.List org.reflections.Reflections.getConstructorParamNames(java.lang.reflect.Constructor)
-- public java.util.Set org.reflections.Reflections.getConstructorUsage(java.lang.reflect.Constructor)
-- public transient java.util.Set org.reflections.Reflections.getConstructorsMatchParams(java.lang.Class[])
-- public java.util.Set org.reflections.Reflections.getConstructorsWithAnyParamAnnotated(java.lang.Class)
-- public java.util.Set org.reflections.Reflections.getConstructorsWithAnyParamAnnotated(java.lang.annotation.Annotation)
++ public java.util.Set org.reflections.Reflections.getConstructorsWithParameter(java.lang.reflect.AnnotatedElement)
++ public transient java.util.Set org.reflections.Reflections.getConstructorsWithSignature(java.lang.Class[])
-- public java.util.Set org.reflections.Reflections.getFieldUsage(java.lang.reflect.Field)
++ public java.util.List org.reflections.Reflections.getMemberParameterNames(java.lang.reflect.Member)
++ public java.util.Collection org.reflections.Reflections.getMemberUsage(java.lang.reflect.Member)
-- public java.util.List org.reflections.Reflections.getMethodParamNames(java.lang.reflect.Method)
-- public java.util.Set org.reflections.Reflections.getMethodUsage(java.lang.reflect.Method)
-- public transient java.util.Set org.reflections.Reflections.getMethodsMatchParams(java.lang.Class[])
-- public java.util.Set org.reflections.Reflections.getMethodsWithAnyParamAnnotated(java.lang.Class)
-- public java.util.Set org.reflections.Reflections.getMethodsWithAnyParamAnnotated(java.lang.annotation.Annotation)
++ public java.util.Set org.reflections.Reflections.getMethodsWithParameter(java.lang.reflect.AnnotatedElement)
++ public transient java.util.Set org.reflections.Reflections.getMethodsWithSignature(java.lang.Class[])
-- public java.util.Set org.reflections.Reflections.getResources(com.google.common.base.Predicate)
++ public java.util.Set org.reflections.Reflections.getResources(java.lang.String)
-- protected void org.reflections.Reflections.scan()
++ protected java.util.Map org.reflections.Reflections.scan()
-- public void org.reflections.Reflections.scan(java.net.URL)
++ public Store org.reflections.Store(java.util.Map)
-- public Store org.reflections.Store(org.reflections.Configuration)
-- public com.google.common.collect.Multimap org.reflections.Store.get(java.lang.String)
-- public java.lang.Iterable org.reflections.Store.get(java.lang.String,java.lang.Iterable)
-- public transient java.lang.Iterable org.reflections.Store.get(java.lang.String,java.lang.String[])
-- public java.lang.Iterable org.reflections.Store.getAll(java.lang.String,java.lang.Iterable)
-- public java.lang.Iterable org.reflections.Store.getAll(java.lang.String,java.lang.String)
-- public com.google.common.collect.Multimap org.reflections.Store.getOrCreate(java.lang.String)
-- public java.util.Set org.reflections.Store.keySet()
-- public JavaReflectionAdapter org.reflections.adapters.JavaReflectionAdapter()
-- public bool org.reflections.adapters.JavaReflectionAdapter.acceptsInput(java.lang.String)
-- public java.util.List org.reflections.adapters.JavaReflectionAdapter.getClassAnnotationNames(java.lang.Class)
-- public java.lang.String org.reflections.adapters.JavaReflectionAdapter.getClassName(java.lang.Class)
-- public java.util.List org.reflections.adapters.JavaReflectionAdapter.getFieldAnnotationNames(java.lang.reflect.Field)
-- public java.lang.String org.reflections.adapters.JavaReflectionAdapter.getFieldName(java.lang.reflect.Field)
-- public java.util.List org.reflections.adapters.JavaReflectionAdapter.getFields(java.lang.Class)
-- public java.util.List org.reflections.adapters.JavaReflectionAdapter.getInterfacesNames(java.lang.Class)
-- public java.util.List org.reflections.adapters.JavaReflectionAdapter.getMethodAnnotationNames(java.lang.reflect.Member)
-- public java.lang.String org.reflections.adapters.JavaReflectionAdapter.getMethodFullKey(java.lang.Class,java.lang.reflect.Member)
-- public java.lang.String org.reflections.adapters.JavaReflectionAdapter.getMethodKey(java.lang.Class,java.lang.reflect.Member)
-- public java.lang.String org.reflections.adapters.JavaReflectionAdapter.getMethodModifier(java.lang.reflect.Member)
-- public java.lang.String org.reflections.adapters.JavaReflectionAdapter.getMethodName(java.lang.reflect.Member)
-- public java.util.List org.reflections.adapters.JavaReflectionAdapter.getMethods(java.lang.Class)
-- public static java.lang.String org.reflections.adapters.JavaReflectionAdapter.getName(java.lang.Class)
-- public java.lang.Class org.reflections.adapters.JavaReflectionAdapter.getOfCreateClassObject(org.reflections.vfs.Vfs$File)
-- public transient java.lang.Class org.reflections.adapters.JavaReflectionAdapter.getOfCreateClassObject(org.reflections.vfs.Vfs$File,java.lang.ClassLoader[])
-- public java.util.List org.reflections.adapters.JavaReflectionAdapter.getParameterAnnotationNames(java.lang.reflect.Member,int)
-- public java.util.List org.reflections.adapters.JavaReflectionAdapter.getParameterNames(java.lang.reflect.Member)
-- public java.lang.String org.reflections.adapters.JavaReflectionAdapter.getReturnTypeName(java.lang.reflect.Member)
-- public java.lang.String org.reflections.adapters.JavaReflectionAdapter.getSuperclassName(java.lang.Class)
-- public bool org.reflections.adapters.JavaReflectionAdapter.isPublic(java.lang.Object)
-- public JavassistAdapter org.reflections.adapters.JavassistAdapter()
-- public bool org.reflections.adapters.JavassistAdapter.acceptsInput(java.lang.String)
-- public java.util.List org.reflections.adapters.JavassistAdapter.getClassAnnotationNames(javassist.bytecode.ClassFile)
-- public java.lang.String org.reflections.adapters.JavassistAdapter.getClassName(javassist.bytecode.ClassFile)
-- public java.util.List org.reflections.adapters.JavassistAdapter.getFieldAnnotationNames(javassist.bytecode.FieldInfo)
-- public java.lang.String org.reflections.adapters.JavassistAdapter.getFieldName(javassist.bytecode.FieldInfo)
-- public java.util.List org.reflections.adapters.JavassistAdapter.getFields(javassist.bytecode.ClassFile)
-- public java.util.List org.reflections.adapters.JavassistAdapter.getInterfacesNames(javassist.bytecode.ClassFile)
-- public java.util.List org.reflections.adapters.JavassistAdapter.getMethodAnnotationNames(javassist.bytecode.MethodInfo)
-- public java.lang.String org.reflections.adapters.JavassistAdapter.getMethodFullKey(javassist.bytecode.ClassFile,javassist.bytecode.MethodInfo)
-- public java.lang.String org.reflections.adapters.JavassistAdapter.getMethodKey(javassist.bytecode.ClassFile,javassist.bytecode.MethodInfo)
-- public java.lang.String org.reflections.adapters.JavassistAdapter.getMethodModifier(javassist.bytecode.MethodInfo)
-- public java.lang.String org.reflections.adapters.JavassistAdapter.getMethodName(javassist.bytecode.MethodInfo)
-- public java.util.List org.reflections.adapters.JavassistAdapter.getMethods(javassist.bytecode.ClassFile)
-- public javassist.bytecode.ClassFile org.reflections.adapters.JavassistAdapter.getOfCreateClassObject(org.reflections.vfs.Vfs$File)
-- public java.util.List org.reflections.adapters.JavassistAdapter.getParameterAnnotationNames(javassist.bytecode.MethodInfo,int)
-- public java.util.List org.reflections.adapters.JavassistAdapter.getParameterNames(javassist.bytecode.MethodInfo)
-- public java.lang.String org.reflections.adapters.JavassistAdapter.getReturnTypeName(javassist.bytecode.MethodInfo)
-- public java.lang.String org.reflections.adapters.JavassistAdapter.getSuperclassName(javassist.bytecode.ClassFile)
-- public bool org.reflections.adapters.JavassistAdapter.isPublic(java.lang.Object)
-- public abstract bool org.reflections.adapters.MetadataAdapter.acceptsInput(java.lang.String)
-- public abstract java.util.List org.reflections.adapters.MetadataAdapter.getClassAnnotationNames(java.lang.Object)
-- public abstract java.lang.String org.reflections.adapters.MetadataAdapter.getClassName(java.lang.Object)
-- public abstract java.util.List org.reflections.adapters.MetadataAdapter.getFieldAnnotationNames(java.lang.Object)
-- public abstract java.lang.String org.reflections.adapters.MetadataAdapter.getFieldName(java.lang.Object)
-- public abstract java.util.List org.reflections.adapters.MetadataAdapter.getFields(java.lang.Object)
-- public abstract java.util.List org.reflections.adapters.MetadataAdapter.getInterfacesNames(java.lang.Object)
-- public abstract java.util.List org.reflections.adapters.MetadataAdapter.getMethodAnnotationNames(java.lang.Object)
-- public abstract java.lang.String org.reflections.adapters.MetadataAdapter.getMethodFullKey(java.lang.Object,java.lang.Object)
-- public abstract java.lang.String org.reflections.adapters.MetadataAdapter.getMethodKey(java.lang.Object,java.lang.Object)
-- public abstract java.lang.String org.reflections.adapters.MetadataAdapter.getMethodModifier(java.lang.Object)
-- public abstract java.lang.String org.reflections.adapters.MetadataAdapter.getMethodName(java.lang.Object)
-- public abstract java.util.List org.reflections.adapters.MetadataAdapter.getMethods(java.lang.Object)
-- public abstract java.lang.Object org.reflections.adapters.MetadataAdapter.getOfCreateClassObject(org.reflections.vfs.Vfs$File)
-- public abstract java.util.List org.reflections.adapters.MetadataAdapter.getParameterAnnotationNames(java.lang.Object,int)
-- public abstract java.util.List org.reflections.adapters.MetadataAdapter.getParameterNames(java.lang.Object)
-- public abstract java.lang.String org.reflections.adapters.MetadataAdapter.getReturnTypeName(java.lang.Object)
-- public abstract java.lang.String org.reflections.adapters.MetadataAdapter.getSuperclassName(java.lang.Object)
-- public abstract bool org.reflections.adapters.MetadataAdapter.isPublic(java.lang.Object)
-- public AbstractScanner org.reflections.scanners.AbstractScanner()
-- public bool org.reflections.scanners.AbstractScanner.acceptResult(java.lang.String)
-- public bool org.reflections.scanners.AbstractScanner.acceptsInput(java.lang.String)
-- public bool org.reflections.scanners.AbstractScanner.equals(java.lang.Object)
-- public org.reflections.scanners.Scanner org.reflections.scanners.AbstractScanner.filterResultsBy(com.google.common.base.Predicate)
-- public org.reflections.Configuration org.reflections.scanners.AbstractScanner.getConfiguration()
-- protected org.reflections.adapters.MetadataAdapter org.reflections.scanners.AbstractScanner.getMetadataAdapter()
-- public com.google.common.base.Predicate org.reflections.scanners.AbstractScanner.getResultFilter()
-- public com.google.common.collect.Multimap org.reflections.scanners.AbstractScanner.getStore()
-- public int org.reflections.scanners.AbstractScanner.hashCode()
++ public java.lang.String org.reflections.scanners.AbstractScanner.index()
-- public abstract void org.reflections.scanners.AbstractScanner.scan(java.lang.Object)
++ public java.util.List org.reflections.scanners.AbstractScanner.scan(javassist.bytecode.ClassFile)
-- public java.lang.Object org.reflections.scanners.AbstractScanner.scan(org.reflections.vfs.Vfs$File,java.lang.Object)
-- public void org.reflections.scanners.AbstractScanner.setConfiguration(org.reflections.Configuration)
-- public void org.reflections.scanners.AbstractScanner.setResultFilter(com.google.common.base.Predicate)
-- public void org.reflections.scanners.AbstractScanner.setStore(com.google.common.collect.Multimap)
-- public void org.reflections.scanners.FieldAnnotationsScanner.scan(java.lang.Object)
++ public MemberUsageScanner org.reflections.scanners.MemberUsageScanner(java.lang.ClassLoader[])
++ public org.reflections.scanners.Scanner org.reflections.scanners.MemberUsageScanner.filterResultsBy(java.util.function.Predicate)
++ public static java.lang.String org.reflections.scanners.MemberUsageScanner.parameterNames(javassist.bytecode.MethodInfo)
--  java.lang.String org.reflections.scanners.MemberUsageScanner.parameterNames(javassist.bytecode.MethodInfo)
-- public void org.reflections.scanners.MemberUsageScanner.scan(java.lang.Object)
++ public java.util.List org.reflections.scanners.MemberUsageScanner.scan(javassist.bytecode.ClassFile)
-- public void org.reflections.scanners.MethodAnnotationsScanner.scan(java.lang.Object)
-- public void org.reflections.scanners.MethodParameterNamesScanner.scan(java.lang.Object)
++ public java.util.List org.reflections.scanners.MethodParameterNamesScanner.scan(javassist.bytecode.ClassFile)
-- public void org.reflections.scanners.MethodParameterScanner.scan(java.lang.Object)
-- public bool org.reflections.scanners.ResourcesScanner.acceptsInput(java.lang.String)
-- public void org.reflections.scanners.ResourcesScanner.scan(java.lang.Object)
-- public java.lang.Object org.reflections.scanners.ResourcesScanner.scan(org.reflections.vfs.Vfs$File,java.lang.Object)
-- public abstract bool org.reflections.scanners.Scanner.acceptResult(java.lang.String)
-- public abstract bool org.reflections.scanners.Scanner.acceptsInput(java.lang.String)
++ public bool org.reflections.scanners.Scanner.acceptsInput(java.lang.String)
++ public java.util.List org.reflections.scanners.Scanner.entries(java.lang.String,java.lang.String)
++ public java.util.List org.reflections.scanners.Scanner.entries(java.lang.String,java.util.Collection)
++ public java.util.List org.reflections.scanners.Scanner.entries(java.util.Collection,java.lang.String)
++ public java.util.Map$Entry org.reflections.scanners.Scanner.entry(java.lang.String,java.lang.String)
-- public abstract org.reflections.scanners.Scanner org.reflections.scanners.Scanner.filterResultsBy(com.google.common.base.Predicate)
-- public abstract com.google.common.collect.Multimap org.reflections.scanners.Scanner.getStore()
++ public java.lang.String org.reflections.scanners.Scanner.index()
++ public abstract java.util.List org.reflections.scanners.Scanner.scan(javassist.bytecode.ClassFile)
++ public java.util.List org.reflections.scanners.Scanner.scan(org.reflections.vfs.Vfs$File)
-- public abstract java.lang.Object org.reflections.scanners.Scanner.scan(org.reflections.vfs.Vfs$File,java.lang.Object)
-- public abstract void org.reflections.scanners.Scanner.setConfiguration(org.reflections.Configuration)
-- public abstract void org.reflections.scanners.Scanner.setStore(com.google.common.collect.Multimap)
++ protected bool org.reflections.scanners.Scanners.acceptResult(java.lang.String)
++ public org.reflections.scanners.Scanners org.reflections.scanners.Scanners.filterResultsBy(java.util.function.Predicate)
++ public java.lang.String org.reflections.scanners.Scanners.index()
++ public final java.util.List org.reflections.scanners.Scanners.scan(javassist.bytecode.ClassFile)
++ public static org.reflections.scanners.Scanners org.reflections.scanners.Scanners.valueOf(java.lang.String)
++ public static org.reflections.scanners.Scanners org.reflections.scanners.Scanners.values()
-- public void org.reflections.scanners.SubTypesScanner.scan(java.lang.Object)
++ public java.util.List org.reflections.scanners.SubTypesScanner.scan(javassist.bytecode.ClassFile)
-- public void org.reflections.scanners.TypeAnnotationsScanner.scan(java.lang.Object)
++ public org.reflections.scanners.TypeElementsScanner org.reflections.scanners.TypeElementsScanner.filterResultsBy(java.util.function.Predicate)
-- public void org.reflections.scanners.TypeElementsScanner.scan(java.lang.Object)
++ public java.util.List org.reflections.scanners.TypeElementsScanner.scan(javassist.bytecode.ClassFile)
-- public TypesScanner org.reflections.scanners.TypesScanner()
-- public void org.reflections.scanners.TypesScanner.scan(java.lang.Object)
-- public java.lang.Object org.reflections.scanners.TypesScanner.scan(org.reflections.vfs.Vfs$File,java.lang.Object)
++ protected void org.reflections.serializers.JavaCodeSerializer.addAnnotations(java.util.List,java.util.List)
++ protected void org.reflections.serializers.JavaCodeSerializer.addClass(java.util.List,java.lang.String)
++ protected void org.reflections.serializers.JavaCodeSerializer.addFields(java.util.List,java.util.List)
++ protected void org.reflections.serializers.JavaCodeSerializer.addMethods(java.util.List,java.util.List,java.util.List)
++ protected void org.reflections.serializers.JavaCodeSerializer.addPackages(java.util.List,int)
++ protected void org.reflections.serializers.JavaCodeSerializer.indentClose(java.util.List)
++ protected int org.reflections.serializers.JavaCodeSerializer.indentOpen(java.util.List,java.util.List)
-- public static java.lang.annotation.Annotation org.reflections.serializers.JavaCodeSerializer.resolveAnnotation(java.lang.Class)
-- public static java.lang.Class org.reflections.serializers.JavaCodeSerializer.resolveClass(java.lang.Class)
-- public static java.lang.Class org.reflections.serializers.JavaCodeSerializer.resolveClassOf(java.lang.Class)
-- public static java.lang.reflect.Field org.reflections.serializers.JavaCodeSerializer.resolveField(java.lang.Class)
-- public static java.lang.reflect.Method org.reflections.serializers.JavaCodeSerializer.resolveMethod(java.lang.Class)
-- public java.lang.String org.reflections.serializers.JavaCodeSerializer.toString(org.reflections.Reflections)
++ private void org.reflections.serializers.JavaCodeSerializer.toString(org.reflections.Reflections)
-- public JavaCodeSerializer1 org.reflections.serializers.JavaCodeSerializer1()
-- public org.reflections.Reflections org.reflections.serializers.JavaCodeSerializer1.read(java.io.InputStream)
-- public static java.lang.annotation.Annotation org.reflections.serializers.JavaCodeSerializer1.resolveAnnotation(java.lang.Class)
-- public static java.lang.Class org.reflections.serializers.JavaCodeSerializer1.resolveClass(java.lang.Class)
-- public static java.lang.Class org.reflections.serializers.JavaCodeSerializer1.resolveClassOf(java.lang.Class)
-- public static java.lang.reflect.Field org.reflections.serializers.JavaCodeSerializer1.resolveField(java.lang.Class)
-- public static java.lang.reflect.Method org.reflections.serializers.JavaCodeSerializer1.resolveMethod(java.lang.Class)
-- public java.io.File org.reflections.serializers.JavaCodeSerializer1.save(org.reflections.Reflections,java.lang.String)
-- public java.lang.String org.reflections.serializers.JavaCodeSerializer1.toString(org.reflections.Reflections)
-- public JavassistSerializer org.reflections.serializers.JavassistSerializer(org.reflections.Configuration)
-- public org.reflections.Reflections org.reflections.serializers.JavassistSerializer.read(java.io.InputStream)
-- public java.io.File org.reflections.serializers.JavassistSerializer.save(org.reflections.Reflections,java.lang.String)
-- public java.lang.String org.reflections.serializers.JavassistSerializer.toString(org.reflections.Reflections)
-- public java.lang.String org.reflections.serializers.JsonSerializer.toString(org.reflections.Reflections)
++ public static java.io.File org.reflections.serializers.Serializer.prepareFile(java.lang.String)
-- public abstract java.lang.String org.reflections.serializers.Serializer.toString(org.reflections.Reflections)
-- public java.lang.String org.reflections.serializers.XmlSerializer.toString(org.reflections.Reflections)
++ public AnnotationMergeCollector org.reflections.util.AnnotationMergeCollector()
++ public AnnotationMergeCollector org.reflections.util.AnnotationMergeCollector(java.lang.reflect.AnnotatedElement)
++ public AnnotationMergeCollector org.reflections.util.AnnotationMergeCollector(java.lang.reflect.AnnotatedElement,java.util.function.BiFunction)
++ public java.util.function.BiConsumer org.reflections.util.AnnotationMergeCollector.accumulator()
++ public java.util.Set org.reflections.util.AnnotationMergeCollector.characteristics()
++ public java.util.function.BinaryOperator org.reflections.util.AnnotationMergeCollector.combiner()
++ public java.util.function.Function org.reflections.util.AnnotationMergeCollector.finisher()
++ public java.util.function.Supplier org.reflections.util.AnnotationMergeCollector.supplier()
-- public org.reflections.util.ConfigurationBuilder org.reflections.util.ConfigurationBuilder.addClassLoader(java.lang.ClassLoader)
-- public org.reflections.util.ConfigurationBuilder org.reflections.util.ConfigurationBuilder.addClassLoaders(java.util.Collection)
-- public org.reflections.util.ConfigurationBuilder org.reflections.util.ConfigurationBuilder.filterInputsBy(com.google.common.base.Predicate)
++ public org.reflections.util.ConfigurationBuilder org.reflections.util.ConfigurationBuilder.filterInputsBy(java.util.function.Predicate)
++ public transient org.reflections.util.ConfigurationBuilder org.reflections.util.ConfigurationBuilder.forPackage(java.lang.String,java.lang.ClassLoader[])
-- public java.util.concurrent.ExecutorService org.reflections.util.ConfigurationBuilder.getExecutorService()
-- public com.google.common.base.Predicate org.reflections.util.ConfigurationBuilder.getInputsFilter()
++ public java.util.function.Predicate org.reflections.util.ConfigurationBuilder.getInputsFilter()
-- public org.reflections.adapters.MetadataAdapter org.reflections.util.ConfigurationBuilder.getMetadataAdapter()
-- public org.reflections.serializers.Serializer org.reflections.util.ConfigurationBuilder.getSerializer()
++ public bool org.reflections.util.ConfigurationBuilder.isParallel()
-- public void org.reflections.util.ConfigurationBuilder.setClassLoaders(java.lang.ClassLoader[])
++ public org.reflections.util.ConfigurationBuilder org.reflections.util.ConfigurationBuilder.setClassLoaders(java.lang.ClassLoader[])
-- public org.reflections.util.ConfigurationBuilder org.reflections.util.ConfigurationBuilder.setExecutorService(java.util.concurrent.ExecutorService)
++ public org.reflections.util.ConfigurationBuilder org.reflections.util.ConfigurationBuilder.setExpandSuperTypes(boolean)
-- public void org.reflections.util.ConfigurationBuilder.setInputsFilter(com.google.common.base.Predicate)
++ public org.reflections.util.ConfigurationBuilder org.reflections.util.ConfigurationBuilder.setInputsFilter(java.util.function.Predicate)
-- public org.reflections.util.ConfigurationBuilder org.reflections.util.ConfigurationBuilder.setMetadataAdapter(org.reflections.adapters.MetadataAdapter)
++ public org.reflections.util.ConfigurationBuilder org.reflections.util.ConfigurationBuilder.setParallel(boolean)
-- public org.reflections.util.ConfigurationBuilder org.reflections.util.ConfigurationBuilder.setSerializer(org.reflections.serializers.Serializer)
++ public bool org.reflections.util.ConfigurationBuilder.shouldExpandSuperTypes()
-- public org.reflections.util.ConfigurationBuilder org.reflections.util.ConfigurationBuilder.useParallelExecutor()
-- public org.reflections.util.ConfigurationBuilder org.reflections.util.ConfigurationBuilder.useParallelExecutor(int)
-- public bool org.reflections.util.FilterBuilder$Exclude.apply(java.lang.String)
++ public bool org.reflections.util.FilterBuilder$Exclude.test(java.lang.String)
-- public bool org.reflections.util.FilterBuilder$Include.apply(java.lang.String)
++ public bool org.reflections.util.FilterBuilder$Include.test(java.lang.String)
-- public abstract bool org.reflections.util.FilterBuilder$Matcher.apply(java.lang.String)
++ public bool org.reflections.util.FilterBuilder$Matcher.equals(java.lang.Object)
++ public int org.reflections.util.FilterBuilder$Matcher.hashCode()
-- public org.reflections.util.FilterBuilder org.reflections.util.FilterBuilder.add(com.google.common.base.Predicate)
++ public org.reflections.util.FilterBuilder org.reflections.util.FilterBuilder.add(java.util.function.Predicate)
-- public bool org.reflections.util.FilterBuilder.apply(java.lang.String)
++ public bool org.reflections.util.FilterBuilder.equals(java.lang.Object)
-- public org.reflections.util.FilterBuilder org.reflections.util.FilterBuilder.excludePackage(java.lang.Class)
++ public org.reflections.util.FilterBuilder org.reflections.util.FilterBuilder.excludePattern(java.lang.String)
++ public int org.reflections.util.FilterBuilder.hashCode()
-- public org.reflections.util.FilterBuilder org.reflections.util.FilterBuilder.includePackage(java.lang.Class)
++ public org.reflections.util.FilterBuilder org.reflections.util.FilterBuilder.includePackage(java.lang.String)
-- public transient org.reflections.util.FilterBuilder org.reflections.util.FilterBuilder.includePackage(java.lang.String[])
++ public org.reflections.util.FilterBuilder org.reflections.util.FilterBuilder.includePattern(java.lang.String)
-- public static org.reflections.util.FilterBuilder org.reflections.util.FilterBuilder.parse(java.lang.String)
-- public static java.lang.String org.reflections.util.FilterBuilder.prefix(java.lang.String)
++ public bool org.reflections.util.FilterBuilder.test(java.lang.String)
++ public JavassistHelper org.reflections.util.JavassistHelper()
++ public static java.lang.String org.reflections.util.JavassistHelper.fieldName(javassist.bytecode.ClassFile,javassist.bytecode.FieldInfo)
++ public static java.util.List org.reflections.util.JavassistHelper.getAnnotations(java.util.function.Function)
++ public static java.util.stream.Stream org.reflections.util.JavassistHelper.getConstructors(javassist.bytecode.ClassFile)
++ public static java.util.stream.Stream org.reflections.util.JavassistHelper.getMethods(javassist.bytecode.ClassFile)
++ public static java.util.List org.reflections.util.JavassistHelper.getParameters(javassist.bytecode.MethodInfo)
++ public static java.util.List org.reflections.util.JavassistHelper.getParametersAnnotations(javassist.bytecode.MethodInfo)
++ public static java.lang.String org.reflections.util.JavassistHelper.getReturnType(javassist.bytecode.MethodInfo)
++ public static bool org.reflections.util.JavassistHelper.isPublic(java.lang.Object)
++ public static java.lang.String org.reflections.util.JavassistHelper.methodName(javassist.bytecode.ClassFile,javassist.bytecode.MethodInfo)
++ public transient java.lang.Class org.reflections.util.NameHelper.forClass(java.lang.String,java.lang.ClassLoader[])
++ public transient java.lang.reflect.Constructor org.reflections.util.NameHelper.forConstructor(java.lang.String,java.lang.ClassLoader[])
++ public java.lang.reflect.AnnotatedElement org.reflections.util.NameHelper.forElement(java.lang.String,java.lang.Class,java.lang.ClassLoader[])
++ public transient java.lang.reflect.Field org.reflections.util.NameHelper.forField(java.lang.String,java.lang.ClassLoader[])
++ public transient java.lang.reflect.Member org.reflections.util.NameHelper.forMember(java.lang.String,java.lang.ClassLoader[])
++ public transient java.lang.reflect.Method org.reflections.util.NameHelper.forMethod(java.lang.String,java.lang.ClassLoader[])
++ public transient java.lang.Object org.reflections.util.NameHelper.forName(java.lang.String,java.lang.Class,java.lang.ClassLoader[])
++ public transient java.util.Collection org.reflections.util.NameHelper.forNames(java.util.Collection,java.lang.Class,java.lang.ClassLoader[])
++ public transient java.util.Collection org.reflections.util.NameHelper.forNames(java.util.Collection,java.lang.ClassLoader[])
++ public java.lang.String org.reflections.util.NameHelper.toName(java.lang.Class)
++ public java.lang.String org.reflections.util.NameHelper.toName(java.lang.reflect.AnnotatedElement)
++ public java.lang.String org.reflections.util.NameHelper.toName(java.lang.reflect.Constructor)
++ public java.lang.String org.reflections.util.NameHelper.toName(java.lang.reflect.Field)
++ public java.lang.String org.reflections.util.NameHelper.toName(java.lang.reflect.Method)
++ public transient java.util.Collection org.reflections.util.NameHelper.toNames(java.lang.reflect.AnnotatedElement[])
++ public java.util.Collection org.reflections.util.NameHelper.toNames(java.util.Collection)
++ public org.reflections.util.QueryFunction org.reflections.util.QueryBuilder.get(java.lang.String)
++ public org.reflections.util.QueryFunction org.reflections.util.QueryBuilder.get(java.lang.reflect.AnnotatedElement)
++ public org.reflections.util.QueryFunction org.reflections.util.QueryBuilder.get(java.util.Collection)
++ public org.reflections.util.QueryFunction org.reflections.util.QueryBuilder.getAll(java.util.Collection)
++ public org.reflections.util.QueryFunction org.reflections.util.QueryBuilder.getAllIncluding(java.lang.String)
++ public org.reflections.util.QueryFunction org.reflections.util.QueryBuilder.getAllIncluding(java.util.Collection)
++ public java.lang.String org.reflections.util.QueryBuilder.index()
++ public org.reflections.util.QueryFunction org.reflections.util.QueryBuilder.of(java.lang.String)
++ public transient org.reflections.util.QueryFunction org.reflections.util.QueryBuilder.of(java.lang.reflect.AnnotatedElement[])
++ public org.reflections.util.QueryFunction org.reflections.util.QueryBuilder.of(java.util.Collection)
++ public org.reflections.util.QueryFunction org.reflections.util.QueryBuilder.of(java.util.Set)
++ public org.reflections.util.QueryFunction org.reflections.util.QueryBuilder.of(org.reflections.util.QueryFunction)
++ public org.reflections.util.QueryFunction org.reflections.util.QueryBuilder.with(java.lang.String)
++ public transient org.reflections.util.QueryFunction org.reflections.util.QueryBuilder.with(java.lang.reflect.AnnotatedElement[])
++ public org.reflections.util.QueryFunction org.reflections.util.QueryBuilder.with(java.util.Collection)
++ public org.reflections.util.QueryFunction org.reflections.util.QueryBuilder.with(java.util.Set)
++ public org.reflections.util.QueryFunction org.reflections.util.QueryFunction.add(org.reflections.util.QueryFunction)
++ public abstract java.util.Set org.reflections.util.QueryFunction.apply(java.lang.Object)
++ public org.reflections.util.QueryFunction org.reflections.util.QueryFunction.as()
++ public transient org.reflections.util.QueryFunction org.reflections.util.QueryFunction.as(java.lang.Class,java.lang.ClassLoader[])
++ public transient org.reflections.util.QueryFunction org.reflections.util.QueryFunction.asClass(java.lang.ClassLoader[])
++ public org.reflections.util.QueryFunction org.reflections.util.QueryFunction.asString()
++ public static org.reflections.util.QueryFunction org.reflections.util.QueryFunction.empty()
++ public org.reflections.util.QueryFunction org.reflections.util.QueryFunction.filter(java.util.function.Predicate)
++ public org.reflections.util.QueryFunction org.reflections.util.QueryFunction.flatMap(java.util.function.Function)
++ public org.reflections.util.QueryFunction org.reflections.util.QueryFunction.getAll(java.util.function.Function)
++ public org.reflections.util.QueryFunction org.reflections.util.QueryFunction.getAll(java.util.function.Function,java.util.function.Function)
++ public org.reflections.util.QueryFunction org.reflections.util.QueryFunction.map(java.util.function.Function)
++ public static org.reflections.util.QueryFunction org.reflections.util.QueryFunction.set(java.util.Collection)
++ public static org.reflections.util.QueryFunction org.reflections.util.QueryFunction.single(java.lang.Object)
++ public ReflectionUtilsPredicates org.reflections.util.ReflectionUtilsPredicates()
++ public static bool org.reflections.util.ReflectionUtilsPredicates.isAssignable(java.lang.Class[],java.lang.Class[])
++ public static java.util.function.Predicate org.reflections.util.ReflectionUtilsPredicates.withAnnotation(java.lang.Class)
++ public static java.util.function.Predicate org.reflections.util.ReflectionUtilsPredicates.withAnnotation(java.lang.annotation.Annotation)
++ public static transient java.util.function.Predicate org.reflections.util.ReflectionUtilsPredicates.withAnnotations(java.lang.Class[])
++ public static transient java.util.function.Predicate org.reflections.util.ReflectionUtilsPredicates.withAnnotations(java.lang.annotation.Annotation[])
++ public static java.util.function.Predicate org.reflections.util.ReflectionUtilsPredicates.withAnyParameterAnnotation(java.lang.Class)
++ public static java.util.function.Predicate org.reflections.util.ReflectionUtilsPredicates.withAnyParameterAnnotation(java.lang.annotation.Annotation)
++ public static java.util.function.Predicate org.reflections.util.ReflectionUtilsPredicates.withClassModifier(int)
++ public static java.util.function.Predicate org.reflections.util.ReflectionUtilsPredicates.withInterface()
++ public static java.util.function.Predicate org.reflections.util.ReflectionUtilsPredicates.withModifier(int)
++ public static java.util.function.Predicate org.reflections.util.ReflectionUtilsPredicates.withName(java.lang.String)
++ public static java.util.function.Predicate org.reflections.util.ReflectionUtilsPredicates.withNamePrefix(java.lang.String)
++ public static transient java.util.function.Predicate org.reflections.util.ReflectionUtilsPredicates.withParameters(java.lang.Class[])
++ public static transient java.util.function.Predicate org.reflections.util.ReflectionUtilsPredicates.withParametersAssignableFrom(java.lang.Class[])
++ public static transient java.util.function.Predicate org.reflections.util.ReflectionUtilsPredicates.withParametersAssignableTo(java.lang.Class[])
++ public static java.util.function.Predicate org.reflections.util.ReflectionUtilsPredicates.withParametersCount(int)
++ public static java.util.function.Predicate org.reflections.util.ReflectionUtilsPredicates.withPattern(java.lang.String)
++ public static java.util.function.Predicate org.reflections.util.ReflectionUtilsPredicates.withPrefix(java.lang.String)
++ public static java.util.function.Predicate org.reflections.util.ReflectionUtilsPredicates.withPublic()
++ public static java.util.function.Predicate org.reflections.util.ReflectionUtilsPredicates.withReturnType(java.lang.Class)
++ public static java.util.function.Predicate org.reflections.util.ReflectionUtilsPredicates.withReturnTypeAssignableFrom(java.lang.Class)
++ public static java.util.function.Predicate org.reflections.util.ReflectionUtilsPredicates.withStatic()
++ public static java.util.function.Predicate org.reflections.util.ReflectionUtilsPredicates.withType(java.lang.Class)
++ public static java.util.function.Predicate org.reflections.util.ReflectionUtilsPredicates.withTypeAssignableTo(java.lang.Class)
++ public abstract org.reflections.util.QueryFunction org.reflections.util.UtilQueryBuilder.get(java.lang.Object)
++ public org.reflections.util.QueryFunction org.reflections.util.UtilQueryBuilder.of(java.lang.Object)
++ public org.reflections.util.QueryFunction org.reflections.util.UtilQueryBuilder.of(java.lang.Object,java.util.function.Predicate)
++ public org.reflections.util.QueryFunction org.reflections.util.UtilQueryBuilder.of(org.reflections.util.QueryFunction)
-- public Utils org.reflections.util.Utils()
-- public static void org.reflections.util.Utils.close(java.io.InputStream)
-- public static org.slf4j.Logger org.reflections.util.Utils.findLogger(java.lang.Class)
-- public static transient java.util.Set org.reflections.util.Utils.getConstructorsFromDescriptors(java.lang.Iterable,java.lang.ClassLoader[])
-- public static transient java.lang.reflect.Field org.reflections.util.Utils.getFieldFromString(java.lang.String,java.lang.ClassLoader[])
-- public static transient java.lang.reflect.Member org.reflections.util.Utils.getMemberFromDescriptor(java.lang.String,java.lang.ClassLoader[])
-- public static transient java.util.Set org.reflections.util.Utils.getMembersFromDescriptors(java.lang.Iterable,java.lang.ClassLoader[])
-- public static transient java.util.Set org.reflections.util.Utils.getMethodsFromDescriptors(java.lang.Iterable,java.lang.ClassLoader[])
-- public static bool org.reflections.util.Utils.isConstructor(java.lang.String)
-- public static bool org.reflections.util.Utils.isEmpty(java.lang.Object[])
-- public static bool org.reflections.util.Utils.isEmpty(java.lang.String)
-- public static java.lang.String org.reflections.util.Utils.name(java.lang.Class)
-- public static java.lang.String org.reflections.util.Utils.name(java.lang.reflect.Constructor)
-- public static java.lang.String org.reflections.util.Utils.name(java.lang.reflect.Field)
-- public static java.lang.String org.reflections.util.Utils.name(java.lang.reflect.Method)
-- public static transient java.util.List org.reflections.util.Utils.names(java.lang.Class[])
-- public static java.util.List org.reflections.util.Utils.names(java.lang.Iterable)
-- public static java.io.File org.reflections.util.Utils.prepareFile(java.lang.String)
-- public static java.lang.String org.reflections.util.Utils.repeat(java.lang.String,int)
-- public CommonsVfs2UrlType$Dir org.reflections.vfs.CommonsVfs2UrlType$Dir(org.apache.commons.vfs2.FileObject)
-- public void org.reflections.vfs.CommonsVfs2UrlType$Dir.close()
-- public java.lang.Iterable org.reflections.vfs.CommonsVfs2UrlType$Dir.getFiles()
-- public java.lang.String org.reflections.vfs.CommonsVfs2UrlType$Dir.getPath()
-- public CommonsVfs2UrlType$File org.reflections.vfs.CommonsVfs2UrlType$File(org.apache.commons.vfs2.FileObject,org.apache.commons.vfs2.FileObject)
-- public java.lang.String org.reflections.vfs.CommonsVfs2UrlType$File.getName()
-- public java.lang.String org.reflections.vfs.CommonsVfs2UrlType$File.getRelativePath()
-- public java.io.InputStream org.reflections.vfs.CommonsVfs2UrlType$File.openInputStream()
-- public java.io.InputStream org.reflections.vfs.JarInputFile.openInputStream()
++ public java.io.InputStream org.reflections.vfs.JarInputFile.openInputStream()
++ public static org.reflections.vfs.Vfs$Dir org.reflections.vfs.JbossDir.createDir(java.net.URL)
++ public java.lang.Iterable org.reflections.vfs.JbossDir.getFiles()
++ public java.lang.String org.reflections.vfs.JbossDir.getPath()
++ public JbossFile org.reflections.vfs.JbossFile(org.reflections.vfs.JbossDir,org.jboss.vfs.VirtualFile)
++ public java.lang.String org.reflections.vfs.JbossFile.getName()
++ public java.lang.String org.reflections.vfs.JbossFile.getRelativePath()
++ public java.io.InputStream org.reflections.vfs.JbossFile.openInputStream()
-- public void org.reflections.vfs.SystemDir.close()
-- public java.lang.String org.reflections.vfs.SystemDir.toString()
++ public void org.reflections.vfs.Vfs$Dir.close()
-- public abstract void org.reflections.vfs.Vfs$Dir.close()
-- public static java.lang.Iterable org.reflections.vfs.Vfs.findFiles(java.util.Collection,com.google.common.base.Predicate)
-- public static java.lang.Iterable org.reflections.vfs.Vfs.findFiles(java.util.Collection,java.lang.String,com.google.common.base.Predicate)
++ public static java.lang.Iterable org.reflections.vfs.Vfs.findFiles(java.util.Collection,java.lang.String,java.util.function.Predicate)
++ public static java.lang.Iterable org.reflections.vfs.Vfs.findFiles(java.util.Collection,java.util.function.Predicate)