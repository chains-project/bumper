1,7c1,13
< private static AnalysisEngineConfiguration buildAnalysisEngineConfiguration() {
<         return AnalysisEngineConfiguration.builder()
<                 .addEnabledLanguages(globalConfig.getEnabledLanguages())
<                 .setClientPid(globalConfig.getClientPid())
<                 .setExtraProperties(globalConfig.extraProperties())
<                 .setWorkDir(globalConfig.getWorkDir())
<                 .setModulesProvider(globalConfig.getModulesProvider())
---
> private static org.sonarsource.sonarlint.core.analysis.api.AnalysisEngineConfiguration buildAnalysisEngineConfiguration() {
>     return org.sonarsource.sonarlint.core.analysis.api.AnalysisEngineConfiguration.builder()
>             .addEnabledLanguages(sorald.sonar.SonarLintEngine.globalConfig.getEnabledLanguages())
>             .setClientPid(sorald.sonar.SonarLintEngine.globalConfig.getClientPid())
>             .setExtraProperties(sorald.sonar.SonarLintEngine.globalConfig.extraProperties())
>             .setWorkDir(sorald.sonar.SonarLintEngine.globalConfig.getWorkDir())
>             .setModulesProvider(sorald.sonar.SonarLintEngine.globalConfig.getModulesProvider())
>             .addCustomModule(new org.sonarsource.sonarlint.core.analysis.CustomModule() {
>                 @Override
>                 public void configure(org.sonarsource.sonarlint.core.analysis.AnalysisContext context) {
>                     context.getComponents().add(new org.sonarsource.sonarlint.core.analysis.SonarLintEngineComponent(context));
>                 }
>             })
