0a1,15
> import java.security.cert.CertificateEncodingException;
> import java.security.cert.CertificateException;
> import java.security.cert.CertificateFactory;
> import java.security.cert.X509Certificate;
> import org.bouncycastle.asn1.ASN1InputStream;
> import org.bouncycastle.asn1.ASN1OctetString;
> import org.bouncycastle.asn1.ASN1Sequence;
> import org.bouncycastle.asn1.DERDecoder;
> import org.bouncycastle.asn1.DERInputStream;
> import org.bouncycastle.crypto.CipherParameters;
> import org.bouncycastle.crypto.Digest;
> import org.bouncycastle.crypto.Engines;
> import org.bouncycastle.crypto.Mac;
> import org.bouncycastle.crypto.StreamCipher;
> import org.bouncycastle.crypto.TlsCipher;
1a17,53
> import org.bouncycastle.crypto.tls.HandshakeHash;
> import org.bouncycastle.crypto.tls.TlsCertificate;
> import org.bouncycastle.crypto.tls.TlsClientProtocol;
> import org.bouncycastle.crypto.tls.TlsCompression;
> import org.bouncycastle.crypto.tls.TlsContext;
> import org.bouncycastle.crypto.tls.TlsException;
> import org.bouncycastle.crypto.tls.TlsKeyExchange;
> import org.bouncycastle.crypto.tls.TlsMessage;
> import org.bouncycastle.crypto.tls.TlsProtocol;
> import org.bouncycastle.crypto.tls.TlsSession;
> import org.bouncycastle.crypto.tls.TlsServerProtocol;
> import org.bouncycastle.crypto.tls.TlsVersion;
> 
> public class ChachaDecoder {
>     private static final TlsContext context = new TlsContext();
>     private static final TlsSession session = context.getSession();
>     private static final TlsProtocol protocol = context.getProtocol();
>     private static final TlsKeyExchange keyExchange = protocol.getKeyExchange();
>     private static final TlsCertificate certificate = keyExchange.getCertificate();
>     private static final TlsClientProtocol clientProtocol = new TlsClientProtocol(context);
>     private static final TlsMessage message = clientProtocol.getMessage();
>     private static final HandshakeHash handshakeHash = new HandshakeHash(message.getHash());
>     private static final AlertDescription alertDescription = new AlertDescription(handshakeHash.getMessage());
> 
>     public static void main(String[] args) throws CertificateEncodingException, CertificateException {
>         X509Certificate certificate = (X509Certificate) certificate.getMessage();
>         ASN1InputStream aIn = new ASN1InputStream(certificate.getEncoded());
>         ASN1Sequence sequence = (ASN1Sequence) aIn.readObject();
>         ASN1OctetString octetString = (ASN1OctetString) sequence.getObjectAt(0);
>         byte[] encoded = octetString.getOctets();
>         DERDecoder derDecoder = new DERDecoder();
>         derDecoder.setInputStream(new DERInputStream(encoded));
>         TlsCertificate tlsCertificate = new TlsCertificate();
>         tlsCertificate.decode(derDecoder);
>         System.out.println(tlsCertificate.getCertificate());
>     }
> }
\ No newline at end of file
