1,3c1,12
< public <T extends MockBaseEntity> T createMockEntity(Class<T> clazz, String path) {
<         final LoaderOptions loadingConfig = new LoaderOptions();
<         loadingConfig.setTagInspector(new TrustedTagInspector());
---
> import com.premiumminds.billy.core.test.fixtures.JavaLocalDateConstruct;
> import com.premiumminds.billy.core.test.fixtures.JavaZoneIdConstruct;
> import org.yaml.snakeyaml.DumperOptions;
> import org.yaml.snakeyaml.LoaderOptions;
> import org.yaml.snakeyaml.nodes.Tag;
> import org.yaml.snakeyaml.representer.Representer;
> 
> import java.io.BufferedReader;
> import java.io.FileReader;
> import java.io.IOException;
> import java.time.LocalDate;
> import java.time.ZoneId;
4a14,16
> public <T extends com.premiumminds.billy.core.test.fixtures.MockBaseEntity> T createMockEntity(Class<T> clazz, String path) {
>     final LoaderOptions loadingConfig = new LoaderOptions();
>     loadingConfig.setTagInspector(new com.premiumminds.billy.core.test.fixtures.TrustedTagInspector());
10,14c22,25
< 
<         final Constructor constructor = new Constructor(clazz, loadingConfig) {{
<             this.addTypeDescription(new TypeDescription(ZoneId.class, "ZoneId"));
<             this.addTypeDescription(new TypeDescription(LocalDate.class, "LocalDate"));
< 
---
>     final org.yaml.snakeyaml.constructor.Constructor constructor = new org.yaml.snakeyaml.constructor.Constructor(clazz, loadingConfig) {
>         {
>             this.addTypeDescription(new org.yaml.snakeyaml.TypeDescription(ZoneId.class, "ZoneId"));
>             this.addTypeDescription(new org.yaml.snakeyaml.TypeDescription(LocalDate.class, "LocalDate"));
17,20c28,30
<         }};
< 
<         Yaml yaml = new Yaml(constructor, representer);
< 
---
>         }
>     };
>     org.yaml.snakeyaml.Yaml yaml = new org.yaml.snakeyaml.Yaml(constructor, representer);
23c33
<         } catch (FileNotFoundException e) {
---
>     } catch (IOException e) {
