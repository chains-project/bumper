0a1,16
> import org.apache.maven.surefire.api.testset.TestFileSet;
> import org.apache.maven.surefire.api.testset.TestSetFilter;
> import org.apache.maven.surefire.api.testset.TestSetScannerContext;
> import org.apache.maven.surefire.api.testset.TestSetScannerFactory;
> import org.apache.maven.surefire.api.testset.TestSetScannerResult;
> import org.apache.maven.surefire.api.testset.TestType;
> import org.apache.maven.surefire.util.DefaultScanResult;
> import org.apache.maven.surefire.util.DefaultScanResult.ClasspathElement;
> import org.apache.maven.surefire.util.DirectoryScanner;
> import org.apache.maven.surefire.util.TestsToRun;
> 
> import java.io.File;
> import java.util.ArrayList;
> import java.util.Collections;
> import java.util.List;
> 
2,3c18,35
<         DirectoryScanner directoryScanner = new DirectoryScanner(testSrcFolder, TestListResolver.getWildcard());
<         return directoryScanner.scan().getClasses();
---
>     TestSetScannerFactory testSetScannerFactory = new TestSetScannerFactory();
>     TestSetScannerContext testSetScannerContext = new TestSetScannerContext();
>     TestSetFilter testSetFilter = new TestSetFilter();
>     TestFileSet testFileSet = new TestFileSet(testSrcFolder, testSetFilter);
>     testSetScannerContext.setTestFileSet(testFileSet);
>     TestSetScannerFactory.ScanResult scannerResult = testSetScannerFactory.createScanResult(testSetScannerContext);
>     TestSetScannerResult testSetScannerResult = new DefaultScanResult(scannerResult, testSetScannerContext);
>     DirectoryScanner directoryScanner = new DirectoryScanner();
>     directoryScanner.setBasedir(testSrcFolder.getAbsolutePath());
>     directoryScanner.setIncludes(new String[] {"**/*.class"});
>     directoryScanner.scan();
>     ClasspathElement classpathElement = new ClasspathElement(testSrcFolder.getAbsolutePath(), "", Collections.emptyList());
>     TestsToRun testsToRun = new TestsToRun(classpathElement, directoryScanner.getIncludedDirectories(), directoryScanner.getIncludedFiles(), TestType.CLASSES);
>     List<String> classes = new ArrayList<>();
>     for (String className : testsToRun.getIncludedClasses()) {
>         classes.add(className.replace('.', '/') + ".class");
>     }
>     return classes;
