2,10c2,7
<     @Override
<     @RetryOnFailure(
<         attempts = Tv.SEVEN,
<         delay = 1,
<         unit = TimeUnit.MINUTES,
<         verbose = false,
<         types = IOException.class
<     )
<     protected Session session() throws IOException {
---
> @java.lang.Override
> @com.jcabi.aspects.RetryOnFailure(attempts = 7, delay = 1, unit = java.util.concurrent.TimeUnit.MINUTES, verbose = false, types = java.io.IOException.class)
> protected com.jcraft.jsch.Session session() throws java.io.IOException {
>     final int tenMillis = 10;
>     final int tenSeconds = (int) java.util.concurrent.TimeUnit.SECONDS.toMillis(tenMillis);
>     final long million = 1000000L;
12,21c9,12
<             JSch.setLogger(new JschLogger());
<             final JSch jsch = new JSch();
<             Logger.debug(
<                 this,
<                 "Opening SSH session to %s@%s:%s (auth with password)...",
<                 this.getLogin(), this.getAddr(), this.getPort()
<             );
<             final Session session = jsch.getSession(
<                 this.getLogin(), this.getAddr(), this.getPort()
<             );
---
>         com.jcraft.jsch.JSch.setLogger(new com.jcabi.ssh.JschLogger());
>         final com.jcraft.jsch.JSch jsch = new com.jcraft.jsch.JSch();
>         com.jcabi.log.Logger.debug(this, "Opening SSH session to %s@%s:%s (auth with password)...", this.getLogin(), this.getAddr(), this.getPort());
>         final com.jcraft.jsch.Session session = jsch.getSession(this.getLogin(), this.getAddr(), this.getPort());
24,28c15,17
<             session.setServerAliveInterval(
<                 (int) TimeUnit.SECONDS.toMillis(Tv.TEN)
<             );
<             session.setServerAliveCountMax(Tv.MILLION);
<             session.connect((int) TimeUnit.SECONDS.toMillis(10L));
---
>         session.setServerAliveInterval(tenMillis * 1000);
>         session.setServerAliveCountMax((int) million);
>         session.connect((int) tenSeconds * 1000);
30,31c19,20
<         } catch (final JSchException ex) {
<             throw new IOException(ex);
---
>     } catch (final com.jcraft.jsch.JSchException ex) {
>         throw new java.io.IOException(ex);
