1,4c1,14
< /**
<      * AwsOcket can read and write large S3 content.
<      * @throws Exception If fails
<      */
---
> import com.jcabi.s3.Bucket;
> import com.jcabi.s3.Ocket.Text;
> import org.apache.commons.lang3.RandomStringUtils;
> import org.hamcrest.MatcherAssert;
> import org.junit.Rule;
> import org.junit.Test;
> import static org.hamcrest.Matchers.equalTo;
> import static com.jcabi.s3.tv.Tv.*;
> 
> public class AwsOcketITCase {
> 
>     @Rule
>     public com.jcabi.s3.Bucket bucket = new com.jcabi.s3.Bucket("my-bucket");
> 
7d16
<         final Bucket bucket = this.rule.bucket();
9,10c18,19
<         final Ocket.Text ocket = new Ocket.Text(bucket.ocket(name));
<         final String data = RandomStringUtils.random(Tv.HUNDRED * Tv.THOUSAND);
---
>         final Text ocket = new Text(bucket.ocket(name));
>         final String data = RandomStringUtils.random(HUNDRED * THOUSAND);
13c22
<             MatcherAssert.assertThat(ocket.read(), Matchers.equalTo(data));
---
>             MatcherAssert.assertThat(ocket.read(), equalTo(data));
17a27
> }
\ No newline at end of file
