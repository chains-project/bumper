{
    "py/object": "pipeline.types.detected_fault.DetectedFault",
    "identifier": 945288723,
    "in_class_code": "/**\n * Tests for {@link AuthScopeSlice}.\n *\n * @since 0.11\n */\nclass AuthScopeSliceTest {\n    // TODO: review this AI generated patch!\n    final String line = \"GET /resource.txt HTTP/1.1\";\n\n    final String action = \"foo:bar:baz\";\n\n    final AtomicReference<String> caction = new AtomicReference<>();\n\n    final AtomicReference<String> cline = new AtomicReference<>();\n\n    @Override\n    public Scope scope(final String rqline) {\n        cline.set(rqline);\n        return new Scope.FromString(action);\n    }\n}",
    "qualified_in_class_code": "/**\n * Tests for {@link AuthScopeSlice}.\n *\n * @since 0.11\n */\nclass AuthScopeSliceTest {\n    // TODO: review this AI generated patch!\n    final java.lang.String line = \"GET /resource.txt HTTP/1.1\";\n\n    final java.lang.String action = \"foo:bar:baz\";\n\n    final java.util.concurrent.atomic.AtomicReference<java.lang.String> caction = new java.util.concurrent.atomic.AtomicReference<>();\n\n    final java.util.concurrent.atomic.AtomicReference<java.lang.String> cline = new java.util.concurrent.atomic.AtomicReference<>();\n\n    @java.lang.Override\n    public com.artipie.docker.http.Scope scope(final java.lang.String rqline) {\n        cline.set(rqline);\n        return new com.artipie.docker.http.Scope.FromString(action);\n    }\n}",
    "plausible_dependency_identifier": null,
    "error_info": {
        "py/object": "pipeline.types.error_info.ErrorInfo",
        "additional_info": "",
        "error_message": "[ERROR] /docker-adapter/src/test/java/com/artipie/docker/http/AuthScopeSliceTest.java:[37,81] ';' expected",
        "client_file_path": "/docker-adapter/src/test/java/com/artipie/docker/http/AuthScopeSliceTest.java",
        "client_line_position": "37"
    },
    "client_end_line_number": 40,
    "client_line_number": 36,
    "method_code": "@java.lang.Override\n        public com.artipie.docker.http.Scope scope(final java.lang.String rqline) {\n            cline.set(rqline);\n            return new com.artipie.docker.http.Scope.FromString(action);\n        }",
    "qualified_code": "@java.lang.Override\npublic com.artipie.docker.http.Scope scope(final java.lang.String rqline) {\n    cline.set(rqline);\n    return new com.artipie.docker.http.Scope.FromString(action);\n}",
    "method_name": "scope"
}