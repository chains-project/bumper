8,13d7
<     new com.artipie.docker.http.AuthScopeSlice(new com.artipie.docker.http.ScopeSlice() {
<         @java.lang.Override
<         public com.artipie.docker.http.Scope scope(final java.lang.String rqline) {
<             cline.set(rqline);
<             return new com.artipie.docker.http.Scope.FromString(action);
<         }
15,23c9,11
<         @java.lang.Override
<         public com.artipie.http.Response response(final java.lang.String line, final java.lang.Iterable<java.util.Map.Entry<java.lang.String, java.lang.String>> headers, final org.reactivestreams.Publisher<java.nio.ByteBuffer> body) {
<             return com.artipie.http.rs.StandardRs.OK;
<         }
<     }, ( headers, rline) -> java.util.concurrent.CompletableFuture.completedFuture(new com.artipie.http.auth.AuthScheme.Result() {
<         @java.lang.Override
<         public ++Optional<com.artipie.http.auth.Authentication.User> user() {
<             return ++Optional.of(new com.artipie.http.auth.Authentication.User("alice"));
<         }
---
>     final java.util.regex.Pattern pattern = java.util.regex.Pattern.compile(
>             "^(\\S+)\\s(\\S+)\\s(\\S+)\\s?(.*)$"
>     );
25,27c13,16
<         @java.lang.Override
<         public java.lang.String challenge() {
<             return "";
---
>     final java.util.regex.Matcher matcher = pattern.matcher(line);
>     if (matcher.find()) {
>         caction.set(matcher.group(1));
>         cline.set(matcher.group(2));
29,34c18,20
<     }), ( user, act) -> {
<         caction.set(act);
<         return true;
<     }).response(line, com.artipie.http.Headers.EMPTY, com.artipie.asto.Content.EMPTY).send(( status, headers, body) -> java.util.concurrent.CompletableFuture.allOf()).toCompletableFuture().join();
<     org.hamcrest.MatcherAssert.assertThat("Request line passed to slice", cline.get(), new org.hamcrest.core.IsEqual<>(line));
<     org.hamcrest.MatcherAssert.assertThat("Scope passed as action to permissions", caction.get(), new org.hamcrest.core.IsEqual<>(action));
---
> 
>     org.junit.jupiter.api.Assertions.assertEquals(action, caction.get());
>     org.junit.jupiter.api.Assertions.assertEquals(line, cline.get());
