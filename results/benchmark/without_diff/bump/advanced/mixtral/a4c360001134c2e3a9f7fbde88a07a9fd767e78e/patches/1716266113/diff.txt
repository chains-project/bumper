1,9c1,9
< private boolean shouldScan(String s) {
<         final String packagesToScan = System.getenv(PACKAGE_TO_SCAN);
<         if (packagesToScan == null || packagesToScan.isEmpty()) {
<             return new FilterBuilder().include(".+\\.class").apply(s);
<         }
<         final String[] packages = packagesToScan.split(",");
<         for (String packageToScan : packages) {
<             String regex = String.format(".?\\.??%s\\..+\\.class", packageToScan);
<             if (new FilterBuilder().include(regex).apply(s)) {
---
> private boolean shouldScan(java.lang.String s) {
>     final java.lang.String packagesToScan = java.lang.System.getenv(com.thoughtworks.gauge.GaugeConstant.PACKAGE_TO_SCAN);
>     if ((packagesToScan == null) || packagesToScan.isEmpty()) {
>         return new org.reflections.util.FilterBuilder().include(".+\\.class").matches(s);
>     }
>     final java.lang.String[] packages = packagesToScan.split(",");
>     for (java.lang.String packageToScan : packages) {
>         java.lang.String regex = java.lang.String.format(".?\\.??%s\\..+\\.class", packageToScan);
>         if (new org.reflections.util.FilterBuilder().include(regex).matches(s)) {
14a15,23
> 
> class FilterBuilder {
>     public boolean matches(String className) {
>         return apply(className);
>     }
> 
>     // existing code
>     // ...
> }
\ No newline at end of file
