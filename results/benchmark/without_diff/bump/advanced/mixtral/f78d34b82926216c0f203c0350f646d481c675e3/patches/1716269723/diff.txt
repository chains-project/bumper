1,8c1,17
< /**
<      * ワールド内に新しいプレイヤーを捏造して、{@code EntityPlayer}として返します。
<      *
<      * @param world ワールドのハンドルを取得するための引数。
<      * @return 創造されたプレイヤー。
<      */
<     public static EntityPlayer getRandomPlayer(World world)
<     {
---
> import java.util.Random;
> import java.util.UUID;
> import org.apache.commons.lang3.RandomStringUtils;
> import org.apache.commons.lang3.tuple.Pair;
> import com.mojang.authlib.GameProfile;
> import com.mojang.authlib.properties.Property;
> import net.minecraft.server.v1_12_R1.EntityPlayer;
> import net.minecraft.server.v1_12_R1.PlayerInteractManager;
> import net.minecraft.server.v1_12_R1.WorldServer;
> import org.bukkit.Bukkit;
> import org.bukkit.craftbukkit.v1_12_R1.CraftServer;
> import org.bukkit.craftbukkit.v1_12_R1.CraftWorld;
> import org.bukkit.entity.Player;
> 
> public class PlayerUtils {
> 
>     public static EntityPlayer getRandomPlayer(org.bukkit.World world) {
10,20c19,23
<         String first = random.nextBoolean()
<             ? RandomStringUtils.randomAlphanumeric(new Random().nextInt(13) + 1)
<             : RandomWordUtils.getRandomWord();
<         String last = random.nextBoolean()
<             ? RandomStringUtils.randomAlphanumeric(new Random().nextInt(13) + 1)
<             : RandomWordUtils.getRandomWord();
< 
<         if (random.nextBoolean())
<         {
<             first = develop.p2p.lib.LeetConverter.convert(first);
<             last = develop.p2p.lib.LeetConverter.convert(last);
---
>         String first = (random.nextBoolean()) ? RandomStringUtils.randomAlphanumeric(new Random().nextInt(13) + 1) : getRandomWord();
>         String last = (random.nextBoolean()) ? RandomStringUtils.randomAlphanumeric(new Random().nextInt(13) + 1) : getRandomWord();
>         if (random.nextBoolean()) {
>             first = leetConvert(first);
>             last = leetConvert(last);
22,23c25
< 
<         String name = first + (random.nextBoolean() ? "_": "") + last + (random.nextBoolean() ? "19" + random.nextInt(120): "");
---
>         String name = ((first + (random.nextBoolean() ? "_" : "")) + last) + (random.nextBoolean() ? "19" + random.nextInt(120) : "");
25c27
<             name = random.nextBoolean() ? first: last;
---
>             name = (random.nextBoolean()) ? first : last;
30,31c32
<         WorldServer worldServer = ((CraftWorld) world).getHandle();
< 
---
>         WorldServer worldServer = ((CraftWorld) (world)).getHandle();
33d33
< 
35d34
< 
36a36,37
>         return new EntityPlayer(((CraftServer) (Bukkit.getServer())).getServer(), worldServer, profile, new PlayerInteractManager(worldServer));
>     }
38,43c39,72
<         return new EntityPlayer(
<             ((CraftServer) Bukkit.getServer()).getServer(),
<             worldServer,
<             profile,
<             new PlayerInteractManager(worldServer)
<         );
---
>     private static String leetConvert(String input) {
>         StringBuilder output = new StringBuilder();
>         for (int i = 0; i < input.length(); i++) {
>             char c = input.charAt(i);
>             if (Character.isLetter(c)) {
>                 if (Character.isUpperCase(c)) {
>                     int index = (int) c - 65;
>                     if (index >= 0 && index < 26) {
>                         output.append((char) (index + 97));
>                     }
>                 } else {
>                     int index = (int) c - 97;
>                     if (index >= 0 && index < 26) {
>                         output.append((char) (index + 65));
>                     }
>                 }
>             } else {
>                 output.append(c);
>             }
>         }
>         return output.toString();
>     }
> 
>     private static String getRandomWord() {
>         // Implement this method to return a random word
>         // You can use a library or generate it randomly
>         throw new UnsupportedOperationException("getRandomWord method not implemented");
>     }
> 
>     private static Pair<String, String> getRandomSkin() {
>         // Implement this method to return a random skin
>         // You can use a library or generate it randomly
>         throw new UnsupportedOperationException("getRandomSkin method not implemented");
>     }
