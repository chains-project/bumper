0a1,12
> import static java.lang.Integer.valueOf;
> import static java.lang.String.format;
> import static org.hamcrest.MatcherAssert.assertThat;
> import static org.hamcrest.Matchers.iterableWithSize;
> import java.util.concurrent.ExecutionException;
> import org.junit.jupiter.api.Test;
> import com.amazonaws.services.simpledb.AmazonSimpleDB;
> import com.amazonaws.services.simpledb.model.DeleteDomainRequest;
> import com.amazonaws.services.simpledb.model.Domain;
> import com.amazonaws.services.simpledb.model.SelectRequest;
> import com.jcabi.aspects.RetryOnFailure;
> 
5,6c17,20
<     void selectsManyItems() {
<         final Domain domain = this.domain();
---
> void selectsManyItems() throws ExecutionException {
>     final AmazonSimpleDB client = ... // initialize the AmazonSimpleDB client
>     final String domainName = "test-domain-" + System.nanoTime();
>     final Domain domain = client.createDomain(new CreateDomainRequest().withDomainName(domainName));
8,9c22,23
<             for (int idx = 0; idx < Tv.TEN; ++idx) {
<                 domain.item(String.format("i-%d", idx)).put("hey", "");
---
>         for (int idx = 0; idx < 10; ++idx) {
>             domain.putAttributes(new PutAttributesRequest().withDomainName(domainName).withItemName(format("i-%d", idx)).withAttributes(new Attribute().withName("hey").withValue("")));
11,18c25,26
<             MatcherAssert.assertThat(
<                 domain.select(
<                     new SelectRequest().withSelectExpression(
<                         String.format("SELECT * FROM `%s`", domain.name())
<                     ).withConsistentRead(true)
<                 ),
<                 Matchers.iterableWithSize(Tv.TEN)
<             );
---
>         final SelectRequest selectRequest = new SelectRequest().withSelectExpression(format("SELECT * FROM `%s`", domainName)).withConsistentRead(true);
>         assertThat(client.select(selectRequest).getSelectResult().getItems(), iterableWithSize(10));
20c28
<             domain.drop();
---
>         client.deleteDomain(new DeleteDomainRequest().withDomainName(domainName));
