import static java.lang.Integer.valueOf;
import static java.lang.String.format;
import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.Matchers.iterableWithSize;
import java.util.Objects;
import org.junit.jupiter.api.Test;
import com.amazonaws.services.simpledb.AmazonSimpleDB;
import com.amazonaws.services.simpledb.model.DeleteDomainRequest;
import com.amazonaws.services.simpledb.model.SelectRequest;
import com.jcabi.aspects.Loggable;
import com.jcabi.simpledb.Domain;

/**
 * Region.Simple can select many items.
 */
@Test
void selectsManyItems() {
    final Domain domain = this.domain();
    try {
        final int ten = 10;
        for (int idx = 0; idx < ten; ++idx) {
            domain.item(format("i-%d", idx)).put("hey", "");
        }
        final AmazonSimpleDB amazonSimpleDB = domain.backdoor();
        final String domainName = domain.name();
        assertThat(
            amazonSimpleDB.select(
                new SelectRequest()
                    .withSelectExpression(format("SELECT * FROM `%s`", domainName))
                    .withConsistentRead(true)
            ),
            iterableWithSize(ten)
        );
    } finally {
        Objects.requireNonNull(domain).delete(new DeleteDomainRequest(domain.name()));
    }
}