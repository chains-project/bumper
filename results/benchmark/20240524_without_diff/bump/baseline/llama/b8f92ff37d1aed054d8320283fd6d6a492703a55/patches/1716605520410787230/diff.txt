1,10d0
< /**
<          * Computes if a given class is to be included in the post-coverage computation
<          *
<          * If we have include-exclude patterns for Jacoco:
<          * - We include the class if it matches the include patterns and does not match the excludes patterns
<          * Else:
<          * - We include the class if it is available in the binary directories
<          * @param className
<          * @return true if the class should be included in the coverage result, false otherwise
<          */
12,19c2
<         // False if it matches an excludes pattern
<         for (String pattern : config.getJacocoExcludes()) {
<             WildcardMatcher matcher = new WildcardMatcher(pattern);
<             if (matcher.matches(className)) {
<                 return false;
<             }
<         }
<         // True if it matches an includes pattern and doesn't match any excludes pattern
---
>     boolean matchesIncludePattern = false;
23c6
<                 return true;
---
>             matchesIncludePattern = true;
26,27c9
< 
<         // True if it is present in the available binaries
---
>     if (!matchesIncludePattern) {
40c22,25
< 
---
>     }
>     for (String pattern : config.getJacocoExcludes()) {
>         WildcardMatcher matcher = new WildcardMatcher(pattern);
>         if (matcher.matches(className)) {
42a28,30
>     }
>     return matchesIncludePattern;
> }
\ No newline at end of file
