1,10d0
< /**
<          * Computes if a given class is to be included in the post-coverage computation
<          *
<          * If we have include-exclude patterns for Jacoco:
<          * - We include the class if it matches the include patterns and does not match the excludes patterns
<          * Else:
<          * - We include the class if it is available in the binary directories
<          * @param className
<          * @return true if the class should be included in the coverage result, false otherwise
<          */
11a2,5
>     if (config == null) {
>         return false;
>     }
> 
28,30c22,25
<         for (String dir : config.getBinJavaDir()) {
<             DirectoryScanner directoryScanner = new DirectoryScanner(new File(dir), TestListResolver.getWildcard());
<             if (directoryScanner.scan().getClasses().contains(className)) {
---
>     File binJavaDir = new File(config.getBinJavaDir()[0]);
>     DirectoryScanner directoryScanner = new DirectoryScanner(binJavaDir, TestListResolver.getWildcard());
>     Set<String> classes = directoryScanner.scan().getClasses();
>     if (classes.contains(className)) {
33,36c28,31
<         }
<         for (String dir : config.getBinTestDir()) {
<             DirectoryScanner directoryScanner = new DirectoryScanner(new File(dir), TestListResolver.getWildcard());
<             if (directoryScanner.scan().getClasses().contains(className)) {
---
>     File binTestDir = new File(config.getBinTestDir()[0]);
>     directoryScanner = new DirectoryScanner(binTestDir, TestListResolver.getWildcard());
>     classes = directoryScanner.scan().getClasses();
>     if (classes.contains(className)) {
39d33
<         }
