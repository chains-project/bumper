1d0
< // TODO: review this AI generated patch!
4,5c3,4
<     final InMemoryStorage storage = new InMemoryStorage();
<     final AstoBlobs blobs = new AstoBlobs(
---
>     InMemoryStorage storage = new InMemoryStorage();
>     AstoBlobs blobs = new AstoBlobs(
8c7
<     final String digest = "123";
---
>     String digest = "123";
11,31d9
<     ).toCompletableFuture().handle(
<         (blob, throwable) -> {
<             MatcherAssert.assertThat(
<                 "Exception thrown",
<                 throwable,
<                 notNullValue()
<             );
<             MatcherAssert.assertThat(
<                 "Exception is InvalidDigestException",
<                 Throwables.getRootCause(throwable),
<                 instanceOf(InvalidDigestException.class)
<             );
<             MatcherAssert.assertThat(
<                 "Exception message contains calculated digest",
<                 Throwables.getRootCause(throwable).getMessage(),
<                 allOf(
<                     stringContains(
<                         "3a6eb0790f39ac87c94f3856b2dd2c5d110e6811602261a9a923d3bb23adc8b7"
<                     ),
<                     stringContains(digest)
<                 )
32a11,14
>     .thenAcceptAsync(blob -> {
>         InvalidDigestException ex = Assertions.assertThrows(
>             InvalidDigestException.class,
>             () -> blobs.get(blob.content().digest())
34,36c16,19
<             return CompletableFuture.allOf();
<         }
<     ).join();
---
>         assertTrue(ex.getMessage().contains("3a6eb0790f39ac87c94f3856b2dd2c5d110e6811602261a9a923d3bb23adc8b7"));
>         assertTrue(ex.getMessage().contains(digest));
>     })
>     .join();
