1d0
< // TODO: review this AI generated patch!
9,28c8,15
<     blobs.put(
<             new CheckedBlobSource(new Content.From("data".getBytes()), new Digest.Sha256(digest))
<     ).toCompletableFuture().handle(
<             (blob, throwable) -> {
<                 MatcherAssert.assertThat(
<                         "Exception thrown",
<                         throwable,
<                         new IsNot<>(new IsNull<>())
<                 );
<                 MatcherAssert.assertThat(
<                         "Exception is InvalidDigestException",
<                         Throwables.getRootCause(throwable),
<                         new IsInstanceOf(InvalidDigestException.class)
<                 );
<                 MatcherAssert.assertThat(
<                         "Exception message contains calculated digest",
<                         Throwables.getRootCause(throwable).getMessage(),
<                         new JUnit413StringContains(
<                                 "3a6eb0790f39ac87c94f3856b2dd2c5d110e6811602261a9a923d3bb23adc8b7"
<                         )
---
>     final Content content = new Content.From("data".getBytes());
>     final Digest calculatedDigest = new Digest.Sha256(content.checksum());
>     final CheckedBlobSource checkedBlobSource = new CheckedBlobSource(content, calculatedDigest);
>     final InvalidDigestException expectedException = new InvalidDigestException(
>             "blob's digest does not match expected digest",
>             checkedBlobSource,
>             calculatedDigest,
>             new Digest.Sha256(digest)
30,33c17,28
<                 MatcherAssert.assertThat(
<                         "Exception message contains expected digest",
<                         Throwables.getRootCause(throwable).getMessage(),
<                         new JUnit413StringContains(digest)
---
>     blobs.put(checkedBlobSource)
>             .toCompletableFuture()
>             .handle(
>                     (blob, throwable) -> {
>                         if (throwable == null) {
>                             throw new AssertionError("Expected InvalidDigestException, but got no exception");
>                         }
>                         Assertions.assertThat(throwable).isInstanceOf(InvalidDigestException.class);
>                         Assertions.assertThat(throwable.getMessage()).containsSequence(
>                                 "blob's digest does not match expected digest",
>                                 calculatedDigest.value(),
>                                 digest
37c32,33
<     ).join();
---
>             )
>             .join();
