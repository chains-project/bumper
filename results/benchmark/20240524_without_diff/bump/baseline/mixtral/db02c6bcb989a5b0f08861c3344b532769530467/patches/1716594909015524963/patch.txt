@Test
void failsOnDigestMismatch() {
    final InMemoryStorage storage = new InMemoryStorage();
    final AstoBlobs blobs = new AstoBlobs(
            storage, new DefaultLayout(), new RepoName.Simple("any")
    );
    final String digest = "123";
    final Content content = new Content.From("data".getBytes());
    final Digest calculatedDigest = new Digest.Sha256(content.checksum());
    final CheckedBlobSource checkedBlobSource = new CheckedBlobSource(content, calculatedDigest);
    blobs.put(checkedBlobSource)
            .handle(
                    (blob, throwable) -> {
                        MatcherAssert.assertThat(
                                "Exception thrown",
                                throwable,
                                new IsNot<>(new IsNull<>())
                        );
                        MatcherAssert.assertThat(
                                "Exception is InvalidDigestException",
                                Throwables.getRootCause(throwable),
                                new IsInstanceOf(InvalidDigestException.class)
                        );
                        MatcherAssert.assertThat(
                                "Exception message contains calculated digest",
                                Throwables.getRootCause(throwable).getMessage(),
                                new JUnit413StringContains(calculatedDigest.toString())
                        );
                        MatcherAssert.assertThat(
                                "Exception message contains expected digest",
                                Throwables.getRootCause(throwable).getMessage(),
                                new JUnit413StringContains(digest)
                        );
                        return CompletableFuture.allOf();
                    }
            ).join();
}