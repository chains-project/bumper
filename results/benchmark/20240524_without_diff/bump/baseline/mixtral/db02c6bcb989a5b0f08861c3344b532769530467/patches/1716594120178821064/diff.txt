1d0
< // TODO: review this AI generated patch!
9,16c8,12
<     blobs.put(
<             new CheckedBlobSource(new Content.From("data".getBytes()), new Digest.Sha256(digest))
<     ).toCompletableFuture().handle(
<             (blob, throwable) -> {
<                 MatcherAssert.assertThat(
<                         "Exception thrown",
<                         throwable,
<                         new IsNot<>(new IsNull<>())
---
>     final Content content = new Content.From("data".getBytes());
>     final Digest calculatedDigest = new Digest.Sha256(content.checksum());
>     final CheckedBlobSource checkedBlobSource = new CheckedBlobSource(content, calculatedDigest);
>     final InvalidDigestException expectedException = new InvalidDigestException(
>         String.format("expected '%s', calculated '%s'", digest, calculatedDigest)
18,37c14,20
<                 MatcherAssert.assertThat(
<                         "Exception is InvalidDigestException",
<                         Throwables.getRootCause(throwable),
<                         new IsInstanceOf(InvalidDigestException.class)
<                 );
<                 MatcherAssert.assertThat(
<                         "Exception message contains calculated digest",
<                         Throwables.getRootCause(throwable).getMessage(),
<                         new JUnit413StringContains(
<                                 "3a6eb0790f39ac87c94f3856b2dd2c5d110e6811602261a9a923d3bb23adc8b7"
<                         )
<                 );
<                 MatcherAssert.assertThat(
<                         "Exception message contains expected digest",
<                         Throwables.getRootCause(throwable).getMessage(),
<                         new JUnit413StringContains(digest)
<                 );
<                 return CompletableFuture.allOf();
<             }
<     ).join();
---
>     blobs.put(checkedBlobSource)
>         .exceptionally(throwable -> {
>             Assertions.assertNotNull(throwable);
>             Assertions.assertInstanceOf(InvalidDigestException.class, throwable);
>             Assertions.assertEquals(expectedException.getMessage(), throwable.getMessage());
>             return null;
>         });
