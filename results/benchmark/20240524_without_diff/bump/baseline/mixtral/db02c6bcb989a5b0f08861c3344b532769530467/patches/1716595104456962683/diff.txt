1d0
< // TODO: review this AI generated patch!
9,23c8,13
<     blobs.put(
<             new CheckedBlobSource(new Content.From("data".getBytes()), new Digest.Sha256(digest))
<     ).toCompletableFuture().handle(
<             (blob, throwable) -> {
<                 MatcherAssert.assertThat(
<                         "Exception thrown",
<                         throwable,
<                         new IsNot<>(new IsNull<>())
<                 );
<                 MatcherAssert.assertThat(
<                         "Exception is InvalidDigestException",
<                         Throwables.getRootCause(throwable),
<                         new IsInstanceOf(InvalidDigestException.class)
<                 );
<                 MatcherAssert.assertThat(
---
>     final Content content = new Content.From("data".getBytes());
>     final Digest calculatedDigest = new Digest.Sha256(content.checksum());
>     final CheckedBlobSource checkedBlobSource = new CheckedBlobSource(content, calculatedDigest);
>     final CompletableFuture<Blob> putFuture = blobs.put(checkedBlobSource);
>     final InvalidDigestException exception = assertThrows(InvalidDigestException.class, putFuture::join);
>     assertEquals(
25,26c15,16
<                         Throwables.getRootCause(throwable).getMessage(),
<                         new JUnit413StringContains("3a6eb0790f39ac87c94f3856b2dd2c5d110e6811602261a9a923d3bb23adc8b7")
---
>             "3a6eb0790f39ac87c94f3856b2dd2c5d110e6811602261a9a923d3bb23adc8b7",
>             exception.calculatedDigest().toString()
28c18
<                 MatcherAssert.assertThat(
---
>     assertEquals(
30,31c20,21
<                         Throwables.getRootCause(throwable).getMessage(),
<                         new JUnit413StringContains(digest)
---
>             digest,
>             exception.expectedDigest()
33,35d22
<                 return CompletableFuture.allOf();
<             }
<     ).join();
