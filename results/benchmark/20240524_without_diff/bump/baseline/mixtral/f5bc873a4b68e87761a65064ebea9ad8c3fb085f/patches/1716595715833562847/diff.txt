1c1,37
< import org.apache.maven.artifact.DependencyResolutionRequiredException;
\ No newline at end of file
---
> import org.apache.maven.artifact.Artifact;
> import org.apache.maven.artifact.ArtifactRequest;
> import org.apache.maven.artifact.handler.manager.ArtifactHandlerManager;
> import org.apache.maven.artifact.metadata.ArtifactMetadataRetrievalException;
> import org.apache.maven.artifact.repository.ArtifactRepository;
> import org.apache.maven.artifact.resolver.ArtifactResolver;
> import org.apache.maven.artifact.resolver.ArtifactResolutionException;
> import org.apache.maven.artifact.resolver.ArtifactResolutionResult;
> import org.apache.maven.execution.MavenSession;
> import org.apache.maven.model.Resource;
> import org.apache.maven.project.MavenProject;
> import org.apache.maven.project.ProjectBuilder;
> import org.apache.maven.project.ProjectBuildingException;
> import org.codehaus.plexus.component.configurator.expression.ExpressionEvaluationException;
> import org.codehaus.plexus.logging.Logger;
> 
> import java.io.File;
> import java.util.Collections;
> import java.util.List;
> 
> @Override
> public File getThemeDir(MavenSession session, Logger logger, String groupId, String artifactId, String version, String className, List<Resource> resources) throws DependencyResolutionRequiredException, ArtifactResolutionException, ArtifactMetadataRetrievalException, ProjectBuildingException, ExpressionEvaluationException {
>     MavenProject project = session.getCurrentProject();
>     Artifact artifact = project.getArtifact();
>     ArtifactRequest request = new ArtifactRequest();
>     request.setArtifact(artifact);
>     request.setRepositories(session.getLocalRepository().getRepositories());
>     request.setRemoteRepositories(session.getLocalRepository().getRemoteRepositories());
>     ArtifactResolver resolver = (ArtifactResolver) session.lookup(ArtifactResolver.ROLE);
>     ArtifactResolutionResult result = resolver.resolve(request);
>     Artifact resolvedArtifact = result.getArtifact();
>     File themeDir = resolvedArtifact.getFile();
>     if (!themeDir.isDirectory()) {
>         throw new DependencyResolutionRequiredException("Artifact " + resolvedArtifact.getId() + " is not a directory.");
>     }
>     return themeDir;
> }
\ No newline at end of file
