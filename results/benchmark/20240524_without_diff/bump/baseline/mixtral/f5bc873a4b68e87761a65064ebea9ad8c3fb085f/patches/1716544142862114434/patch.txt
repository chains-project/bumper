@Override
public void unpackTheme(Theme theme, File outputDirectory) throws MojoExecutionException, ArtifactResolverException {
    if (theme == null) {
        throw new MojoExecutionException("theme cannot be null");
    }

    if (outputDirectory == null) {
        throw new MojoExecutionException("outputDirectory cannot be null");
    }

    if (!outputDirectory.exists()) {
        if (!outputDirectory.mkdirs()) {
            throw new MojoExecutionException("Unable to create outputDirectory: " + outputDirectory.getAbsolutePath());
        }
    }

    File themeFile = new File(theme.getThemeFile());
    if (!themeFile.exists()) {
        throw new MojoExecutionException("themeFile does not exist: " + themeFile.getAbsolutePath());
    }

    try (JarFile jarFile = new JarFile(themeFile)) {
        Enumeration<JarEntry> entries = jarFile.entries();
        while (entries.hasMoreElements()) {
            JarEntry entry = entries.nextElement();
            String entryName = entry.getName();

            if (entry.isDirectory() || !entryName.startsWith(theme.getThemePath())) {
                continue;
            }

            InputStream inputStream = jarFile.getInputStream(entry);
            File entryFile = new File(outputDirectory, entryName);
            ensureDirectory(entryFile.getParentFile());

            try (OutputStream outputStream = new FileOutputStream(entryFile)) {
                IOUtils.copy(inputStream, outputStream);
            }
        }
    } catch (IOException e) {
        throw new MojoExecutionException("Failed to unpack theme: " + theme.getId(), e);
    }
}