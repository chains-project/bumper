0a1,7
> import org.bouncycastle.crypto.DataLengthException;
> import org.bouncycastle.crypto.params.KeyParameter;
> import org.bouncycastle.util.Arrays;
> 
> import java.io.IOException;
> import java.security.SecureRandom;
> 
4c11,13
<     KeyParameter macKey = initRecordMAC(decryptCipher);
---
>     SecureRandom random = new SecureRandom();
>     byte[] macKey = new byte[32];
>     random.nextBytes(macKey);
6c15,17
<     byte[] calculatedMAC = PolyKeyCreator.create(macKey, additionalData, ciphertext);
---
>     KeyParameter macKeyParameter = new KeyParameter(macKey);
> 
>     byte[] calculatedMAC = PolyKeyCreator.create(macKeyParameter, additionalData, ciphertext);
12a24
>     try {
13a26,28
>     } catch (DataLengthException e) {
>         throw new IOException("Error processing ciphertext", e);
>     }
