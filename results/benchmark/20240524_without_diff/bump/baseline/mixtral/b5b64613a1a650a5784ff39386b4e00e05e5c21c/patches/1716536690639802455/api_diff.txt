++ public org.jenkinsci.plugins.p4.changes.P4Ref org.jenkinsci.plugins.p4.PerforceRevisionState.getChange()
++ public void org.jenkinsci.plugins.p4.PerforceRevisionState.setChange(org.jenkinsci.plugins.p4.changes.P4Ref)
++ public hudson.util.FormValidation org.jenkinsci.plugins.p4.PerforceScm$DescriptorImpl.doCheckCredential(hudson.model.Item,java.lang.String)
-- public hudson.util.FormValidation org.jenkinsci.plugins.p4.PerforceScm$DescriptorImpl.doCheckCredential(java.lang.String)
-- public hudson.util.ListBoxModel org.jenkinsci.plugins.p4.PerforceScm$DescriptorImpl.doFillCredentialItems()
++ public hudson.util.ListBoxModel org.jenkinsci.plugins.p4.PerforceScm$DescriptorImpl.doFillCredentialItems(hudson.model.Item,java.lang.String)
++ public J org.jenkinsci.plugins.p4.PerforceScm$DescriptorImpl.getHeadLimit()
++ public int org.jenkinsci.plugins.p4.PerforceScm$DescriptorImpl.getMaxChanges()
++ public int org.jenkinsci.plugins.p4.PerforceScm$DescriptorImpl.getMaxFiles()
++ public bool org.jenkinsci.plugins.p4.PerforceScm$DescriptorImpl.isApplicable(hudson.model.Job)
++ public bool org.jenkinsci.plugins.p4.PerforceScm$DescriptorImpl.isAutoSave()
++ public bool org.jenkinsci.plugins.p4.PerforceScm$DescriptorImpl.isAutoSubmitOnChange()
-- public bool org.jenkinsci.plugins.p4.PerforceScm$DescriptorImpl.isEnabled()
++ public bool org.jenkinsci.plugins.p4.PerforceScm$DescriptorImpl.isHideMessages()
++ public bool org.jenkinsci.plugins.p4.PerforceScm$DescriptorImpl.isHideTicket()
++ public bool org.jenkinsci.plugins.p4.PerforceScm$DescriptorImpl.isLastSuccess()
++ public void org.jenkinsci.plugins.p4.PerforceScm$DescriptorImpl.setLastSuccess(boolean)
++ public PerforceScm org.jenkinsci.plugins.p4.PerforceScm(org.jenkinsci.plugins.p4.scm.AbstractP4ScmSource,org.jenkinsci.plugins.p4.scm.P4Path,org.jenkinsci.plugins.p4.changes.P4Ref)
-- public void org.jenkinsci.plugins.p4.PerforceScm.buildEnvVars(hudson.model.AbstractBuild,java.util.Map)
++ public void org.jenkinsci.plugins.p4.PerforceScm.buildEnvironment(hudson.model.Run,java.util.Map)
++ public static org.jenkinsci.plugins.p4.PerforceScm org.jenkinsci.plugins.p4.PerforceScm.convertToPerforceScm(hudson.scm.SCM)
++ public static org.jenkinsci.plugins.p4.browsers.P4Browser org.jenkinsci.plugins.p4.PerforceScm.findBrowser(java.lang.String)
-- public java.util.List org.jenkinsci.plugins.p4.PerforceScm.getChanges()
++ public java.lang.String org.jenkinsci.plugins.p4.PerforceScm.getKey()
++ public org.jenkinsci.plugins.p4.review.P4Review org.jenkinsci.plugins.p4.PerforceScm.getReview()
++ public java.lang.String org.jenkinsci.plugins.p4.PerforceScm.getScriptPath(hudson.model.Item)
++ public void org.jenkinsci.plugins.p4.PerforceScm.setReview(org.jenkinsci.plugins.p4.review.P4Review)
++ public org.jenkinsci.plugins.p4.browsers.FishEyeBrowser org.jenkinsci.plugins.p4.browsers.FishEyeBrowser$DescriptorImpl.newInstance(org.kohsuke.stapler.StaplerRequest,net.sf.json.JSONObject)
-- public org.jenkinsci.plugins.p4.browsers.P4WebBrowser org.jenkinsci.plugins.p4.browsers.FishEyeBrowser$DescriptorImpl.newInstance(org.kohsuke.stapler.StaplerRequest,net.sf.json.JSONObject)
++ public FishEyeBrowser org.jenkinsci.plugins.p4.browsers.FishEyeBrowser(java.lang.String,java.lang.String)
-- public FishEyeBrowser org.jenkinsci.plugins.p4.browsers.FishEyeBrowser(java.net.URL,java.lang.String)
-- public java.net.URL org.jenkinsci.plugins.p4.browsers.FishEyeBrowser.getDiffLink(com.perforce.p4java.core.file.IFileSpec)
++ public java.net.URL org.jenkinsci.plugins.p4.browsers.FishEyeBrowser.getDiffLink(org.jenkinsci.plugins.p4.changes.P4AffectedFile,org.jenkinsci.plugins.p4.changes.P4Ref)
-- public java.net.URL org.jenkinsci.plugins.p4.browsers.FishEyeBrowser.getFileLink(com.perforce.p4java.core.file.IFileSpec)
++ public java.net.URL org.jenkinsci.plugins.p4.browsers.FishEyeBrowser.getFileLink(org.jenkinsci.plugins.p4.changes.P4AffectedFile)
-- private java.lang.String org.jenkinsci.plugins.p4.browsers.FishEyeBrowser.getRootModule()
++ public java.lang.String org.jenkinsci.plugins.p4.browsers.FishEyeBrowser.getRootModule()
++ public org.jenkinsci.plugins.p4.browsers.OpenGrokBrowser org.jenkinsci.plugins.p4.browsers.OpenGrokBrowser$DescriptorImpl.newInstance(org.kohsuke.stapler.StaplerRequest,net.sf.json.JSONObject)
++ public OpenGrokBrowser org.jenkinsci.plugins.p4.browsers.OpenGrokBrowser(java.lang.String,java.lang.String,java.lang.String)
-- public OpenGrokBrowser org.jenkinsci.plugins.p4.browsers.OpenGrokBrowser(java.net.URL,java.lang.String,java.lang.String)
++ public java.lang.String org.jenkinsci.plugins.p4.browsers.OpenGrokBrowser.getDepotPath()
-- public java.net.URL org.jenkinsci.plugins.p4.browsers.OpenGrokBrowser.getDiffLink(com.perforce.p4java.core.file.IFileSpec)
++ public java.net.URL org.jenkinsci.plugins.p4.browsers.OpenGrokBrowser.getDiffLink(org.jenkinsci.plugins.p4.changes.P4AffectedFile,org.jenkinsci.plugins.p4.changes.P4Ref)
-- public java.net.URL org.jenkinsci.plugins.p4.browsers.OpenGrokBrowser.getFileLink(com.perforce.p4java.core.file.IFileSpec)
++ public java.net.URL org.jenkinsci.plugins.p4.browsers.OpenGrokBrowser.getFileLink(org.jenkinsci.plugins.p4.changes.P4AffectedFile)
++ public java.lang.String org.jenkinsci.plugins.p4.browsers.OpenGrokBrowser.getProjectName()
-- public P4Browser org.jenkinsci.plugins.p4.browsers.P4Browser()
++ public P4Browser org.jenkinsci.plugins.p4.browsers.P4Browser(java.lang.String)
-- public abstract java.net.URL org.jenkinsci.plugins.p4.browsers.P4Browser.getDiffLink(com.perforce.p4java.core.file.IFileSpec)
++ public abstract java.net.URL org.jenkinsci.plugins.p4.browsers.P4Browser.getDiffLink(org.jenkinsci.plugins.p4.changes.P4AffectedFile,org.jenkinsci.plugins.p4.changes.P4Ref)
-- public abstract java.net.URL org.jenkinsci.plugins.p4.browsers.P4Browser.getFileLink(com.perforce.p4java.core.file.IFileSpec)
++ public abstract java.net.URL org.jenkinsci.plugins.p4.browsers.P4Browser.getFileLink(org.jenkinsci.plugins.p4.changes.P4AffectedFile)
++ public java.net.URL org.jenkinsci.plugins.p4.browsers.P4Browser.getSafeUrl()
++ public final java.lang.String org.jenkinsci.plugins.p4.browsers.P4Browser.getUrl()
++ protected int org.jenkinsci.plugins.p4.browsers.P4Browser.parseRevision(org.jenkinsci.plugins.p4.changes.P4AffectedFile)
++ public P4WebBrowser org.jenkinsci.plugins.p4.browsers.P4WebBrowser(java.lang.String)
-- public P4WebBrowser org.jenkinsci.plugins.p4.browsers.P4WebBrowser(java.net.URL)
-- public java.net.URL org.jenkinsci.plugins.p4.browsers.P4WebBrowser.getDiffLink(com.perforce.p4java.core.file.IFileSpec)
++ public java.net.URL org.jenkinsci.plugins.p4.browsers.P4WebBrowser.getDiffLink(org.jenkinsci.plugins.p4.changes.P4AffectedFile,org.jenkinsci.plugins.p4.changes.P4Ref)
-- public java.net.URL org.jenkinsci.plugins.p4.browsers.P4WebBrowser.getFileLink(com.perforce.p4java.core.file.IFileSpec)
++ public java.net.URL org.jenkinsci.plugins.p4.browsers.P4WebBrowser.getFileLink(org.jenkinsci.plugins.p4.changes.P4AffectedFile)
++ public SwarmBrowser org.jenkinsci.plugins.p4.browsers.SwarmBrowser(java.lang.String)
-- public SwarmBrowser org.jenkinsci.plugins.p4.browsers.SwarmBrowser(java.net.URL)
-- public java.net.URL org.jenkinsci.plugins.p4.browsers.SwarmBrowser.getDiffLink(com.perforce.p4java.core.file.IFileSpec)
++ public java.net.URL org.jenkinsci.plugins.p4.browsers.SwarmBrowser.getDiffLink(org.jenkinsci.plugins.p4.changes.P4AffectedFile,org.jenkinsci.plugins.p4.changes.P4Ref)
-- public java.net.URL org.jenkinsci.plugins.p4.browsers.SwarmBrowser.getFileLink(com.perforce.p4java.core.file.IFileSpec)
++ public java.net.URL org.jenkinsci.plugins.p4.browsers.SwarmBrowser.getFileLink(org.jenkinsci.plugins.p4.changes.P4AffectedFile)
++ public static java.lang.String org.jenkinsci.plugins.p4.build.ExecutorHelper.getExecutorID(hudson.FilePath)
++ public static java.lang.String org.jenkinsci.plugins.p4.build.ExecutorHelper.getExecutorID(hudson.FilePath,hudson.model.TaskListener)
++ public static java.lang.String org.jenkinsci.plugins.p4.build.NodeHelper.getNodeName(hudson.FilePath)
++ public static hudson.model.Node org.jenkinsci.plugins.p4.build.NodeHelper.workspaceToNode(hudson.FilePath)
++ public P4EnvironmentContributor org.jenkinsci.plugins.p4.build.P4EnvironmentContributor()
++ public static void org.jenkinsci.plugins.p4.build.P4EnvironmentContributor.buildEnvironment(org.jenkinsci.plugins.p4.tagging.TagAction,java.util.Map)
++ public void org.jenkinsci.plugins.p4.build.P4EnvironmentContributor.buildEnvironmentFor(hudson.model.Run,hudson.EnvVars,hudson.model.TaskListener)
++ public P4AffectedFile org.jenkinsci.plugins.p4.changes.P4AffectedFile(com.perforce.p4java.core.file.IFileSpec)
++ public P4AffectedFile org.jenkinsci.plugins.p4.changes.P4AffectedFile(java.lang.String,java.lang.String,com.perforce.p4java.core.file.FileAction)
++ public java.lang.String org.jenkinsci.plugins.p4.changes.P4AffectedFile.getAction()
++ public hudson.scm.EditType org.jenkinsci.plugins.p4.changes.P4AffectedFile.getEditType()
++ public java.lang.String org.jenkinsci.plugins.p4.changes.P4AffectedFile.getPath()
++ public java.lang.String org.jenkinsci.plugins.p4.changes.P4AffectedFile.getRevision()
++ public void org.jenkinsci.plugins.p4.changes.P4ChangeEntry.addAffectedFiles(org.jenkinsci.plugins.p4.changes.P4AffectedFile)
++ public void org.jenkinsci.plugins.p4.changes.P4ChangeEntry.addJob(com.perforce.p4java.core.IFix)
++ public java.util.Collection org.jenkinsci.plugins.p4.changes.P4ChangeEntry.getAffectedFiles()
++ public java.lang.String org.jenkinsci.plugins.p4.changes.P4ChangeEntry.getCommitId()
-- public java.util.List org.jenkinsci.plugins.p4.changes.P4ChangeEntry.getFiles()
++ public org.jenkinsci.plugins.p4.changes.P4Ref org.jenkinsci.plugins.p4.changes.P4ChangeEntry.getId()
-- public org.jenkinsci.plugins.p4.changes.P4Revision org.jenkinsci.plugins.p4.changes.P4ChangeEntry.getId()
++ public int org.jenkinsci.plugins.p4.changes.P4ChangeEntry.getRows()
++ public J org.jenkinsci.plugins.p4.changes.P4ChangeEntry.getTimestamp()
++ public void org.jenkinsci.plugins.p4.changes.P4ChangeEntry.setGraphCommit(org.jenkinsci.plugins.p4.client.ConnectionHelper,java.lang.String)
++ public void org.jenkinsci.plugins.p4.changes.P4ChangeEntry.setGraphCommit(org.jenkinsci.plugins.p4.client.ConnectionHelper,java.lang.String,java.lang.String)
++ public void org.jenkinsci.plugins.p4.changes.P4ChangeEntry.setId(org.jenkinsci.plugins.p4.changes.P4Ref)
-- public void org.jenkinsci.plugins.p4.changes.P4ChangeEntry.setId(org.jenkinsci.plugins.p4.changes.P4Revision)
-- public P4ChangeParser$ChangeLogHandler org.jenkinsci.plugins.p4.changes.P4ChangeParser$ChangeLogHandler(hudson.model.Run,hudson.scm.RepositoryBrowser)
++ public P4ChangeParser$ChangeLogHandler org.jenkinsci.plugins.p4.changes.P4ChangeParser$ChangeLogHandler(hudson.model.Run,hudson.scm.RepositoryBrowser,org.jenkinsci.plugins.p4.client.ConnectionHelper)
-- public P4ChangeParser org.jenkinsci.plugins.p4.changes.P4ChangeParser()
++ public P4ChangeParser org.jenkinsci.plugins.p4.changes.P4ChangeParser(java.lang.String)
++ public P4ChangeRef org.jenkinsci.plugins.p4.changes.P4ChangeRef(long)
++ public int org.jenkinsci.plugins.p4.changes.P4ChangeRef.compareTo(java.lang.Object)
++ public bool org.jenkinsci.plugins.p4.changes.P4ChangeRef.equals(java.lang.Object)
++ public J org.jenkinsci.plugins.p4.changes.P4ChangeRef.getChange()
++ public org.jenkinsci.plugins.p4.changes.P4ChangeEntry org.jenkinsci.plugins.p4.changes.P4ChangeRef.getChangeEntry(org.jenkinsci.plugins.p4.client.ClientHelper)
++ public java.util.List org.jenkinsci.plugins.p4.changes.P4ChangeRef.getFiles(org.jenkinsci.plugins.p4.client.ConnectionHelper,int)
++ public int org.jenkinsci.plugins.p4.changes.P4ChangeRef.hashCode()
++ public bool org.jenkinsci.plugins.p4.changes.P4ChangeRef.isCommit()
++ public bool org.jenkinsci.plugins.p4.changes.P4ChangeRef.isLabel()
++ public java.lang.String org.jenkinsci.plugins.p4.changes.P4ChangeRef.toString()
++ public static org.jenkinsci.plugins.p4.changes.P4Escaper org.jenkinsci.plugins.p4.changes.P4Escaper.filter()
++ public bool org.jenkinsci.plugins.p4.changes.P4Escaper.translate(int,java.io.Writer)
++ public P4GraphRef org.jenkinsci.plugins.p4.changes.P4GraphRef(java.lang.String,com.perforce.p4java.graph.ICommit)
++ public P4GraphRef org.jenkinsci.plugins.p4.changes.P4GraphRef(org.jenkinsci.plugins.p4.client.ConnectionHelper,java.lang.String)
++ public int org.jenkinsci.plugins.p4.changes.P4GraphRef.compareTo(java.lang.Object)
++ public bool org.jenkinsci.plugins.p4.changes.P4GraphRef.equals(java.lang.Object)
++ public J org.jenkinsci.plugins.p4.changes.P4GraphRef.getChange()
++ public org.jenkinsci.plugins.p4.changes.P4ChangeEntry org.jenkinsci.plugins.p4.changes.P4GraphRef.getChangeEntry(org.jenkinsci.plugins.p4.client.ClientHelper)
++ public J org.jenkinsci.plugins.p4.changes.P4GraphRef.getDate()
++ public java.util.List org.jenkinsci.plugins.p4.changes.P4GraphRef.getFiles(org.jenkinsci.plugins.p4.client.ConnectionHelper,int)
++ public java.lang.String org.jenkinsci.plugins.p4.changes.P4GraphRef.getRepo()
++ public java.lang.String org.jenkinsci.plugins.p4.changes.P4GraphRef.getSha()
++ public int org.jenkinsci.plugins.p4.changes.P4GraphRef.hashCode()
++ public bool org.jenkinsci.plugins.p4.changes.P4GraphRef.isCommit()
++ public bool org.jenkinsci.plugins.p4.changes.P4GraphRef.isLabel()
++ public java.lang.String org.jenkinsci.plugins.p4.changes.P4GraphRef.toString()
++ public P4LabelRef org.jenkinsci.plugins.p4.changes.P4LabelRef(java.lang.String)
++ public int org.jenkinsci.plugins.p4.changes.P4LabelRef.compareTo(java.lang.Object)
++ public bool org.jenkinsci.plugins.p4.changes.P4LabelRef.equals(java.lang.Object)
++ public J org.jenkinsci.plugins.p4.changes.P4LabelRef.getChange()
++ public org.jenkinsci.plugins.p4.changes.P4ChangeEntry org.jenkinsci.plugins.p4.changes.P4LabelRef.getChangeEntry(org.jenkinsci.plugins.p4.client.ClientHelper)
++ public java.util.List org.jenkinsci.plugins.p4.changes.P4LabelRef.getFiles(org.jenkinsci.plugins.p4.client.ConnectionHelper,int)
++ public int org.jenkinsci.plugins.p4.changes.P4LabelRef.hashCode()
++ public bool org.jenkinsci.plugins.p4.changes.P4LabelRef.isCommit()
++ public bool org.jenkinsci.plugins.p4.changes.P4LabelRef.isLabel()
++ public java.lang.String org.jenkinsci.plugins.p4.changes.P4LabelRef.toString()
++ public abstract J org.jenkinsci.plugins.p4.changes.P4Ref.getChange()
++ public abstract org.jenkinsci.plugins.p4.changes.P4ChangeEntry org.jenkinsci.plugins.p4.changes.P4Ref.getChangeEntry(org.jenkinsci.plugins.p4.client.ClientHelper)
++ public abstract java.util.List org.jenkinsci.plugins.p4.changes.P4Ref.getFiles(org.jenkinsci.plugins.p4.client.ConnectionHelper,int)
++ public abstract bool org.jenkinsci.plugins.p4.changes.P4Ref.isCommit()
++ public abstract bool org.jenkinsci.plugins.p4.changes.P4Ref.isLabel()
++ public abstract java.lang.String org.jenkinsci.plugins.p4.changes.P4Ref.toString()
++ public P4RefBuilder org.jenkinsci.plugins.p4.changes.P4RefBuilder()
++ public static org.jenkinsci.plugins.p4.changes.P4Ref org.jenkinsci.plugins.p4.changes.P4RefBuilder.get(java.lang.String)
++ public int org.jenkinsci.plugins.p4.changes.P4Revision.compareTo(java.lang.Object)
++ public AbstractStreamingCallback org.jenkinsci.plugins.p4.client.AbstractStreamingCallback(com.perforce.p4java.server.IServer,hudson.model.TaskListener)
++ public bool org.jenkinsci.plugins.p4.client.AbstractStreamingCallback.endResults(int)
++ public com.perforce.p4java.exception.P4JavaException org.jenkinsci.plugins.p4.client.AbstractStreamingCallback.getException()
++ public com.perforce.p4java.impl.mapbased.server.Server org.jenkinsci.plugins.p4.client.AbstractStreamingCallback.getServer()
++ public org.jenkinsci.plugins.p4.client.Validate org.jenkinsci.plugins.p4.client.AbstractStreamingCallback.getValidate()
++ public abstract bool org.jenkinsci.plugins.p4.client.AbstractStreamingCallback.handleResult(java.util.Map,int)
++ public bool org.jenkinsci.plugins.p4.client.AbstractStreamingCallback.isDone()
++ public bool org.jenkinsci.plugins.p4.client.AbstractStreamingCallback.isFail()
++ protected void org.jenkinsci.plugins.p4.client.AbstractStreamingCallback.log(java.util.Map)
++ public void org.jenkinsci.plugins.p4.client.AbstractStreamingCallback.setException(com.perforce.p4java.exception.P4JavaException)
++ public void org.jenkinsci.plugins.p4.client.AbstractStreamingCallback.setFail()
++ public bool org.jenkinsci.plugins.p4.client.AbstractStreamingCallback.startResults(int)
-- public bool org.jenkinsci.plugins.p4.client.AuthorisationConfig.equals(java.lang.Object)
-- public int org.jenkinsci.plugins.p4.client.AuthorisationConfig.hashCode()
++ public bool org.jenkinsci.plugins.p4.client.AuthorisationConfig.isAllhosts()
++ public CleanupNotifier$DescriptorImpl org.jenkinsci.plugins.p4.client.CleanupNotifier$DescriptorImpl()
++ public java.lang.String org.jenkinsci.plugins.p4.client.CleanupNotifier$DescriptorImpl.getDisplayName()
++ public bool org.jenkinsci.plugins.p4.client.CleanupNotifier$DescriptorImpl.isApplicable(java.lang.Class)
++ public CleanupNotifier org.jenkinsci.plugins.p4.client.CleanupNotifier(boolean)
++ public hudson.tasks.BuildStepMonitor org.jenkinsci.plugins.p4.client.CleanupNotifier.getRequiredMonitorService()
++ public void org.jenkinsci.plugins.p4.client.CleanupNotifier.perform(hudson.model.Run,hudson.FilePath,hudson.Launcher,hudson.model.TaskListener)
++ protected ClientHelper org.jenkinsci.plugins.p4.client.ClientHelper(hudson.model.Item,java.lang.String,hudson.model.TaskListener)
++ public ClientHelper org.jenkinsci.plugins.p4.client.ClientHelper(hudson.model.Item,java.lang.String,hudson.model.TaskListener,org.jenkinsci.plugins.p4.workspace.Workspace)
++ public ClientHelper org.jenkinsci.plugins.p4.client.ClientHelper(hudson.model.ItemGroup,java.lang.String,hudson.model.TaskListener,org.jenkinsci.plugins.p4.workspace.Workspace)
-- public ClientHelper org.jenkinsci.plugins.p4.client.ClientHelper(java.lang.String,hudson.model.TaskListener,java.lang.String,java.lang.String)
-- public ClientHelper org.jenkinsci.plugins.p4.client.ClientHelper(org.jenkinsci.plugins.p4.credentials.P4BaseCredentials,hudson.model.TaskListener,java.lang.String,java.lang.String)
++ public ClientHelper org.jenkinsci.plugins.p4.client.ClientHelper(org.jenkinsci.plugins.p4.credentials.P4BaseCredentials,hudson.model.TaskListener,org.jenkinsci.plugins.p4.workspace.Workspace)
-- public bool org.jenkinsci.plugins.p4.client.ClientHelper.buildChange()
++ public bool org.jenkinsci.plugins.p4.client.ClientHelper.buildChange(org.jenkinsci.plugins.p4.publish.Publish)
++ protected void org.jenkinsci.plugins.p4.client.ClientHelper.clientLogin(org.jenkinsci.plugins.p4.workspace.Workspace)
++ public int org.jenkinsci.plugins.p4.client.ClientHelper.findPendingChangelistIDByDesc(java.lang.String,java.lang.String)
++ public com.perforce.p4java.impl.generic.core.Changelist org.jenkinsci.plugins.p4.client.ClientHelper.getChange(long)
-- public int org.jenkinsci.plugins.p4.client.ClientHelper.getClientHead()
++ public J org.jenkinsci.plugins.p4.client.ClientHelper.getClientHead()
++ public J org.jenkinsci.plugins.p4.client.ClientHelper.getClientHead(org.jenkinsci.plugins.p4.changes.P4Ref,org.jenkinsci.plugins.p4.changes.P4Ref)
++ public java.util.List org.jenkinsci.plugins.p4.client.ClientHelper.getPendingChangelists(boolean,java.lang.String)
++ public java.util.List org.jenkinsci.plugins.p4.client.ClientHelper.listChanges(java.util.List,org.jenkinsci.plugins.p4.changes.P4Ref)
++ public java.util.List org.jenkinsci.plugins.p4.client.ClientHelper.listChanges(org.jenkinsci.plugins.p4.changes.P4Ref)
-- public java.util.List org.jenkinsci.plugins.p4.client.ClientHelper.listChanges(org.jenkinsci.plugins.p4.changes.P4Revision)
-- public java.util.List org.jenkinsci.plugins.p4.client.ClientHelper.listChanges(org.jenkinsci.plugins.p4.changes.P4Revision,org.jenkinsci.plugins.p4.changes.P4Revision)
-- public java.util.List org.jenkinsci.plugins.p4.client.ClientHelper.listHaveChanges()
++ public java.util.List org.jenkinsci.plugins.p4.client.ClientHelper.listHaveChanges(java.util.List)
++ public java.util.List org.jenkinsci.plugins.p4.client.ClientHelper.listHaveChanges(java.util.List,org.jenkinsci.plugins.p4.changes.P4Ref)
-- public java.util.List org.jenkinsci.plugins.p4.client.ClientHelper.listHaveChanges(org.jenkinsci.plugins.p4.changes.P4Revision)
++ public java.util.List org.jenkinsci.plugins.p4.client.ClientHelper.listRepos()
++ public java.lang.String org.jenkinsci.plugins.p4.client.ClientHelper.publishChange(org.jenkinsci.plugins.p4.publish.Publish)
-- public void org.jenkinsci.plugins.p4.client.ClientHelper.publishChange(org.jenkinsci.plugins.p4.publish.Publish)
++ public void org.jenkinsci.plugins.p4.client.ClientHelper.revertAllFiles(boolean)
-- public void org.jenkinsci.plugins.p4.client.ClientHelper.setClient(org.jenkinsci.plugins.p4.workspace.Workspace)
++ public void org.jenkinsci.plugins.p4.client.ClientHelper.syncFiles(org.jenkinsci.plugins.p4.changes.P4Ref,org.jenkinsci.plugins.p4.populate.Populate)
-- public void org.jenkinsci.plugins.p4.client.ClientHelper.syncFiles(org.jenkinsci.plugins.p4.changes.P4Revision,org.jenkinsci.plugins.p4.populate.Populate)
-- public void org.jenkinsci.plugins.p4.client.ClientHelper.unshelveFiles(int)
++ public void org.jenkinsci.plugins.p4.client.ClientHelper.unshelveFiles(long)
-- public void org.jenkinsci.plugins.p4.client.ClientHelper.versionFile(java.lang.String,java.lang.String)
++ public void org.jenkinsci.plugins.p4.client.ClientHelper.versionFile(java.lang.String,org.jenkinsci.plugins.p4.publish.Publish,int,boolean)
++ public java.lang.String org.jenkinsci.plugins.p4.client.ClientHelper.where(java.lang.String)
-- public ConnectionConfig org.jenkinsci.plugins.p4.client.ConnectionConfig(java.lang.String,boolean,java.lang.String)
++ public java.lang.String org.jenkinsci.plugins.p4.client.ConnectionConfig.getP4Host()
++ public ConnectionHelper org.jenkinsci.plugins.p4.client.ConnectionHelper(hudson.model.Item,java.lang.String,hudson.model.TaskListener)
++ public ConnectionHelper org.jenkinsci.plugins.p4.client.ConnectionHelper(hudson.model.ItemGroup,java.lang.String,hudson.model.TaskListener)
++ public ConnectionHelper org.jenkinsci.plugins.p4.client.ConnectionHelper(hudson.model.Run,java.lang.String,hudson.model.TaskListener)
++ protected java.lang.String org.jenkinsci.plugins.p4.client.ConnectionHelper.buildRevisionLimit(java.lang.String,org.jenkinsci.plugins.p4.changes.P4Ref,org.jenkinsci.plugins.p4.changes.P4Ref)
++ public void org.jenkinsci.plugins.p4.client.ConnectionHelper.close()
++ public java.lang.String org.jenkinsci.plugins.p4.client.ConnectionHelper.counterToChange(java.lang.String)
++ protected void org.jenkinsci.plugins.p4.client.ConnectionHelper.disconnect()
-- public void org.jenkinsci.plugins.p4.client.ConnectionHelper.disconnect()
++ public static org.jenkinsci.plugins.p4.credentials.P4BaseCredentials org.jenkinsci.plugins.p4.client.ConnectionHelper.findCredential(java.lang.String,hudson.model.Item)
++ public static org.jenkinsci.plugins.p4.credentials.P4BaseCredentials org.jenkinsci.plugins.p4.client.ConnectionHelper.findCredential(java.lang.String,hudson.model.ItemGroup)
++ public static org.jenkinsci.plugins.p4.credentials.P4BaseCredentials org.jenkinsci.plugins.p4.client.ConnectionHelper.findCredential(java.lang.String,hudson.model.Run)
++ public org.jenkinsci.plugins.p4.client.AuthorisationConfig org.jenkinsci.plugins.p4.client.ConnectionHelper.getAuthorisationConfig()
-- public com.perforce.p4java.impl.generic.core.Changelist org.jenkinsci.plugins.p4.client.ConnectionHelper.getChange(int)
-- public java.util.List org.jenkinsci.plugins.p4.client.ConnectionHelper.getChangeFiles(int)
++ public java.util.List org.jenkinsci.plugins.p4.client.ConnectionHelper.getChangeFiles(long,int)
-- public com.perforce.p4java.core.IChangelistSummary org.jenkinsci.plugins.p4.client.ConnectionHelper.getChangeSummary(int)
++ public com.perforce.p4java.core.IChangelistSummary org.jenkinsci.plugins.p4.client.ConnectionHelper.getChangeSummary(long)
++ public java.util.List org.jenkinsci.plugins.p4.client.ConnectionHelper.getCommitFiles(java.lang.String,java.lang.String)
++ public com.perforce.p4java.server.IOptionsServer org.jenkinsci.plugins.p4.client.ConnectionHelper.getConnection()
++ public java.lang.String org.jenkinsci.plugins.p4.client.ConnectionHelper.getCounter(java.lang.String)
++ public java.util.List org.jenkinsci.plugins.p4.client.ConnectionHelper.getDirs(java.util.List)
++ public com.perforce.p4java.graph.ICommit org.jenkinsci.plugins.p4.client.ConnectionHelper.getGraphCommit(java.lang.String,java.lang.String)
++ public org.jenkinsci.plugins.p4.changes.P4Ref org.jenkinsci.plugins.p4.client.ConnectionHelper.getGraphHead(java.lang.String)
++ public J org.jenkinsci.plugins.p4.client.ConnectionHelper.getHead(java.lang.String,org.jenkinsci.plugins.p4.changes.P4Ref,org.jenkinsci.plugins.p4.changes.P4Ref)
++ public J org.jenkinsci.plugins.p4.client.ConnectionHelper.getHeadLimit()
++ public hudson.model.TaskListener org.jenkinsci.plugins.p4.client.ConnectionHelper.getListener()
++ public J org.jenkinsci.plugins.p4.client.ConnectionHelper.getLowestHead(java.lang.String,org.jenkinsci.plugins.p4.changes.P4Ref,org.jenkinsci.plugins.p4.changes.P4Ref)
++ protected int org.jenkinsci.plugins.p4.client.ConnectionHelper.getMaxChangeLimit()
++ public org.jenkinsci.plugins.p4.PerforceScm$DescriptorImpl org.jenkinsci.plugins.p4.client.ConnectionHelper.getP4SCM()
++ public java.util.List org.jenkinsci.plugins.p4.client.ConnectionHelper.getStreams(java.util.List)
++ public java.lang.String org.jenkinsci.plugins.p4.client.ConnectionHelper.getSwarm()
++ public int org.jenkinsci.plugins.p4.client.ConnectionHelper.getTick()
++ public java.lang.String org.jenkinsci.plugins.p4.client.ConnectionHelper.getUser()
++ public org.jenkinsci.plugins.p4.client.Validate org.jenkinsci.plugins.p4.client.ConnectionHelper.getValidate()
++ public bool org.jenkinsci.plugins.p4.client.ConnectionHelper.hasFile(java.lang.String)
++ public bool org.jenkinsci.plugins.p4.client.ConnectionHelper.isCounter(java.lang.String)
++ public bool org.jenkinsci.plugins.p4.client.ConnectionHelper.isUnicode()
-- public bool org.jenkinsci.plugins.p4.client.ConnectionHelper.isUnicode()
++ public java.lang.String org.jenkinsci.plugins.p4.client.ConnectionHelper.labelToChange(java.lang.String)
++ public java.util.List org.jenkinsci.plugins.p4.client.ConnectionHelper.listAllRepos()
++ public java.util.List org.jenkinsci.plugins.p4.client.ConnectionHelper.listCommits(java.util.List,org.jenkinsci.plugins.p4.changes.P4Ref)
++ public java.util.List org.jenkinsci.plugins.p4.client.ConnectionHelper.listRepos(java.lang.String)
-- public void org.jenkinsci.plugins.p4.client.ConnectionHelper.stop()
++ protected NavigateHelper$Node org.jenkinsci.plugins.p4.client.NavigateHelper$Node(java.lang.String,boolean)
++ public java.lang.String org.jenkinsci.plugins.p4.client.NavigateHelper$Node.getDepotPath()
++ public java.lang.String org.jenkinsci.plugins.p4.client.NavigateHelper$Node.getName()
++ public bool org.jenkinsci.plugins.p4.client.NavigateHelper$Node.isDir()
-- public NavigateHelper org.jenkinsci.plugins.p4.client.NavigateHelper()
++ public NavigateHelper org.jenkinsci.plugins.p4.client.NavigateHelper(com.perforce.p4java.server.IOptionsServer)
++ public NavigateHelper org.jenkinsci.plugins.p4.client.NavigateHelper(int)
++ public void org.jenkinsci.plugins.p4.client.NavigateHelper.close()
++ public hudson.model.AutoCompletionCandidates org.jenkinsci.plugins.p4.client.NavigateHelper.getCandidates(java.lang.String)
++ public java.util.List org.jenkinsci.plugins.p4.client.NavigateHelper.getNodes(java.lang.String)
-- public static hudson.model.AutoCompletionCandidates org.jenkinsci.plugins.p4.client.NavigateHelper.getPath(java.lang.String)
++ public ReconcileStreamingCallback org.jenkinsci.plugins.p4.client.ReconcileStreamingCallback(com.perforce.p4java.server.IServer,hudson.model.TaskListener)
++ public bool org.jenkinsci.plugins.p4.client.ReconcileStreamingCallback.handleResult(java.util.Map,int)
++ public SubmitStreamingCallback org.jenkinsci.plugins.p4.client.SubmitStreamingCallback(com.perforce.p4java.server.IServer,hudson.model.TaskListener)
++ public J org.jenkinsci.plugins.p4.client.SubmitStreamingCallback.getChange()
++ public bool org.jenkinsci.plugins.p4.client.SubmitStreamingCallback.handleResult(java.util.Map,int)
-- public bool org.jenkinsci.plugins.p4.client.SyncStreamingCallback.endResults(int)
-- public bool org.jenkinsci.plugins.p4.client.SyncStreamingCallback.isDone()
-- public bool org.jenkinsci.plugins.p4.client.SyncStreamingCallback.startResults(int)
++ public TempClientHelper org.jenkinsci.plugins.p4.client.TempClientHelper(hudson.model.Item,java.lang.String,hudson.model.TaskListener,org.jenkinsci.plugins.p4.workspace.Workspace)
++ public void org.jenkinsci.plugins.p4.client.TempClientHelper.close()
++ public java.lang.String org.jenkinsci.plugins.p4.client.TempClientHelper.getClientUUID()
++ public void org.jenkinsci.plugins.p4.client.TempClientHelper.update(org.jenkinsci.plugins.p4.workspace.Workspace)
-- public transient void org.jenkinsci.plugins.p4.client.Validate.check(java.util.List,java.lang.String[])
++ public transient bool org.jenkinsci.plugins.p4.client.Validate.check(java.util.List,java.lang.String[])
++ public transient bool org.jenkinsci.plugins.p4.client.Validate.checkCatch(java.util.List,java.lang.String[])
++ public ViewMapHelper org.jenkinsci.plugins.p4.client.ViewMapHelper()
++ public static java.lang.String org.jenkinsci.plugins.p4.client.ViewMapHelper.getClientView(java.lang.String,java.lang.String,boolean)
++ public static java.lang.String org.jenkinsci.plugins.p4.client.ViewMapHelper.getClientView(java.util.List,java.lang.String,boolean,boolean)
++ public static java.lang.String org.jenkinsci.plugins.p4.client.ViewMapHelper.getScriptView(java.lang.String,java.lang.String,java.lang.String)
++ public static java.lang.String org.jenkinsci.plugins.p4.client.ViewMapHelper.splitDepotPath(java.lang.String)
-- public P4Logging org.jenkinsci.plugins.p4.console.P4Logging(hudson.model.TaskListener)
++ public P4Logging org.jenkinsci.plugins.p4.console.P4Logging(hudson.model.TaskListener,boolean)
++ public bool org.jenkinsci.plugins.p4.console.P4Logging.isQuiet()
-- public P4BaseCredentials org.jenkinsci.plugins.p4.credentials.P4BaseCredentials(com.cloudbees.plugins.credentials.CredentialsScope,java.lang.String,java.lang.String,java.lang.String,org.jenkinsci.plugins.p4.credentials.TrustImpl,java.lang.String,java.lang.String,java.lang.String)
++ public P4BaseCredentials org.jenkinsci.plugins.p4.credentials.P4BaseCredentials(com.cloudbees.plugins.credentials.CredentialsScope,java.lang.String,java.lang.String,java.lang.String,org.jenkinsci.plugins.p4.credentials.TrustImpl,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
++ public java.lang.String org.jenkinsci.plugins.p4.credentials.P4BaseCredentials.getFullP4port()
++ public java.lang.String org.jenkinsci.plugins.p4.credentials.P4BaseCredentials.getP4JavaUri()
++ public java.lang.String org.jenkinsci.plugins.p4.credentials.P4BaseCredentials.getP4host()
++ public org.jenkinsci.plugins.p4.credentials.TrustImpl org.jenkinsci.plugins.p4.credentials.P4BaseCredentials.getSsl()
++ public int org.jenkinsci.plugins.p4.credentials.P4BaseCredentials.getTick()
-- public bool org.jenkinsci.plugins.p4.credentials.P4BaseCredentials.isSsl()
++ public bool org.jenkinsci.plugins.p4.credentials.P4BaseCredentials.isSslEnabled()
++ public void org.jenkinsci.plugins.p4.credentials.P4BaseCredentials.setTick(java.lang.String)
++ public abstract java.lang.String org.jenkinsci.plugins.p4.credentials.P4Credentials.getP4port()
++ public abstract org.jenkinsci.plugins.p4.credentials.TrustImpl org.jenkinsci.plugins.p4.credentials.P4Credentials.getSsl()
++ public abstract java.lang.String org.jenkinsci.plugins.p4.credentials.P4Credentials.getTrust()
++ public abstract bool org.jenkinsci.plugins.p4.credentials.P4Credentials.isSslEnabled()
++ public static hudson.util.FormValidation org.jenkinsci.plugins.p4.credentials.P4CredentialsImpl.doCheckCredential(hudson.model.Item,java.lang.String)
++ public static hudson.util.ListBoxModel org.jenkinsci.plugins.p4.credentials.P4CredentialsImpl.doFillCredentialItems(hudson.model.Item,java.lang.String)
++ public P4InvalidCredentialException org.jenkinsci.plugins.p4.credentials.P4InvalidCredentialException()
++ public P4InvalidCredentialException org.jenkinsci.plugins.p4.credentials.P4InvalidCredentialException(java.lang.String)
++ public hudson.util.FormValidation org.jenkinsci.plugins.p4.credentials.P4PasswordImpl$DescriptorImpl.doTestConnection(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)
-- public hudson.util.FormValidation org.jenkinsci.plugins.p4.credentials.P4PasswordImpl$DescriptorImpl.doTestConnection(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
-- public P4PasswordImpl org.jenkinsci.plugins.p4.credentials.P4PasswordImpl(com.cloudbees.plugins.credentials.CredentialsScope,java.lang.String,java.lang.String,java.lang.String,org.jenkinsci.plugins.p4.credentials.TrustImpl,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
++ public P4PasswordImpl org.jenkinsci.plugins.p4.credentials.P4PasswordImpl(com.cloudbees.plugins.credentials.CredentialsScope,java.lang.String,java.lang.String,java.lang.String,org.jenkinsci.plugins.p4.credentials.TrustImpl,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
++ public bool org.jenkinsci.plugins.p4.credentials.P4PasswordImpl.isAllhosts()
++ public void org.jenkinsci.plugins.p4.credentials.P4PasswordImpl.setAllhosts(boolean)
++ public abstract java.lang.String org.jenkinsci.plugins.p4.credentials.P4Ticket.getTicketPath()
++ public abstract java.lang.String org.jenkinsci.plugins.p4.credentials.P4Ticket.getTicketValue()
++ public abstract bool org.jenkinsci.plugins.p4.credentials.P4Ticket.isTicketPathSet()
++ public abstract bool org.jenkinsci.plugins.p4.credentials.P4Ticket.isTicketValueSet()
++ public hudson.util.FormValidation org.jenkinsci.plugins.p4.credentials.P4TicketImpl$DescriptorImpl.doTestConnection(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
-- public hudson.util.FormValidation org.jenkinsci.plugins.p4.credentials.P4TicketImpl$DescriptorImpl.doTestConnection(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
++ public P4TicketImpl org.jenkinsci.plugins.p4.credentials.P4TicketImpl(com.cloudbees.plugins.credentials.CredentialsScope,java.lang.String,java.lang.String,java.lang.String,org.jenkinsci.plugins.p4.credentials.TrustImpl,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.jenkinsci.plugins.p4.credentials.TicketModeImpl)
-- public P4TicketImpl org.jenkinsci.plugins.p4.credentials.P4TicketImpl(com.cloudbees.plugins.credentials.CredentialsScope,java.lang.String,java.lang.String,java.lang.String,org.jenkinsci.plugins.p4.credentials.TrustImpl,java.lang.String,java.lang.String,java.lang.String,org.jenkinsci.plugins.p4.credentials.TicketModeImpl)
++ public java.lang.String org.jenkinsci.plugins.p4.credentials.TicketModeImpl.getTicketSecret()
++ public FilterLatestChangeImpl$DescriptorImpl org.jenkinsci.plugins.p4.filters.FilterLatestChangeImpl$DescriptorImpl()
++ public java.lang.String org.jenkinsci.plugins.p4.filters.FilterLatestChangeImpl$DescriptorImpl.getDisplayName()
++ public FilterLatestChangeImpl org.jenkinsci.plugins.p4.filters.FilterLatestChangeImpl(boolean)
++ public static bool org.jenkinsci.plugins.p4.filters.FilterLatestChangeImpl.isActive(java.util.List)
++ public bool org.jenkinsci.plugins.p4.filters.FilterLatestChangeImpl.isLatestChange()
++ public FilterPatternListImpl$DescriptorImpl org.jenkinsci.plugins.p4.filters.FilterPatternListImpl$DescriptorImpl()
++ public hudson.util.FormValidation org.jenkinsci.plugins.p4.filters.FilterPatternListImpl$DescriptorImpl.doCheckPatternText(java.lang.String)
++ public java.lang.String org.jenkinsci.plugins.p4.filters.FilterPatternListImpl$DescriptorImpl.getDisplayName()
++ public FilterPatternListImpl org.jenkinsci.plugins.p4.filters.FilterPatternListImpl(java.lang.String,boolean)
++ public bool org.jenkinsci.plugins.p4.filters.FilterPatternListImpl.getCaseSensitive()
++ public java.util.ArrayList org.jenkinsci.plugins.p4.filters.FilterPatternListImpl.getPatternList()
++ public java.lang.String org.jenkinsci.plugins.p4.filters.FilterPatternListImpl.getPatternText()
++ public bool org.jenkinsci.plugins.p4.filters.FilterPatternListImpl.isCaseSensitive()
-- public int org.jenkinsci.plugins.p4.filters.FilterPerChangeImpl.getNextChange()
++ public static bool org.jenkinsci.plugins.p4.filters.FilterPerChangeImpl.isActive(java.util.List)
-- public void org.jenkinsci.plugins.p4.filters.FilterPerChangeImpl.setNextChange(int)
++ public FilterViewMaskImpl$DescriptorImpl org.jenkinsci.plugins.p4.filters.FilterViewMaskImpl$DescriptorImpl()
++ public java.lang.String org.jenkinsci.plugins.p4.filters.FilterViewMaskImpl$DescriptorImpl.getDisplayName()
++ public FilterViewMaskImpl org.jenkinsci.plugins.p4.filters.FilterViewMaskImpl(java.lang.String)
++ public java.lang.String org.jenkinsci.plugins.p4.filters.FilterViewMaskImpl.getViewMask()
++ public GetP4 org.jenkinsci.plugins.p4.groovy.GetP4(java.lang.String,org.jenkinsci.plugins.p4.workspace.Workspace)
++ public java.lang.String org.jenkinsci.plugins.p4.groovy.GetP4.getCredential()
++ public org.jenkinsci.plugins.p4.groovy.P4Groovy org.jenkinsci.plugins.p4.groovy.GetP4.getP4Groovy()
++ public hudson.tasks.BuildStepMonitor org.jenkinsci.plugins.p4.groovy.GetP4.getRequiredMonitorService()
++ public org.jenkinsci.plugins.p4.workspace.Workspace org.jenkinsci.plugins.p4.groovy.GetP4.getWorkspace()
++ public void org.jenkinsci.plugins.p4.groovy.GetP4.perform(hudson.model.Run,hudson.FilePath,hudson.Launcher,hudson.model.TaskListener)
++ public GetP4Step$DescriptorImpl org.jenkinsci.plugins.p4.groovy.GetP4Step$DescriptorImpl()
++ public hudson.util.ListBoxModel org.jenkinsci.plugins.p4.groovy.GetP4Step$DescriptorImpl.doFillCredentialItems(hudson.model.Item,java.lang.String)
++ public java.lang.String org.jenkinsci.plugins.p4.groovy.GetP4Step$DescriptorImpl.getDisplayName()
++ public java.lang.String org.jenkinsci.plugins.p4.groovy.GetP4Step$DescriptorImpl.getFunctionName()
++ public java.util.Set org.jenkinsci.plugins.p4.groovy.GetP4Step$DescriptorImpl.getRequiredContext()
++ protected org.jenkinsci.plugins.p4.groovy.P4Groovy org.jenkinsci.plugins.p4.groovy.GetP4Step$Execution.run()
++ public GetP4Step org.jenkinsci.plugins.p4.groovy.GetP4Step(java.lang.String,org.jenkinsci.plugins.p4.workspace.Workspace)
++ public java.lang.String org.jenkinsci.plugins.p4.groovy.GetP4Step.getCredential()
++ public org.jenkinsci.plugins.p4.workspace.Workspace org.jenkinsci.plugins.p4.groovy.GetP4Step.getWorkspace()
++ public org.jenkinsci.plugins.workflow.steps.StepExecution org.jenkinsci.plugins.p4.groovy.GetP4Step.start(org.jenkinsci.plugins.workflow.steps.StepContext)
++ protected GetP4Task org.jenkinsci.plugins.p4.groovy.GetP4Task(hudson.model.Run,java.lang.String,org.jenkinsci.plugins.p4.workspace.Workspace,hudson.FilePath,hudson.model.TaskListener)
++ public org.jenkinsci.plugins.p4.groovy.P4Groovy org.jenkinsci.plugins.p4.groovy.GetP4Task.call()
++ protected P4Groovy org.jenkinsci.plugins.p4.groovy.P4Groovy(org.jenkinsci.plugins.p4.credentials.P4BaseCredentials,hudson.model.TaskListener,org.jenkinsci.plugins.p4.workspace.Workspace,hudson.FilePath)
++ public java.util.Map org.jenkinsci.plugins.p4.groovy.P4Groovy.fetch(java.lang.String,java.lang.String)
++ public java.lang.String org.jenkinsci.plugins.p4.groovy.P4Groovy.getClientName()
++ public java.lang.String org.jenkinsci.plugins.p4.groovy.P4Groovy.getUserName()
++ public transient java.util.Map org.jenkinsci.plugins.p4.groovy.P4Groovy.run(java.lang.String,java.lang.String[])
++ public java.util.Map org.jenkinsci.plugins.p4.groovy.P4Groovy.run(java.lang.String,java.util.List)
++ public java.util.Map org.jenkinsci.plugins.p4.groovy.P4Groovy.runString(java.lang.String,java.lang.String)
++ public java.util.Map org.jenkinsci.plugins.p4.groovy.P4Groovy.save(java.lang.String,java.util.Map)
++ public transient java.util.Map org.jenkinsci.plugins.p4.groovy.P4Groovy.save(java.lang.String,java.util.Map,java.lang.String[])
++ public java.util.Map org.jenkinsci.plugins.p4.groovy.P4Groovy.save(java.lang.String,java.util.Map,java.util.List)
++ protected transient P4GroovyTask org.jenkinsci.plugins.p4.groovy.P4GroovyTask(org.jenkinsci.plugins.p4.credentials.P4BaseCredentials,hudson.model.TaskListener,java.lang.String,java.lang.String[])
++ protected P4GroovyTask org.jenkinsci.plugins.p4.groovy.P4GroovyTask(org.jenkinsci.plugins.p4.credentials.P4BaseCredentials,hudson.model.TaskListener,java.lang.String,java.lang.String[],java.util.Map)
++ public void org.jenkinsci.plugins.p4.groovy.P4GroovyTask.checkRoles(org.jenkinsci.remoting.RoleChecker)
++ public java.util.Map org.jenkinsci.plugins.p4.groovy.P4GroovyTask.invoke(java.io.File,hudson.remoting.VirtualChannel)
++ public java.lang.Object org.jenkinsci.plugins.p4.groovy.P4GroovyTask.task(org.jenkinsci.plugins.p4.client.ClientHelper)
++ public bool org.jenkinsci.plugins.p4.populate.AutoCleanImpl$DescriptorImpl.isGraphCompatible()
++ public AutoCleanImpl org.jenkinsci.plugins.p4.populate.AutoCleanImpl()
++ public AutoCleanImpl org.jenkinsci.plugins.p4.populate.AutoCleanImpl(boolean,boolean,boolean,boolean,boolean,java.lang.String,org.jenkinsci.plugins.p4.populate.ParallelSync)
-- public AutoCleanImpl org.jenkinsci.plugins.p4.populate.AutoCleanImpl(boolean,boolean,boolean,boolean,java.lang.String)
++ public AutoCleanImpl org.jenkinsci.plugins.p4.populate.AutoCleanImpl(boolean,boolean,boolean,boolean,java.lang.String,org.jenkinsci.plugins.p4.populate.ParallelSync)
++ public bool org.jenkinsci.plugins.p4.populate.AutoCleanImpl.isTidy()
++ public bool org.jenkinsci.plugins.p4.populate.CheckOnlyImpl$DescriptorImpl.isGraphCompatible()
-- public CheckOnlyImpl org.jenkinsci.plugins.p4.populate.CheckOnlyImpl(boolean,boolean,boolean,boolean,java.lang.String)
++ public CheckOnlyImpl org.jenkinsci.plugins.p4.populate.CheckOnlyImpl(boolean,java.lang.String)
++ public FlushOnlyImpl$DescriptorImpl org.jenkinsci.plugins.p4.populate.FlushOnlyImpl$DescriptorImpl()
++ public java.lang.String org.jenkinsci.plugins.p4.populate.FlushOnlyImpl$DescriptorImpl.getDisplayName()
++ public bool org.jenkinsci.plugins.p4.populate.FlushOnlyImpl$DescriptorImpl.isGraphCompatible()
++ public FlushOnlyImpl org.jenkinsci.plugins.p4.populate.FlushOnlyImpl(boolean,java.lang.String)
++ public bool org.jenkinsci.plugins.p4.populate.ForceCleanImpl$DescriptorImpl.isGraphCompatible()
-- public ForceCleanImpl org.jenkinsci.plugins.p4.populate.ForceCleanImpl(boolean,boolean,boolean,java.lang.String)
++ public ForceCleanImpl org.jenkinsci.plugins.p4.populate.ForceCleanImpl(boolean,boolean,java.lang.String,org.jenkinsci.plugins.p4.populate.ParallelSync)
++ public GraphHybridImpl$DescriptorImpl org.jenkinsci.plugins.p4.populate.GraphHybridImpl$DescriptorImpl()
++ public java.lang.String org.jenkinsci.plugins.p4.populate.GraphHybridImpl$DescriptorImpl.getDisplayName()
++ public bool org.jenkinsci.plugins.p4.populate.GraphHybridImpl$DescriptorImpl.isGraphCompatible()
++ public GraphHybridImpl org.jenkinsci.plugins.p4.populate.GraphHybridImpl(boolean,java.lang.String,org.jenkinsci.plugins.p4.populate.ParallelSync)
++ public ParallelSync$DescriptorImpl org.jenkinsci.plugins.p4.populate.ParallelSync$DescriptorImpl()
++ public java.lang.String org.jenkinsci.plugins.p4.populate.ParallelSync$DescriptorImpl.getDisplayName()
++ public ParallelSync org.jenkinsci.plugins.p4.populate.ParallelSync(boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
++ public java.lang.String org.jenkinsci.plugins.p4.populate.ParallelSync.getMinbytes()
++ public java.lang.String org.jenkinsci.plugins.p4.populate.ParallelSync.getMinfiles()
++ public com.perforce.p4java.option.client.ParallelSyncOptions org.jenkinsci.plugins.p4.populate.ParallelSync.getParallelOptions()
++ public java.lang.String org.jenkinsci.plugins.p4.populate.ParallelSync.getPath()
++ public java.lang.String org.jenkinsci.plugins.p4.populate.ParallelSync.getThreads()
++ public bool org.jenkinsci.plugins.p4.populate.ParallelSync.isEnable()
-- public Populate org.jenkinsci.plugins.p4.populate.Populate(boolean,boolean,boolean,boolean,java.lang.String)
++ public Populate org.jenkinsci.plugins.p4.populate.Populate(boolean,boolean,boolean,boolean,java.lang.String,org.jenkinsci.plugins.p4.populate.ParallelSync)
++ public org.jenkinsci.plugins.p4.populate.ParallelSync org.jenkinsci.plugins.p4.populate.Populate.getParallel()
++ public abstract bool org.jenkinsci.plugins.p4.populate.PopulateDescriptor.isGraphCompatible()
++ public bool org.jenkinsci.plugins.p4.populate.SyncOnlyImpl$DescriptorImpl.isGraphCompatible()
++ public SyncOnlyImpl org.jenkinsci.plugins.p4.populate.SyncOnlyImpl(boolean,boolean,boolean,boolean,boolean,java.lang.String,org.jenkinsci.plugins.p4.populate.ParallelSync)
-- public SyncOnlyImpl org.jenkinsci.plugins.p4.populate.SyncOnlyImpl(boolean,boolean,boolean,boolean,java.lang.String)
++ public SyncOnlyImpl org.jenkinsci.plugins.p4.populate.SyncOnlyImpl(boolean,boolean,boolean,boolean,java.lang.String,org.jenkinsci.plugins.p4.populate.ParallelSync)
++ public CommitImpl org.jenkinsci.plugins.p4.publish.CommitImpl(java.lang.String,boolean,boolean,boolean)
++ public void org.jenkinsci.plugins.p4.publish.CommitImpl.addFile(java.lang.String)
++ public java.util.List org.jenkinsci.plugins.p4.publish.CommitImpl.getFiles()
-- public Publish org.jenkinsci.plugins.p4.publish.Publish(java.lang.String,boolean)
++ public Publish org.jenkinsci.plugins.p4.publish.Publish(java.lang.String,boolean,boolean,boolean)
++ public java.lang.String org.jenkinsci.plugins.p4.publish.Publish.getPaths()
++ public bool org.jenkinsci.plugins.p4.publish.Publish.isDelete()
++ public bool org.jenkinsci.plugins.p4.publish.Publish.isModtime()
++ protected void org.jenkinsci.plugins.p4.publish.Publish.setPaths(java.lang.String)
-- public hudson.util.ListBoxModel org.jenkinsci.plugins.p4.publish.PublishNotifier$DescriptorImpl.doFillCredentialItems()
++ public hudson.util.ListBoxModel org.jenkinsci.plugins.p4.publish.PublishNotifier$DescriptorImpl.doFillCredentialItems(hudson.model.Item,java.lang.String)
-- public ShelveImpl org.jenkinsci.plugins.p4.publish.ShelveImpl(java.lang.String,boolean,boolean)
++ public ShelveImpl org.jenkinsci.plugins.p4.publish.ShelveImpl(java.lang.String,boolean,boolean,boolean,boolean)
++ public void org.jenkinsci.plugins.p4.publish.ShelveImpl.setPaths(java.lang.String)
-- public SubmitImpl org.jenkinsci.plugins.p4.publish.SubmitImpl(java.lang.String,boolean,boolean)
++ public SubmitImpl org.jenkinsci.plugins.p4.publish.SubmitImpl(java.lang.String,boolean,boolean,boolean,boolean,java.lang.String)
++ public java.lang.String org.jenkinsci.plugins.p4.publish.SubmitImpl.getPurge()
++ public int org.jenkinsci.plugins.p4.publish.SubmitImpl.getPurgeValue()
++ public void org.jenkinsci.plugins.p4.publish.SubmitImpl.setPaths(java.lang.String)
++ public ApproveNotifier$DescriptorImpl org.jenkinsci.plugins.p4.review.ApproveNotifier$DescriptorImpl()
++ public hudson.util.ListBoxModel org.jenkinsci.plugins.p4.review.ApproveNotifier$DescriptorImpl.doFillCredentialItems(hudson.model.Item,java.lang.String)
++ public static hudson.util.ListBoxModel org.jenkinsci.plugins.p4.review.ApproveNotifier$DescriptorImpl.doFillStatusItems()
++ public java.lang.String org.jenkinsci.plugins.p4.review.ApproveNotifier$DescriptorImpl.getDisplayName()
++ public bool org.jenkinsci.plugins.p4.review.ApproveNotifier$DescriptorImpl.isApplicable(java.lang.Class)
++ public ApproveNotifier org.jenkinsci.plugins.p4.review.ApproveNotifier(java.lang.String,java.lang.String,java.lang.String)
++ protected bool org.jenkinsci.plugins.p4.review.ApproveNotifier.approveReview(org.jenkinsci.plugins.p4.client.ConnectionHelper,hudson.EnvVars)
++ public static org.jenkinsci.plugins.p4.review.ApproveNotifier$DescriptorImpl org.jenkinsci.plugins.p4.review.ApproveNotifier.descriptor()
++ public java.lang.String org.jenkinsci.plugins.p4.review.ApproveNotifier.getCredential()
++ public java.lang.String org.jenkinsci.plugins.p4.review.ApproveNotifier.getDescription()
++ public hudson.tasks.BuildStepMonitor org.jenkinsci.plugins.p4.review.ApproveNotifier.getRequiredMonitorService()
++ public java.lang.String org.jenkinsci.plugins.p4.review.ApproveNotifier.getReview()
++ public java.lang.String org.jenkinsci.plugins.p4.review.ApproveNotifier.getStatus()
++ public bool org.jenkinsci.plugins.p4.review.ApproveNotifier.perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener)
++ public void org.jenkinsci.plugins.p4.review.ApproveNotifier.setDescription(java.lang.String)
++ public ApproveNotifierStep org.jenkinsci.plugins.p4.review.ApproveNotifierStep(java.lang.String,java.lang.String,java.lang.String)
++ public void org.jenkinsci.plugins.p4.review.ApproveNotifierStep.perform(hudson.model.Run,hudson.FilePath,hudson.Launcher,hudson.model.TaskListener)
++ public void org.jenkinsci.plugins.p4.review.ApproveNotifierStep.setDescription(java.lang.String)
++ public java.lang.String org.jenkinsci.plugins.p4.review.ApproveState.getDescription()
++ public java.lang.String org.jenkinsci.plugins.p4.review.ApproveState.getId()
++ public bool org.jenkinsci.plugins.p4.review.ApproveState.isCommit()
++ public static org.jenkinsci.plugins.p4.review.ApproveState org.jenkinsci.plugins.p4.review.ApproveState.parse(java.lang.String)
++ public static org.jenkinsci.plugins.p4.review.ApproveState org.jenkinsci.plugins.p4.review.ApproveState.valueOf(java.lang.String)
++ public static org.jenkinsci.plugins.p4.review.ApproveState org.jenkinsci.plugins.p4.review.ApproveState.values()
++ public P4Review org.jenkinsci.plugins.p4.review.P4Review(java.lang.String,org.jenkinsci.plugins.p4.tasks.CheckoutStatus)
++ public java.lang.String org.jenkinsci.plugins.p4.review.P4Review.getId()
++ public org.jenkinsci.plugins.p4.tasks.CheckoutStatus org.jenkinsci.plugins.p4.review.P4Review.getStatus()
-- public ReviewAction org.jenkinsci.plugins.p4.review.ReviewAction(hudson.model.AbstractProject)
++ public ReviewAction org.jenkinsci.plugins.p4.review.ReviewAction(hudson.model.Job)
-- public hudson.model.AbstractProject org.jenkinsci.plugins.p4.review.ReviewAction.getProject()
++ public hudson.model.Job org.jenkinsci.plugins.p4.review.ReviewAction.getProject()
++ public ReviewActionFactory org.jenkinsci.plugins.p4.review.ReviewActionFactory()
++ public java.util.Collection org.jenkinsci.plugins.p4.review.ReviewActionFactory.createFor(hudson.model.Job)
++ public java.lang.Class org.jenkinsci.plugins.p4.review.ReviewActionFactory.type()
++ public SafeParametersAction$SafeParametersActionEnvironmentContributor org.jenkinsci.plugins.p4.review.SafeParametersAction$SafeParametersActionEnvironmentContributor()
++ public void org.jenkinsci.plugins.p4.review.SafeParametersAction$SafeParametersActionEnvironmentContributor.buildEnvironmentFor(hudson.model.Run,hudson.EnvVars,hudson.model.TaskListener)
++ public SafeParametersAction org.jenkinsci.plugins.p4.review.SafeParametersAction(java.util.List,java.util.List)
++ public hudson.model.ParameterValue org.jenkinsci.plugins.p4.review.SafeParametersAction.getParameter(java.lang.String)
++ public java.util.List org.jenkinsci.plugins.p4.review.SafeParametersAction.getParameters()
++ public AbstractP4ScmSource org.jenkinsci.plugins.p4.scm.AbstractP4ScmSource(java.lang.String)
++ public org.jenkinsci.plugins.p4.PerforceScm org.jenkinsci.plugins.p4.scm.AbstractP4ScmSource.build(jenkins.scm.api.SCMHead,jenkins.scm.api.SCMRevision)
++ protected jenkins.scm.api.SCMProbe org.jenkinsci.plugins.p4.scm.AbstractP4ScmSource.createProbe(jenkins.scm.api.SCMHead,jenkins.scm.api.SCMRevision)
++ protected bool org.jenkinsci.plugins.p4.scm.AbstractP4ScmSource.findInclude(java.lang.String)
++ public abstract org.jenkinsci.plugins.p4.browsers.P4Browser org.jenkinsci.plugins.p4.scm.AbstractP4ScmSource.getBrowser()
++ public java.lang.String org.jenkinsci.plugins.p4.scm.AbstractP4ScmSource.getCharset()
++ public java.lang.String org.jenkinsci.plugins.p4.scm.AbstractP4ScmSource.getCredential()
++ public java.util.List org.jenkinsci.plugins.p4.scm.AbstractP4ScmSource.getFilter()
++ public java.lang.String org.jenkinsci.plugins.p4.scm.AbstractP4ScmSource.getFormat()
++ public abstract java.util.List org.jenkinsci.plugins.p4.scm.AbstractP4ScmSource.getHeads(hudson.model.TaskListener)
++ public java.util.List org.jenkinsci.plugins.p4.scm.AbstractP4ScmSource.getIncludePaths()
++ public java.lang.String org.jenkinsci.plugins.p4.scm.AbstractP4ScmSource.getIncludes()
++ public org.jenkinsci.plugins.p4.populate.Populate org.jenkinsci.plugins.p4.scm.AbstractP4ScmSource.getPopulate()
++ protected java.lang.String org.jenkinsci.plugins.p4.scm.AbstractP4ScmSource.getProperty(net.sf.json.JSONObject,org.jenkinsci.plugins.p4.review.ReviewProp)
++ public org.jenkinsci.plugins.p4.scm.P4SCMRevision org.jenkinsci.plugins.p4.scm.AbstractP4ScmSource.getRevision(net.sf.json.JSONObject)
++ public org.jenkinsci.plugins.p4.scm.P4SCMRevision org.jenkinsci.plugins.p4.scm.AbstractP4ScmSource.getRevision(org.jenkinsci.plugins.p4.client.TempClientHelper,org.jenkinsci.plugins.p4.scm.P4SCMHead)
++ protected org.jenkinsci.plugins.p4.scm.events.P4BranchScanner org.jenkinsci.plugins.p4.scm.AbstractP4ScmSource.getScanner(org.jenkinsci.plugins.p4.changes.P4Ref)
++ public java.lang.String org.jenkinsci.plugins.p4.scm.AbstractP4ScmSource.getScriptPathOrDefault()
++ public abstract java.util.List org.jenkinsci.plugins.p4.scm.AbstractP4ScmSource.getTags(hudson.model.TaskListener)
++ public java.util.List org.jenkinsci.plugins.p4.scm.AbstractP4ScmSource.getTraits()
++ public abstract org.jenkinsci.plugins.p4.workspace.Workspace org.jenkinsci.plugins.p4.scm.AbstractP4ScmSource.getWorkspace(org.jenkinsci.plugins.p4.scm.P4Path)
++ protected bool org.jenkinsci.plugins.p4.scm.AbstractP4ScmSource.isCategoryEnabled(jenkins.scm.api.SCMHeadCategory)
++ protected void org.jenkinsci.plugins.p4.scm.AbstractP4ScmSource.retrieve(jenkins.scm.api.SCMSourceCriteria,jenkins.scm.api.SCMHeadObserver,jenkins.scm.api.SCMHeadEvent,hudson.model.TaskListener)
++ protected java.util.List org.jenkinsci.plugins.p4.scm.AbstractP4ScmSource.retrieveActions(jenkins.scm.api.SCMHead,jenkins.scm.api.SCMHeadEvent,hudson.model.TaskListener)
++ protected java.util.List org.jenkinsci.plugins.p4.scm.AbstractP4ScmSource.retrieveActions(jenkins.scm.api.SCMRevision,jenkins.scm.api.SCMHeadEvent,hudson.model.TaskListener)
++ protected java.util.List org.jenkinsci.plugins.p4.scm.AbstractP4ScmSource.retrieveActions(jenkins.scm.api.SCMSourceEvent,hudson.model.TaskListener)
++ public void org.jenkinsci.plugins.p4.scm.AbstractP4ScmSource.setCharset(java.lang.String)
++ public void org.jenkinsci.plugins.p4.scm.AbstractP4ScmSource.setFilter(java.util.List)
++ public void org.jenkinsci.plugins.p4.scm.AbstractP4ScmSource.setFormat(java.lang.String)
++ public void org.jenkinsci.plugins.p4.scm.AbstractP4ScmSource.setIncludes(java.lang.String)
++ public void org.jenkinsci.plugins.p4.scm.AbstractP4ScmSource.setPopulate(org.jenkinsci.plugins.p4.populate.Populate)
++ public void org.jenkinsci.plugins.p4.scm.AbstractP4ScmSource.setTraits(java.util.List)
++ protected java.util.List org.jenkinsci.plugins.p4.scm.AbstractP4ScmSource.toLines(java.lang.String)
++ public BranchesScmSource$DescriptorImpl org.jenkinsci.plugins.p4.scm.BranchesScmSource$DescriptorImpl()
++ public java.lang.String org.jenkinsci.plugins.p4.scm.BranchesScmSource$DescriptorImpl.getDisplayName()
++ public BranchesScmSource org.jenkinsci.plugins.p4.scm.BranchesScmSource(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
++ public org.jenkinsci.plugins.p4.browsers.P4Browser org.jenkinsci.plugins.p4.scm.BranchesScmSource.getBrowser()
++ public java.util.List org.jenkinsci.plugins.p4.scm.BranchesScmSource.getHeads(hudson.model.TaskListener)
++ public java.lang.String org.jenkinsci.plugins.p4.scm.BranchesScmSource.getMappings()
++ public java.lang.String org.jenkinsci.plugins.p4.scm.BranchesScmSource.getPattern()
++ public java.util.List org.jenkinsci.plugins.p4.scm.BranchesScmSource.getTags(hudson.model.TaskListener)
++ public org.jenkinsci.plugins.p4.workspace.Workspace org.jenkinsci.plugins.p4.scm.BranchesScmSource.getWorkspace(org.jenkinsci.plugins.p4.scm.P4Path)
++ public void org.jenkinsci.plugins.p4.scm.BranchesScmSource.setBrowser(org.jenkinsci.plugins.p4.browsers.P4Browser)
++ public void org.jenkinsci.plugins.p4.scm.BranchesScmSource.setMappings(java.lang.String)
++ public void org.jenkinsci.plugins.p4.scm.BranchesScmSource.setPattern(java.lang.String)
++ public GlobalLibraryScmSource$DescriptorImpl org.jenkinsci.plugins.p4.scm.GlobalLibraryScmSource$DescriptorImpl()
++ public hudson.model.AutoCompletionCandidates org.jenkinsci.plugins.p4.scm.GlobalLibraryScmSource$DescriptorImpl.doAutoCompletePath(java.lang.String)
++ public hudson.util.FormValidation org.jenkinsci.plugins.p4.scm.GlobalLibraryScmSource$DescriptorImpl.doCheckPath(java.lang.String)
++ public java.lang.String org.jenkinsci.plugins.p4.scm.GlobalLibraryScmSource$DescriptorImpl.getDisplayName()
++ public bool org.jenkinsci.plugins.p4.scm.GlobalLibraryScmSource$DescriptorImpl.isApplicable(java.lang.Class)
++ public GlobalLibraryScmSource org.jenkinsci.plugins.p4.scm.GlobalLibraryScmSource(java.lang.String,java.lang.String,java.lang.String)
++ public synchronized org.jenkinsci.plugins.p4.PerforceScm org.jenkinsci.plugins.p4.scm.GlobalLibraryScmSource.build(jenkins.scm.api.SCMHead,jenkins.scm.api.SCMRevision)
++ public org.jenkinsci.plugins.p4.browsers.P4Browser org.jenkinsci.plugins.p4.scm.GlobalLibraryScmSource.getBrowser()
++ public java.util.List org.jenkinsci.plugins.p4.scm.GlobalLibraryScmSource.getHeads(hudson.model.TaskListener)
++ public java.lang.String org.jenkinsci.plugins.p4.scm.GlobalLibraryScmSource.getPath()
++ public java.util.List org.jenkinsci.plugins.p4.scm.GlobalLibraryScmSource.getTags(hudson.model.TaskListener)
++ public org.jenkinsci.plugins.p4.workspace.Workspace org.jenkinsci.plugins.p4.scm.GlobalLibraryScmSource.getWorkspace(org.jenkinsci.plugins.p4.scm.P4Path)
++ protected jenkins.scm.api.SCMRevision org.jenkinsci.plugins.p4.scm.GlobalLibraryScmSource.retrieve(java.lang.String,hudson.model.TaskListener)
++ public GraphScmSource$DescriptorImpl org.jenkinsci.plugins.p4.scm.GraphScmSource$DescriptorImpl()
++ protected jenkins.scm.api.SCMHeadCategory org.jenkinsci.plugins.p4.scm.GraphScmSource$DescriptorImpl.createCategories()
++ public java.lang.String org.jenkinsci.plugins.p4.scm.GraphScmSource$DescriptorImpl.getDisplayName()
++ public java.util.List org.jenkinsci.plugins.p4.scm.GraphScmSource$DescriptorImpl.getGraphPopulateDescriptors()
++ public GraphScmSource org.jenkinsci.plugins.p4.scm.GraphScmSource(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
++ public org.jenkinsci.plugins.p4.browsers.P4Browser org.jenkinsci.plugins.p4.scm.GraphScmSource.getBrowser()
++ public java.util.List org.jenkinsci.plugins.p4.scm.GraphScmSource.getHeads(hudson.model.TaskListener)
++ public org.jenkinsci.plugins.p4.scm.P4SCMRevision org.jenkinsci.plugins.p4.scm.GraphScmSource.getRevision(org.jenkinsci.plugins.p4.client.TempClientHelper,org.jenkinsci.plugins.p4.scm.P4SCMHead)
++ public java.util.List org.jenkinsci.plugins.p4.scm.GraphScmSource.getTags(hudson.model.TaskListener)
++ public org.jenkinsci.plugins.p4.workspace.Workspace org.jenkinsci.plugins.p4.scm.GraphScmSource.getWorkspace(org.jenkinsci.plugins.p4.scm.P4Path)
++ public void org.jenkinsci.plugins.p4.scm.GraphScmSource.setBrowser(org.jenkinsci.plugins.p4.browsers.P4Browser)
++ public java.lang.String org.jenkinsci.plugins.p4.scm.P4ChangeRequestSCMHead.getAuthor()
++ public jenkins.scm.api.mixin.ChangeRequestCheckoutStrategy org.jenkinsci.plugins.p4.scm.P4ChangeRequestSCMHead.getCheckoutStrategy()
++ public java.lang.String org.jenkinsci.plugins.p4.scm.P4ChangeRequestSCMHead.getId()
++ public java.lang.String org.jenkinsci.plugins.p4.scm.P4ChangeRequestSCMHead.getOriginName()
++ public java.lang.String org.jenkinsci.plugins.p4.scm.P4ChangeRequestSCMHead.getReview()
++ public org.jenkinsci.plugins.p4.PerforceScm org.jenkinsci.plugins.p4.scm.P4ChangeRequestSCMHead.getScm(org.jenkinsci.plugins.p4.scm.AbstractP4ScmSource,org.jenkinsci.plugins.p4.scm.P4Path,org.jenkinsci.plugins.p4.changes.P4Ref)
++ public jenkins.scm.api.SCMHead org.jenkinsci.plugins.p4.scm.P4ChangeRequestSCMHead.getTarget()
++ public java.lang.String org.jenkinsci.plugins.p4.scm.P4GraphRequestSCMHead.getBranch()
++ public java.lang.String org.jenkinsci.plugins.p4.scm.P4GraphRequestSCMHead.getId()
++ public java.lang.String org.jenkinsci.plugins.p4.scm.P4GraphRequestSCMHead.getRepo()
++ public jenkins.scm.api.SCMHead org.jenkinsci.plugins.p4.scm.P4GraphRequestSCMHead.getTarget()
++ public P4Path org.jenkinsci.plugins.p4.scm.P4Path(java.lang.String)
++ public java.util.List org.jenkinsci.plugins.p4.scm.P4Path.getMappings()
++ public java.lang.String org.jenkinsci.plugins.p4.scm.P4Path.getName()
++ public java.lang.String org.jenkinsci.plugins.p4.scm.P4Path.getNode()
++ public java.lang.String org.jenkinsci.plugins.p4.scm.P4Path.getPath()
++ public java.lang.String org.jenkinsci.plugins.p4.scm.P4Path.getPathBuilder(java.lang.String)
++ public java.lang.String org.jenkinsci.plugins.p4.scm.P4Path.getRevision()
++ public void org.jenkinsci.plugins.p4.scm.P4Path.setMappings(java.util.List)
++ public void org.jenkinsci.plugins.p4.scm.P4Path.setRevision(java.lang.String)
++ public java.lang.String org.jenkinsci.plugins.p4.scm.P4Path.toString()
++ public P4SCMBuilder org.jenkinsci.plugins.p4.scm.P4SCMBuilder(org.jenkinsci.plugins.p4.scm.AbstractP4ScmSource,jenkins.scm.api.SCMHead,jenkins.scm.api.SCMRevision)
++ public org.jenkinsci.plugins.p4.PerforceScm org.jenkinsci.plugins.p4.scm.P4SCMBuilder.build()
++ public P4SCMFile org.jenkinsci.plugins.p4.scm.P4SCMFile(org.jenkinsci.plugins.p4.scm.P4SCMFileSystem)
++ public P4SCMFile org.jenkinsci.plugins.p4.scm.P4SCMFile(org.jenkinsci.plugins.p4.scm.P4SCMFileSystem,org.jenkinsci.plugins.p4.scm.P4SCMFile,java.lang.String,boolean)
++ public java.lang.Iterable org.jenkinsci.plugins.p4.scm.P4SCMFile.children()
++ public java.io.InputStream org.jenkinsci.plugins.p4.scm.P4SCMFile.content()
++ public J org.jenkinsci.plugins.p4.scm.P4SCMFile.lastModified()
++ protected jenkins.scm.api.SCMFile org.jenkinsci.plugins.p4.scm.P4SCMFile.newChild(java.lang.String,boolean)
++ protected jenkins.scm.api.SCMFile$Type org.jenkinsci.plugins.p4.scm.P4SCMFile.type()
++ public P4SCMFileSystem$BuilderImpl org.jenkinsci.plugins.p4.scm.P4SCMFileSystem$BuilderImpl()
++ public jenkins.scm.api.SCMFileSystem org.jenkinsci.plugins.p4.scm.P4SCMFileSystem$BuilderImpl.build(hudson.model.Item,hudson.scm.SCM,jenkins.scm.api.SCMRevision)
++ public bool org.jenkinsci.plugins.p4.scm.P4SCMFileSystem$BuilderImpl.supports(hudson.scm.SCM)
++ public bool org.jenkinsci.plugins.p4.scm.P4SCMFileSystem$BuilderImpl.supports(jenkins.scm.api.SCMSource)
++ protected P4SCMFileSystem org.jenkinsci.plugins.p4.scm.P4SCMFileSystem(hudson.model.Item,org.jenkinsci.plugins.p4.PerforceScm,org.jenkinsci.plugins.p4.scm.P4SCMRevision)
++ public void org.jenkinsci.plugins.p4.scm.P4SCMFileSystem.close()
++ public org.jenkinsci.plugins.p4.client.TempClientHelper org.jenkinsci.plugins.p4.scm.P4SCMFileSystem.getConnection()
++ public jenkins.scm.api.SCMFile org.jenkinsci.plugins.p4.scm.P4SCMFileSystem.getRoot()
++ public J org.jenkinsci.plugins.p4.scm.P4SCMFileSystem.lastModified()
++ public P4SCMHead org.jenkinsci.plugins.p4.scm.P4SCMHead(java.lang.String,org.jenkinsci.plugins.p4.scm.P4Path)
++ public static void org.jenkinsci.plugins.p4.scm.P4SCMHead.addAliases()
++ public org.jenkinsci.plugins.p4.scm.P4Path org.jenkinsci.plugins.p4.scm.P4SCMHead.getPath()
++ public org.jenkinsci.plugins.p4.PerforceScm org.jenkinsci.plugins.p4.scm.P4SCMHead.getScm(org.jenkinsci.plugins.p4.scm.AbstractP4ScmSource,org.jenkinsci.plugins.p4.scm.P4Path,org.jenkinsci.plugins.p4.changes.P4Ref)
++ public java.lang.String org.jenkinsci.plugins.p4.scm.P4SCMHead.toString()
++ public P4SCMProbe org.jenkinsci.plugins.p4.scm.P4SCMProbe(org.jenkinsci.plugins.p4.client.TempClientHelper,org.jenkinsci.plugins.p4.scm.P4SCMHead)
++ public static void org.jenkinsci.plugins.p4.scm.P4SCMProbe.addAliases()
++ public void org.jenkinsci.plugins.p4.scm.P4SCMProbe.close()
++ public J org.jenkinsci.plugins.p4.scm.P4SCMProbe.lastModified()
++ public java.lang.String org.jenkinsci.plugins.p4.scm.P4SCMProbe.name()
++ public jenkins.scm.api.SCMProbeStat org.jenkinsci.plugins.p4.scm.P4SCMProbe.stat(java.lang.String)
++ public P4SCMRevision org.jenkinsci.plugins.p4.scm.P4SCMRevision(org.jenkinsci.plugins.p4.scm.P4SCMHead,org.jenkinsci.plugins.p4.changes.P4Ref)
++ public static void org.jenkinsci.plugins.p4.scm.P4SCMRevision.addAliases()
++ public static org.jenkinsci.plugins.p4.scm.P4SCMRevision org.jenkinsci.plugins.p4.scm.P4SCMRevision.builder(java.lang.String,java.lang.String,org.jenkinsci.plugins.p4.changes.P4Ref)
++ public bool org.jenkinsci.plugins.p4.scm.P4SCMRevision.equals(java.lang.Object)
++ public org.jenkinsci.plugins.p4.changes.P4Ref org.jenkinsci.plugins.p4.scm.P4SCMRevision.getRef()
++ public int org.jenkinsci.plugins.p4.scm.P4SCMRevision.hashCode()
++ public static org.jenkinsci.plugins.p4.scm.P4SCMRevision org.jenkinsci.plugins.p4.scm.P4SCMRevision.swarmBuilder(java.lang.String,java.lang.String,org.jenkinsci.plugins.p4.changes.P4Ref)
++ public static org.jenkinsci.plugins.p4.scm.P4SCMRevision org.jenkinsci.plugins.p4.scm.P4SCMRevision.swarmBuilder(java.lang.String,java.lang.String,org.jenkinsci.plugins.p4.changes.P4Ref,java.lang.String)
++ public java.lang.String org.jenkinsci.plugins.p4.scm.P4SCMRevision.toString()
++ public P4SCMSourceDescriptor org.jenkinsci.plugins.p4.scm.P4SCMSourceDescriptor()
++ public hudson.util.FormValidation org.jenkinsci.plugins.p4.scm.P4SCMSourceDescriptor.doCheckCredential(hudson.model.Item,java.lang.String)
++ public hudson.util.FormValidation org.jenkinsci.plugins.p4.scm.P4SCMSourceDescriptor.doCheckIncludes(java.lang.String)
++ public hudson.util.ListBoxModel org.jenkinsci.plugins.p4.scm.P4SCMSourceDescriptor.doFillCharsetItems()
++ public hudson.util.ListBoxModel org.jenkinsci.plugins.p4.scm.P4SCMSourceDescriptor.doFillCredentialItems(hudson.model.Item,java.lang.String)
++ public java.util.List org.jenkinsci.plugins.p4.scm.P4SCMSourceDescriptor.getBrowserDescriptors()
++ public StreamsScmSource$DescriptorImpl org.jenkinsci.plugins.p4.scm.StreamsScmSource$DescriptorImpl()
++ public java.lang.String org.jenkinsci.plugins.p4.scm.StreamsScmSource$DescriptorImpl.getDisplayName()
++ public StreamsScmSource org.jenkinsci.plugins.p4.scm.StreamsScmSource(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
++ public org.jenkinsci.plugins.p4.browsers.P4Browser org.jenkinsci.plugins.p4.scm.StreamsScmSource.getBrowser()
++ public java.util.List org.jenkinsci.plugins.p4.scm.StreamsScmSource.getHeads(hudson.model.TaskListener)
++ public java.util.List org.jenkinsci.plugins.p4.scm.StreamsScmSource.getTags(hudson.model.TaskListener)
++ public org.jenkinsci.plugins.p4.workspace.Workspace org.jenkinsci.plugins.p4.scm.StreamsScmSource.getWorkspace(org.jenkinsci.plugins.p4.scm.P4Path)
++ public void org.jenkinsci.plugins.p4.scm.StreamsScmSource.setBrowser(org.jenkinsci.plugins.p4.browsers.P4Browser)
++ public SwarmScmSource$DescriptorImpl org.jenkinsci.plugins.p4.scm.SwarmScmSource$DescriptorImpl()
++ protected jenkins.scm.api.SCMHeadCategory org.jenkinsci.plugins.p4.scm.SwarmScmSource$DescriptorImpl.createCategories()
++ public java.lang.String org.jenkinsci.plugins.p4.scm.SwarmScmSource$DescriptorImpl.getDisplayName()
++ public SwarmScmSource org.jenkinsci.plugins.p4.scm.SwarmScmSource(java.lang.String,java.lang.String,java.lang.String)
++ protected bool org.jenkinsci.plugins.p4.scm.SwarmScmSource.findInclude(java.lang.String)
++ public org.jenkinsci.plugins.p4.browsers.P4Browser org.jenkinsci.plugins.p4.scm.SwarmScmSource.getBrowser()
++ public java.util.List org.jenkinsci.plugins.p4.scm.SwarmScmSource.getHeads(hudson.model.TaskListener)
++ public java.lang.String org.jenkinsci.plugins.p4.scm.SwarmScmSource.getProject()
++ public org.jenkinsci.plugins.p4.scm.P4SCMRevision org.jenkinsci.plugins.p4.scm.SwarmScmSource.getRevision(net.sf.json.JSONObject)
++ public org.jenkinsci.plugins.p4.scm.P4SCMRevision org.jenkinsci.plugins.p4.scm.SwarmScmSource.getRevision(org.jenkinsci.plugins.p4.client.TempClientHelper,org.jenkinsci.plugins.p4.scm.P4SCMHead)
++ public org.jenkinsci.plugins.p4.swarmAPI.SwarmHelper org.jenkinsci.plugins.p4.scm.SwarmScmSource.getSwarm()
++ public java.util.List org.jenkinsci.plugins.p4.scm.SwarmScmSource.getTags(hudson.model.TaskListener)
++ public org.jenkinsci.plugins.p4.workspace.Workspace org.jenkinsci.plugins.p4.scm.SwarmScmSource.getWorkspace(org.jenkinsci.plugins.p4.scm.P4Path)
++ protected bool org.jenkinsci.plugins.p4.scm.SwarmScmSource.isCategoryEnabled(jenkins.scm.api.SCMHeadCategory)
++ protected java.util.List org.jenkinsci.plugins.p4.scm.SwarmScmSource.retrieveActions(jenkins.scm.api.SCMHead,jenkins.scm.api.SCMHeadEvent,hudson.model.TaskListener)
++ public void org.jenkinsci.plugins.p4.scm.SwarmScmSource.setProject(java.lang.String)
++ public void org.jenkinsci.plugins.p4.scm.SwarmScmSource.setSwarm(org.jenkinsci.plugins.p4.swarmAPI.SwarmHelper)
++ public P4BranchSCMHeadEvent org.jenkinsci.plugins.p4.scm.events.P4BranchSCMHeadEvent(jenkins.scm.api.SCMEvent$Type,net.sf.json.JSONObject,java.lang.String)
++ public java.lang.String org.jenkinsci.plugins.p4.scm.events.P4BranchSCMHeadEvent.getSourceName()
++ public java.util.Map org.jenkinsci.plugins.p4.scm.events.P4BranchSCMHeadEvent.heads(jenkins.scm.api.SCMSource)
++ public bool org.jenkinsci.plugins.p4.scm.events.P4BranchSCMHeadEvent.isMatch(hudson.scm.SCM)
++ public bool org.jenkinsci.plugins.p4.scm.events.P4BranchSCMHeadEvent.isMatch(jenkins.scm.api.SCMNavigator)
++ public P4BranchScanner org.jenkinsci.plugins.p4.scm.events.P4BranchScanner(org.jenkinsci.plugins.p4.credentials.P4BaseCredentials,org.jenkinsci.plugins.p4.changes.P4Ref,java.lang.String)
++ public java.lang.String org.jenkinsci.plugins.p4.scm.events.P4BranchScanner.getBranch()
++ public org.jenkinsci.plugins.p4.changes.P4Ref org.jenkinsci.plugins.p4.scm.events.P4BranchScanner.getChange()
++ public java.lang.String org.jenkinsci.plugins.p4.scm.events.P4BranchScanner.getProjectRoot()
++ public SwarmHelper org.jenkinsci.plugins.p4.swarmAPI.SwarmHelper(org.jenkinsci.plugins.p4.client.ConnectionHelper,java.lang.String)
++ public bool org.jenkinsci.plugins.p4.swarmAPI.SwarmHelper.approveReview(java.lang.String,org.jenkinsci.plugins.p4.review.ApproveState,java.lang.String)
++ public java.util.List org.jenkinsci.plugins.p4.swarmAPI.SwarmHelper.getActiveReviews(java.lang.String)
++ public java.lang.String org.jenkinsci.plugins.p4.swarmAPI.SwarmHelper.getBaseUrl()
++ public java.util.List org.jenkinsci.plugins.p4.swarmAPI.SwarmHelper.getBranchesInProject(java.lang.String)
++ public java.util.List org.jenkinsci.plugins.p4.swarmAPI.SwarmHelper.getProjects()
++ public org.jenkinsci.plugins.p4.swarmAPI.SwarmReviewAPI org.jenkinsci.plugins.p4.swarmAPI.SwarmHelper.getSwarmReview(java.lang.String)
++ public SwarmProjectAPI$Branch org.jenkinsci.plugins.p4.swarmAPI.SwarmProjectAPI$Branch(java.lang.String,java.lang.String,java.util.List)
++ public java.lang.String org.jenkinsci.plugins.p4.swarmAPI.SwarmProjectAPI$Branch.getId()
++ public java.lang.String org.jenkinsci.plugins.p4.swarmAPI.SwarmProjectAPI$Branch.getName()
++ public org.jenkinsci.plugins.p4.scm.P4Path org.jenkinsci.plugins.p4.swarmAPI.SwarmProjectAPI$Branch.getPath()
++ public java.util.List org.jenkinsci.plugins.p4.swarmAPI.SwarmProjectAPI$Branch.getPaths()
++ public SwarmProjectAPI$Project org.jenkinsci.plugins.p4.swarmAPI.SwarmProjectAPI$Project(java.lang.String,java.util.List,java.util.List,java.util.List)
++ public java.util.List org.jenkinsci.plugins.p4.swarmAPI.SwarmProjectAPI$Project.getBranches()
++ public java.lang.String org.jenkinsci.plugins.p4.swarmAPI.SwarmProjectAPI$Project.getId()
++ public java.util.List org.jenkinsci.plugins.p4.swarmAPI.SwarmProjectAPI$Project.getMembers()
++ public java.util.List org.jenkinsci.plugins.p4.swarmAPI.SwarmProjectAPI$Project.getOwners()
++ public SwarmProjectAPI org.jenkinsci.plugins.p4.swarmAPI.SwarmProjectAPI()
++ public SwarmProjectAPI org.jenkinsci.plugins.p4.swarmAPI.SwarmProjectAPI(org.jenkinsci.plugins.p4.swarmAPI.SwarmProjectAPI$Project)
++ public org.jenkinsci.plugins.p4.swarmAPI.SwarmProjectAPI$Project org.jenkinsci.plugins.p4.swarmAPI.SwarmProjectAPI.getProject()
++ public SwarmProjectsAPI org.jenkinsci.plugins.p4.swarmAPI.SwarmProjectsAPI()
++ public java.util.List org.jenkinsci.plugins.p4.swarmAPI.SwarmProjectsAPI.getIDsByUser(java.lang.String)
++ public java.util.List org.jenkinsci.plugins.p4.swarmAPI.SwarmProjectsAPI.getProjects()
++ public SwarmQueryAction org.jenkinsci.plugins.p4.swarmAPI.SwarmQueryAction()
++ public void org.jenkinsci.plugins.p4.swarmAPI.SwarmQueryAction.doDynamic(org.kohsuke.stapler.StaplerRequest,org.kohsuke.stapler.StaplerResponse)
++ public java.lang.String org.jenkinsci.plugins.p4.swarmAPI.SwarmQueryAction.getDisplayName()
++ public java.lang.String org.jenkinsci.plugins.p4.swarmAPI.SwarmQueryAction.getIconFileName()
++ public java.lang.String org.jenkinsci.plugins.p4.swarmAPI.SwarmQueryAction.getUrlName()
++ public SwarmReviewAPI$Review org.jenkinsci.plugins.p4.swarmAPI.SwarmReviewAPI$Review(java.util.List,java.util.List,java.util.HashMap,java.lang.String)
++ public java.lang.String org.jenkinsci.plugins.p4.swarmAPI.SwarmReviewAPI$Review.getAuthor()
++ public java.util.List org.jenkinsci.plugins.p4.swarmAPI.SwarmReviewAPI$Review.getChanges()
++ public java.util.List org.jenkinsci.plugins.p4.swarmAPI.SwarmReviewAPI$Review.getCommits()
++ public java.util.HashMap org.jenkinsci.plugins.p4.swarmAPI.SwarmReviewAPI$Review.getProjects()
++ public SwarmReviewAPI org.jenkinsci.plugins.p4.swarmAPI.SwarmReviewAPI()
++ public SwarmReviewAPI org.jenkinsci.plugins.p4.swarmAPI.SwarmReviewAPI(org.jenkinsci.plugins.p4.swarmAPI.SwarmReviewAPI$Review)
++ public org.jenkinsci.plugins.p4.swarmAPI.SwarmReviewAPI$Review org.jenkinsci.plugins.p4.swarmAPI.SwarmReviewAPI.getReview()
++ public SwarmReviewsAPI$Reviews org.jenkinsci.plugins.p4.swarmAPI.SwarmReviewsAPI$Reviews(long,java.util.List,java.lang.String)
++ public java.lang.String org.jenkinsci.plugins.p4.swarmAPI.SwarmReviewsAPI$Reviews.getAuthor()
++ public java.util.List org.jenkinsci.plugins.p4.swarmAPI.SwarmReviewsAPI$Reviews.getChanges()
++ public J org.jenkinsci.plugins.p4.swarmAPI.SwarmReviewsAPI$Reviews.getId()
++ public SwarmReviewsAPI org.jenkinsci.plugins.p4.swarmAPI.SwarmReviewsAPI()
++ public SwarmReviewsAPI org.jenkinsci.plugins.p4.swarmAPI.SwarmReviewsAPI(java.util.List)
++ public java.util.List org.jenkinsci.plugins.p4.swarmAPI.SwarmReviewsAPI.getReviews()
-- public TagAction org.jenkinsci.plugins.p4.tagging.TagAction(hudson.model.Run)
++ public TagAction org.jenkinsci.plugins.p4.tagging.TagAction(hudson.model.Run,java.lang.String)
++ public java.io.File org.jenkinsci.plugins.p4.tagging.TagAction.getChangelog()
++ public java.lang.String org.jenkinsci.plugins.p4.tagging.TagAction.getJenkinsPath()
-- public com.perforce.p4java.impl.generic.core.Label org.jenkinsci.plugins.p4.tagging.TagAction.getLabel(java.lang.String)
++ public com.perforce.p4java.impl.generic.core.Label org.jenkinsci.plugins.p4.tagging.TagAction.getLabel(java.lang.String)
++ public static org.jenkinsci.plugins.p4.tagging.TagAction org.jenkinsci.plugins.p4.tagging.TagAction.getLastAction(hudson.model.Run)
++ public static java.util.List org.jenkinsci.plugins.p4.tagging.TagAction.getLastChange(hudson.model.Run,hudson.model.TaskListener,java.lang.String)
++ public org.jenkinsci.plugins.p4.changes.P4Ref org.jenkinsci.plugins.p4.tagging.TagAction.getRefChange()
++ public java.util.List org.jenkinsci.plugins.p4.tagging.TagAction.getRefChanges()
++ public org.jenkinsci.plugins.p4.review.P4Review org.jenkinsci.plugins.p4.tagging.TagAction.getReview()
++ public java.lang.String org.jenkinsci.plugins.p4.tagging.TagAction.getSyncID()
++ public void org.jenkinsci.plugins.p4.tagging.TagAction.setChangelog(java.io.File)
-- public void org.jenkinsci.plugins.p4.tagging.TagAction.setCredential(java.lang.String)
++ public void org.jenkinsci.plugins.p4.tagging.TagAction.setJenkinsPath(java.lang.String)
++ public void org.jenkinsci.plugins.p4.tagging.TagAction.setRefChanges(java.util.List)
-- protected void org.jenkinsci.plugins.p4.tagging.TagNotifier.log(java.lang.String)
-- public AbstractTask org.jenkinsci.plugins.p4.tasks.AbstractTask()
++ public AbstractTask org.jenkinsci.plugins.p4.tasks.AbstractTask(java.lang.String,hudson.model.Item,hudson.model.TaskListener)
++ public AbstractTask org.jenkinsci.plugins.p4.tasks.AbstractTask(java.lang.String,hudson.model.Run,hudson.model.TaskListener)
++ public AbstractTask org.jenkinsci.plugins.p4.tasks.AbstractTask(java.lang.String,hudson.model.TaskListener)
++ public AbstractTask org.jenkinsci.plugins.p4.tasks.AbstractTask(org.jenkinsci.plugins.p4.credentials.P4BaseCredentials,hudson.model.TaskListener)
-- protected java.lang.String org.jenkinsci.plugins.p4.tasks.AbstractTask.getClient()
++ public java.lang.String org.jenkinsci.plugins.p4.tasks.AbstractTask.getClientName()
-- protected org.jenkinsci.plugins.p4.client.ClientHelper org.jenkinsci.plugins.p4.tasks.AbstractTask.getConnection()
++ public org.jenkinsci.plugins.p4.credentials.P4BaseCredentials org.jenkinsci.plugins.p4.tasks.AbstractTask.getCredential()
-- public org.jenkinsci.plugins.p4.credentials.P4BaseCredentials org.jenkinsci.plugins.p4.tasks.AbstractTask.getCredential()
++ public java.lang.String org.jenkinsci.plugins.p4.tasks.AbstractTask.getSyncID()
-- public void org.jenkinsci.plugins.p4.tasks.AbstractTask.setCredential(java.lang.String)
-- public void org.jenkinsci.plugins.p4.tasks.AbstractTask.setListener(hudson.model.TaskListener)
-- public org.jenkinsci.plugins.p4.workspace.Workspace org.jenkinsci.plugins.p4.tasks.AbstractTask.setNextChange(org.jenkinsci.plugins.p4.workspace.Workspace,java.util.List)
-- public void org.jenkinsci.plugins.p4.tasks.AbstractTask.setWorkspace(org.jenkinsci.plugins.p4.workspace.Workspace)
++ public void org.jenkinsci.plugins.p4.tasks.AbstractTask.setWorkspace(org.jenkinsci.plugins.p4.workspace.Workspace)
++ public CheckoutTask org.jenkinsci.plugins.p4.tasks.CheckoutTask(java.lang.String,hudson.model.Run,hudson.model.TaskListener,org.jenkinsci.plugins.p4.populate.Populate)
-- public CheckoutTask org.jenkinsci.plugins.p4.tasks.CheckoutTask(org.jenkinsci.plugins.p4.populate.Populate)
-- public org.jenkinsci.plugins.p4.changes.P4Revision org.jenkinsci.plugins.p4.tasks.CheckoutTask.getBuildChange()
++ public org.jenkinsci.plugins.p4.changes.P4Ref org.jenkinsci.plugins.p4.tasks.CheckoutTask.getBuildChange()
-- public java.util.List org.jenkinsci.plugins.p4.tasks.CheckoutTask.getChanges(org.jenkinsci.plugins.p4.changes.P4Revision)
++ public java.util.List org.jenkinsci.plugins.p4.tasks.CheckoutTask.getChangesFull(java.util.List)
-- public java.util.List org.jenkinsci.plugins.p4.tasks.CheckoutTask.getChangesFull(org.jenkinsci.plugins.p4.changes.P4Revision)
++ public J org.jenkinsci.plugins.p4.tasks.CheckoutTask.getReview()
-- public int org.jenkinsci.plugins.p4.tasks.CheckoutTask.getReview()
++ public java.util.List org.jenkinsci.plugins.p4.tasks.CheckoutTask.getSyncChange()
-- public org.jenkinsci.plugins.p4.changes.P4Revision org.jenkinsci.plugins.p4.tasks.CheckoutTask.getSyncChange()
++ public void org.jenkinsci.plugins.p4.tasks.CheckoutTask.setBuildChange(org.jenkinsci.plugins.p4.changes.P4Ref)
-- public void org.jenkinsci.plugins.p4.tasks.CheckoutTask.setBuildChange(org.jenkinsci.plugins.p4.changes.P4Revision)
++ public void org.jenkinsci.plugins.p4.tasks.CheckoutTask.setIncrementalChanges(java.util.List)
++ public PollTask org.jenkinsci.plugins.p4.tasks.PollTask(java.lang.String,hudson.model.Run,hudson.model.TaskListener,java.util.List,java.util.List)
-- public PollTask org.jenkinsci.plugins.p4.tasks.PollTask(java.util.List)
++ public PublishTask org.jenkinsci.plugins.p4.tasks.PublishTask(java.lang.String,hudson.model.Run,hudson.model.TaskListener,org.jenkinsci.plugins.p4.publish.Publish)
-- public PublishTask org.jenkinsci.plugins.p4.tasks.PublishTask(org.jenkinsci.plugins.p4.publish.Publish)
++ public RemoveClientTask org.jenkinsci.plugins.p4.tasks.RemoveClientTask(java.lang.String,hudson.model.Item,hudson.model.TaskListener)
++ public RemoveClientTask org.jenkinsci.plugins.p4.tasks.RemoveClientTask(java.lang.String,hudson.model.Run,hudson.model.TaskListener)
-- public RemoveClientTask org.jenkinsci.plugins.p4.tasks.RemoveClientTask(java.lang.String,java.lang.String,org.jenkinsci.plugins.p4.populate.Populate)
++ public void org.jenkinsci.plugins.p4.tasks.RemoveClientTask.setDeleteClient(boolean)
++ public void org.jenkinsci.plugins.p4.tasks.RemoveClientTask.setDeleteFiles(boolean)
++ public java.lang.Object org.jenkinsci.plugins.p4.tasks.RemoveClientTask.task(org.jenkinsci.plugins.p4.client.ClientHelper)
++ public TaggingTask org.jenkinsci.plugins.p4.tasks.TaggingTask(java.lang.String,hudson.model.Run,hudson.model.TaskListener,java.lang.String,java.lang.String)
-- public TaggingTask org.jenkinsci.plugins.p4.tasks.TaggingTask(java.lang.String,java.lang.String)
-- public UnshelveTask org.jenkinsci.plugins.p4.tasks.UnshelveTask(java.lang.String)
++ public UnshelveTask org.jenkinsci.plugins.p4.tasks.UnshelveTask(java.lang.String,hudson.model.Run,hudson.model.TaskListener,java.lang.String,boolean)
-- public void org.jenkinsci.plugins.p4.tasks.UnshelveTask.setShelf(int)
++ public void org.jenkinsci.plugins.p4.tasks.UnshelveTask.setShelf(long)
++ public WhereTask org.jenkinsci.plugins.p4.tasks.WhereTask(java.lang.String,hudson.model.Run,hudson.model.TaskListener,java.lang.String)
++ public void org.jenkinsci.plugins.p4.tasks.WhereTask.checkRoles(org.jenkinsci.remoting.RoleChecker)
++ public java.lang.String org.jenkinsci.plugins.p4.tasks.WhereTask.invoke(java.io.File,hudson.remoting.VirtualChannel)
++ public java.lang.Object org.jenkinsci.plugins.p4.tasks.WhereTask.task(org.jenkinsci.plugins.p4.client.ClientHelper)
-- public void org.jenkinsci.plugins.p4.trigger.P4Hook.doChange(org.kohsuke.stapler.StaplerRequest)
++ public void org.jenkinsci.plugins.p4.trigger.P4Hook.doChange(org.kohsuke.stapler.StaplerRequest)
++ public void org.jenkinsci.plugins.p4.trigger.P4Hook.doChangeSubmit(org.kohsuke.stapler.StaplerRequest,org.kohsuke.stapler.StaplerResponse)
++ public void org.jenkinsci.plugins.p4.trigger.P4Hook.doEvent(org.kohsuke.stapler.StaplerRequest)
++ public P4HookCrumbExclusion org.jenkinsci.plugins.p4.trigger.P4HookCrumbExclusion()
++ public java.lang.String org.jenkinsci.plugins.p4.trigger.P4HookCrumbExclusion.getExclusionPath(java.lang.String)
++ public bool org.jenkinsci.plugins.p4.trigger.P4HookCrumbExclusion.process(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)
-- public java.io.File org.jenkinsci.plugins.p4.trigger.P4Trigger.getLogFile()
++ public java.io.File org.jenkinsci.plugins.p4.trigger.P4Trigger.getLogFile(hudson.model.Job)
++ public static hudson.util.ListBoxModel org.jenkinsci.plugins.p4.unshelve.UnshelveBuilder$DescriptorImpl.doFillResolveItems()
++ public UnshelveBuilder org.jenkinsci.plugins.p4.unshelve.UnshelveBuilder(java.lang.String,java.lang.String,boolean)
++ public UnshelveBuilder org.jenkinsci.plugins.p4.unshelve.UnshelveBuilder(java.lang.String,java.lang.String,boolean,boolean)
++ public bool org.jenkinsci.plugins.p4.unshelve.UnshelveBuilder.isIgnoreEmpty()
++ public bool org.jenkinsci.plugins.p4.unshelve.UnshelveBuilder.isTidy()
++ public UnshelveBuilderStep org.jenkinsci.plugins.p4.unshelve.UnshelveBuilderStep(java.lang.String,org.jenkinsci.plugins.p4.workspace.Workspace,java.lang.String,java.lang.String,boolean)
++ public UnshelveBuilderStep org.jenkinsci.plugins.p4.unshelve.UnshelveBuilderStep(java.lang.String,org.jenkinsci.plugins.p4.workspace.Workspace,java.lang.String,java.lang.String,boolean,boolean)
++ public P4ApproveStep$DescriptorImpl org.jenkinsci.plugins.p4.workflow.P4ApproveStep$DescriptorImpl()
++ public hudson.util.FormValidation org.jenkinsci.plugins.p4.workflow.P4ApproveStep$DescriptorImpl.doCheckCredential(hudson.model.Item,java.lang.String)
++ public hudson.util.ListBoxModel org.jenkinsci.plugins.p4.workflow.P4ApproveStep$DescriptorImpl.doFillCredentialItems(hudson.model.Item,java.lang.String)
++ public hudson.util.ListBoxModel org.jenkinsci.plugins.p4.workflow.P4ApproveStep$DescriptorImpl.doFillStatusItems()
++ public java.lang.String org.jenkinsci.plugins.p4.workflow.P4ApproveStep$DescriptorImpl.getDisplayName()
++ public java.lang.String org.jenkinsci.plugins.p4.workflow.P4ApproveStep$DescriptorImpl.getFunctionName()
++ public java.util.Set org.jenkinsci.plugins.p4.workflow.P4ApproveStep$DescriptorImpl.getRequiredContext()
++ protected P4ApproveStep$P4ApproveStepExecution org.jenkinsci.plugins.p4.workflow.P4ApproveStep$P4ApproveStepExecution(org.jenkinsci.plugins.p4.workflow.P4ApproveStep,org.jenkinsci.plugins.workflow.steps.StepContext)
++ protected java.lang.Void org.jenkinsci.plugins.p4.workflow.P4ApproveStep$P4ApproveStepExecution.run()
++ public P4ApproveStep org.jenkinsci.plugins.p4.workflow.P4ApproveStep(java.lang.String,java.lang.String,java.lang.String)
++ public java.lang.String org.jenkinsci.plugins.p4.workflow.P4ApproveStep.getCredential()
++ public java.lang.String org.jenkinsci.plugins.p4.workflow.P4ApproveStep.getDescription()
++ public java.lang.String org.jenkinsci.plugins.p4.workflow.P4ApproveStep.getReview()
++ public java.lang.String org.jenkinsci.plugins.p4.workflow.P4ApproveStep.getStatus()
++ public void org.jenkinsci.plugins.p4.workflow.P4ApproveStep.setDescription(java.lang.String)
++ public org.jenkinsci.plugins.workflow.steps.StepExecution org.jenkinsci.plugins.p4.workflow.P4ApproveStep.start(org.jenkinsci.plugins.workflow.steps.StepContext)
++ public hudson.util.FormValidation org.jenkinsci.plugins.p4.workflow.P4PublishStep$DescriptorImpl.doCheckCredential(hudson.model.Item,java.lang.String)
-- public hudson.util.FormValidation org.jenkinsci.plugins.p4.workflow.P4PublishStep$DescriptorImpl.doCheckCredential(java.lang.String)
-- public hudson.util.ListBoxModel org.jenkinsci.plugins.p4.workflow.P4PublishStep$DescriptorImpl.doFillCredentialItems()
++ public hudson.util.ListBoxModel org.jenkinsci.plugins.p4.workflow.P4PublishStep$DescriptorImpl.doFillCredentialItems(hudson.model.Item,java.lang.String)
++ public java.util.Set org.jenkinsci.plugins.p4.workflow.P4PublishStep$DescriptorImpl.getRequiredContext()
-- public P4PublishStep$P4PublishStepExecution org.jenkinsci.plugins.p4.workflow.P4PublishStep$P4PublishStepExecution()
++ protected P4PublishStep$P4PublishStepExecution org.jenkinsci.plugins.p4.workflow.P4PublishStep$P4PublishStepExecution(org.jenkinsci.plugins.p4.workflow.P4PublishStep,org.jenkinsci.plugins.workflow.steps.StepContext)
++ public org.jenkinsci.plugins.workflow.steps.StepExecution org.jenkinsci.plugins.p4.workflow.P4PublishStep.start(org.jenkinsci.plugins.workflow.steps.StepContext)
-- public hudson.model.AutoCompletionCandidates org.jenkinsci.plugins.p4.workflow.P4Step$DescriptorImpl.doAutoCompleteStream(java.lang.String)
-- public hudson.model.AutoCompletionCandidates org.jenkinsci.plugins.p4.workflow.P4Step$DescriptorImpl.doAutoCompleteTemplate(java.lang.String)
++ public hudson.util.FormValidation org.jenkinsci.plugins.p4.workflow.P4Step$DescriptorImpl.doCheckCredential(hudson.model.Item,java.lang.String)
-- public hudson.util.FormValidation org.jenkinsci.plugins.p4.workflow.P4Step$DescriptorImpl.doCheckCredential(java.lang.String)
-- public hudson.util.FormValidation org.jenkinsci.plugins.p4.workflow.P4Step$DescriptorImpl.doCheckPath(java.lang.String,java.lang.String,java.lang.String)
-- public hudson.util.FormValidation org.jenkinsci.plugins.p4.workflow.P4Step$DescriptorImpl.doCheckStream(java.lang.String,java.lang.String,java.lang.String)
-- public hudson.util.FormValidation org.jenkinsci.plugins.p4.workflow.P4Step$DescriptorImpl.doCheckTemplate(java.lang.String,java.lang.String,java.lang.String)
-- public hudson.util.ListBoxModel org.jenkinsci.plugins.p4.workflow.P4Step$DescriptorImpl.doFillCredentialItems()
++ public hudson.util.ListBoxModel org.jenkinsci.plugins.p4.workflow.P4Step$DescriptorImpl.doFillCredentialItems(hudson.model.Item,java.lang.String)
++ public org.jenkinsci.plugins.p4.populate.Populate org.jenkinsci.plugins.p4.workflow.P4Step.getPopulate()
++ public org.jenkinsci.plugins.p4.workflow.source.AbstractSource org.jenkinsci.plugins.p4.workflow.P4Step.getSource()
++ public org.jenkinsci.plugins.p4.workspace.Workspace org.jenkinsci.plugins.p4.workflow.P4Step.getWorkspace()
++ public void org.jenkinsci.plugins.p4.workflow.P4Step.setPopulate(org.jenkinsci.plugins.p4.populate.Populate)
++ public void org.jenkinsci.plugins.p4.workflow.P4Step.setSource(org.jenkinsci.plugins.p4.workflow.source.AbstractSource)
++ public void org.jenkinsci.plugins.p4.workflow.P4Step.setWorkspace(org.jenkinsci.plugins.p4.workspace.Workspace)
++ public java.util.Set org.jenkinsci.plugins.p4.workflow.P4TaggingStep$DescriptorImpl.getRequiredContext()
-- public P4TaggingStep$P4TaggingStepExecution org.jenkinsci.plugins.p4.workflow.P4TaggingStep$P4TaggingStepExecution()
++ protected P4TaggingStep$P4TaggingStepExecution org.jenkinsci.plugins.p4.workflow.P4TaggingStep$P4TaggingStepExecution(org.jenkinsci.plugins.workflow.steps.StepContext,org.jenkinsci.plugins.p4.workflow.P4TaggingStep)
++ public org.jenkinsci.plugins.workflow.steps.StepExecution org.jenkinsci.plugins.p4.workflow.P4TaggingStep.start(org.jenkinsci.plugins.workflow.steps.StepContext)
++ public hudson.util.FormValidation org.jenkinsci.plugins.p4.workflow.P4UnshelveStep$DescriptorImpl.doCheckCredential(hudson.model.Item,java.lang.String)
++ public hudson.util.ListBoxModel org.jenkinsci.plugins.p4.workflow.P4UnshelveStep$DescriptorImpl.doFillCredentialItems(hudson.model.Item,java.lang.String)
++ public hudson.util.ListBoxModel org.jenkinsci.plugins.p4.workflow.P4UnshelveStep$DescriptorImpl.doFillResolveItems()
++ public java.util.Set org.jenkinsci.plugins.p4.workflow.P4UnshelveStep$DescriptorImpl.getRequiredContext()
-- public P4UnshelveStep$P4UnshelveStepExecution org.jenkinsci.plugins.p4.workflow.P4UnshelveStep$P4UnshelveStepExecution()
++ protected P4UnshelveStep$P4UnshelveStepExecution org.jenkinsci.plugins.p4.workflow.P4UnshelveStep$P4UnshelveStepExecution(org.jenkinsci.plugins.p4.workflow.P4UnshelveStep,org.jenkinsci.plugins.workflow.steps.StepContext)
++ public P4UnshelveStep org.jenkinsci.plugins.p4.workflow.P4UnshelveStep(java.lang.String,org.jenkinsci.plugins.p4.workspace.Workspace,java.lang.String,java.lang.String,boolean)
++ public P4UnshelveStep org.jenkinsci.plugins.p4.workflow.P4UnshelveStep(java.lang.String,org.jenkinsci.plugins.p4.workspace.Workspace,java.lang.String,java.lang.String,boolean,boolean)
++ public java.lang.String org.jenkinsci.plugins.p4.workflow.P4UnshelveStep.getCredential()
++ public org.jenkinsci.plugins.p4.workspace.Workspace org.jenkinsci.plugins.p4.workflow.P4UnshelveStep.getWorkspace()
++ public bool org.jenkinsci.plugins.p4.workflow.P4UnshelveStep.isIgnoreEmpty()
++ public bool org.jenkinsci.plugins.p4.workflow.P4UnshelveStep.isTidy()
++ public org.jenkinsci.plugins.workflow.steps.StepExecution org.jenkinsci.plugins.p4.workflow.P4UnshelveStep.start(org.jenkinsci.plugins.workflow.steps.StepContext)
++ public AbstractSource org.jenkinsci.plugins.p4.workflow.source.AbstractSource()
++ public static hudson.DescriptorExtensionList org.jenkinsci.plugins.p4.workflow.source.AbstractSource.all()
++ public static java.lang.String org.jenkinsci.plugins.p4.workflow.source.AbstractSource.getClientView(java.lang.String,java.lang.String)
++ public org.jenkinsci.plugins.p4.workflow.source.P4SyncDescriptor org.jenkinsci.plugins.p4.workflow.source.AbstractSource.getDescriptor()
++ public abstract org.jenkinsci.plugins.p4.workspace.Workspace org.jenkinsci.plugins.p4.workflow.source.AbstractSource.getWorkspace(java.lang.String,java.lang.String)
++ public DepotSource$DescriptorImpl org.jenkinsci.plugins.p4.workflow.source.DepotSource$DescriptorImpl()
++ public java.lang.String org.jenkinsci.plugins.p4.workflow.source.DepotSource$DescriptorImpl.getDisplayName()
++ public DepotSource org.jenkinsci.plugins.p4.workflow.source.DepotSource()
++ public DepotSource org.jenkinsci.plugins.p4.workflow.source.DepotSource(java.lang.String)
++ public java.lang.String org.jenkinsci.plugins.p4.workflow.source.DepotSource.getDepot()
++ protected org.jenkinsci.plugins.p4.workspace.Workspace org.jenkinsci.plugins.p4.workflow.source.DepotSource.getManualWorkspace(java.lang.String,java.lang.String,java.lang.String)
++ public org.jenkinsci.plugins.p4.workspace.Workspace org.jenkinsci.plugins.p4.workflow.source.DepotSource.getWorkspace(java.lang.String,java.lang.String)
++ public GraphSource$DescriptorImpl org.jenkinsci.plugins.p4.workflow.source.GraphSource$DescriptorImpl()
++ public java.lang.String org.jenkinsci.plugins.p4.workflow.source.GraphSource$DescriptorImpl.getDisplayName()
++ public GraphSource org.jenkinsci.plugins.p4.workflow.source.GraphSource(java.lang.String)
++ public java.lang.String org.jenkinsci.plugins.p4.workflow.source.GraphSource.getGraph()
++ public org.jenkinsci.plugins.p4.workspace.Workspace org.jenkinsci.plugins.p4.workflow.source.GraphSource.getWorkspace(java.lang.String,java.lang.String)
++ protected P4SyncDescriptor org.jenkinsci.plugins.p4.workflow.source.P4SyncDescriptor()
++ public P4SyncDescriptor org.jenkinsci.plugins.p4.workflow.source.P4SyncDescriptor(java.lang.Class)
++ public hudson.model.AutoCompletionCandidates org.jenkinsci.plugins.p4.workflow.source.P4SyncDescriptor.doAutoCompletePin(java.lang.String)
++ public StreamSource$DescriptorImpl org.jenkinsci.plugins.p4.workflow.source.StreamSource$DescriptorImpl()
++ public hudson.model.AutoCompletionCandidates org.jenkinsci.plugins.p4.workflow.source.StreamSource$DescriptorImpl.doAutoCompleteStream(java.lang.String)
++ public hudson.util.FormValidation org.jenkinsci.plugins.p4.workflow.source.StreamSource$DescriptorImpl.doCheckStream(java.lang.String)
++ public java.lang.String org.jenkinsci.plugins.p4.workflow.source.StreamSource$DescriptorImpl.getDisplayName()
++ public StreamSource org.jenkinsci.plugins.p4.workflow.source.StreamSource(java.lang.String)
++ public java.lang.String org.jenkinsci.plugins.p4.workflow.source.StreamSource.getStream()
++ public org.jenkinsci.plugins.p4.workspace.Workspace org.jenkinsci.plugins.p4.workflow.source.StreamSource.getWorkspace(java.lang.String,java.lang.String)
++ public TemplateSource$DescriptorImpl org.jenkinsci.plugins.p4.workflow.source.TemplateSource$DescriptorImpl()
++ public hudson.model.AutoCompletionCandidates org.jenkinsci.plugins.p4.workflow.source.TemplateSource$DescriptorImpl.doAutoCompleteTemplate(java.lang.String)
++ public hudson.util.FormValidation org.jenkinsci.plugins.p4.workflow.source.TemplateSource$DescriptorImpl.doCheckTemplate(java.lang.String)
++ public java.lang.String org.jenkinsci.plugins.p4.workflow.source.TemplateSource$DescriptorImpl.getDisplayName()
++ public TemplateSource org.jenkinsci.plugins.p4.workflow.source.TemplateSource(java.lang.String)
++ public java.lang.String org.jenkinsci.plugins.p4.workflow.source.TemplateSource.getTemplate()
++ public org.jenkinsci.plugins.p4.workspace.Workspace org.jenkinsci.plugins.p4.workflow.source.TemplateSource.getWorkspace(java.lang.String,java.lang.String)
++ public java.lang.String org.jenkinsci.plugins.p4.workspace.Expand.clean(java.lang.String)
++ public java.lang.Object org.jenkinsci.plugins.p4.workspace.Expand.clone()
++ public java.lang.String org.jenkinsci.plugins.p4.workspace.Expand.formatID(java.lang.String)
++ public ManualWorkspaceImpl org.jenkinsci.plugins.p4.workspace.ManualWorkspaceImpl(java.lang.String,boolean,java.lang.String,org.jenkinsci.plugins.p4.workspace.WorkspaceSpec,boolean)
++ public java.lang.Object org.jenkinsci.plugins.p4.workspace.ManualWorkspaceImpl.clone()
++ public void org.jenkinsci.plugins.p4.workspace.ManualWorkspaceImpl.setName(java.lang.String)
++ public void org.jenkinsci.plugins.p4.workspace.ManualWorkspaceImpl.setSpec(org.jenkinsci.plugins.p4.workspace.WorkspaceSpec)
++ public void org.jenkinsci.plugins.p4.workspace.SpecWorkspaceImpl.setName(java.lang.String)
++ public StaticWorkspaceImpl org.jenkinsci.plugins.p4.workspace.StaticWorkspaceImpl(java.lang.String,boolean,java.lang.String,boolean)
++ public void org.jenkinsci.plugins.p4.workspace.StaticWorkspaceImpl.setName(java.lang.String)
-- public StreamDescImpl org.jenkinsci.plugins.p4.workspace.StreamDescImpl()
-- public static hudson.model.AutoCompletionCandidates org.jenkinsci.plugins.p4.workspace.StreamDescImpl.doAutoCompleteStreamName(java.lang.String)
-- public static hudson.util.FormValidation org.jenkinsci.plugins.p4.workspace.StreamDescImpl.doCheckFormat(java.lang.String)
-- public static hudson.util.FormValidation org.jenkinsci.plugins.p4.workspace.StreamDescImpl.doCheckStreamName(java.lang.String)
++ public void org.jenkinsci.plugins.p4.workspace.StreamWorkspaceImpl.setName(java.lang.String)
++ public void org.jenkinsci.plugins.p4.workspace.TemplateWorkspaceImpl.setName(java.lang.String)
++ public bool org.jenkinsci.plugins.p4.workspace.TemplateWorkspaceImpl.templateExists(com.perforce.p4java.server.IOptionsServer)
-- public Workspace org.jenkinsci.plugins.p4.workspace.Workspace(java.lang.String,boolean)
++ public Workspace org.jenkinsci.plugins.p4.workspace.Workspace(java.lang.String,boolean,boolean)
++ public void org.jenkinsci.plugins.p4.workspace.Workspace.addEnv(java.lang.String,java.lang.String)
-- public java.lang.Object org.jenkinsci.plugins.p4.workspace.Workspace.clone()
++ protected java.lang.Object org.jenkinsci.plugins.p4.workspace.Workspace.clone()
++ public org.jenkinsci.plugins.p4.workspace.Workspace org.jenkinsci.plugins.p4.workspace.Workspace.deepClone()
++ public java.lang.String org.jenkinsci.plugins.p4.workspace.Workspace.getSyncID()
++ public bool org.jenkinsci.plugins.p4.workspace.Workspace.isCleanup()
++ public abstract void org.jenkinsci.plugins.p4.workspace.Workspace.setName(java.lang.String)
++ public void org.jenkinsci.plugins.p4.workspace.Workspace.setSyncID(java.lang.String)
++ public hudson.util.ListBoxModel org.jenkinsci.plugins.p4.workspace.WorkspaceSpec$DescriptorImpl.doFillTypeItems()
++ public WorkspaceSpec org.jenkinsci.plugins.p4.workspace.WorkspaceSpec(boolean,boolean,boolean,boolean,boolean,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)
++ public WorkspaceSpec org.jenkinsci.plugins.p4.workspace.WorkspaceSpec(java.lang.String,java.lang.String)
++ public java.lang.Object org.jenkinsci.plugins.p4.workspace.WorkspaceSpec.clone()
++ public java.lang.String org.jenkinsci.plugins.p4.workspace.WorkspaceSpec.getChangeView()
++ public java.lang.String org.jenkinsci.plugins.p4.workspace.WorkspaceSpec.getServerID()
++ public java.lang.String org.jenkinsci.plugins.p4.workspace.WorkspaceSpec.getType()
++ public bool org.jenkinsci.plugins.p4.workspace.WorkspaceSpec.isBackup()
++ public void org.jenkinsci.plugins.p4.workspace.WorkspaceSpec.setView(java.lang.String)
++ public java.lang.String org.jenkinsci.plugins.p4.workspace.WorkspaceSpecType.getId()
++ public int org.jenkinsci.plugins.p4.workspace.WorkspaceSpecType.getMinVersion()
++ public static org.jenkinsci.plugins.p4.workspace.WorkspaceSpecType org.jenkinsci.plugins.p4.workspace.WorkspaceSpecType.valueOf(java.lang.String)
++ public static org.jenkinsci.plugins.p4.workspace.WorkspaceSpecType org.jenkinsci.plugins.p4.workspace.WorkspaceSpecType.values()