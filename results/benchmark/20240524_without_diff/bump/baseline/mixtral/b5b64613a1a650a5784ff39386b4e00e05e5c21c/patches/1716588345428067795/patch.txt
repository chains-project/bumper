import org.jfrog.buildinfo.client.ArtifactoryServer;
import org.jfrog.buildinfo.client.DistributionServer;
import org.jfrog.buildinfo.client.util.SpecUtils;
import org.jfrog.hudson.CredentialsIdResolver;
import org.jfrog.hudson.ReleaseBundleUploader;
import org.jfrog.hudson.ReleaseManagementServerFactory;
import org.jfrog.hudson.pipeline.common.types.ArtifactoryServerImpl;
import org.jfrog.hudson.pipeline.common.types.DistributionServerImpl;
import org.jfrog.hudson.pipeline.common.types.JFrogPlatformInstanceImpl;
import org.jfrog.hudson.util.JFrogPlatformUtils;

@Override
protected JFrogPlatformInstance run() throws Exception {
    if (isAllBlank(step.url, step.artifactoryUrl, step.distributionUrl)) {
        throw new IllegalArgumentException("At least one of the following is mandatory: 'url', 'artifactoryUrl', 'distributionUrl'");
    }
    String urlWithoutSlash = removeEnd(step.url, "/");
    String artifactoryUrl = defaultIfBlank(step.artifactoryUrl, urlWithoutSlash + "/" + "artifactory");
    String distributionUrl = defaultIfBlank(step.distributionUrl, urlWithoutSlash + "/" + "distribution");

    ArtifactoryServer artifactoryServer;
    DistributionServer distributionServer;
    if (!isEmpty(step.credentialsId)) {
        artifactoryServer = ReleaseManagementServerFactory.createArtifactoryServer(artifactoryUrl, CredentialsIdResolver.resolve(step.credentialsId));
        distributionServer = ReleaseManagementServerFactory.createDistributionServer(distributionUrl, CredentialsIdResolver.resolve(step.credentialsId));
    } else {
        artifactoryServer = ReleaseManagementServerFactory.createArtifactoryServer(artifactoryUrl, step.username, step.password);
        distributionServer = ReleaseManagementServerFactory.createDistributionServer(distributionUrl, step.username, step.password);
    }
    artifactoryServer.setPlatformUrl(urlWithoutSlash);
    return new JFrogPlatformInstanceImpl(new ArtifactoryServerImpl(artifactoryServer), new DistributionServerImpl(distributionServer), urlWithoutSlash, "");
}