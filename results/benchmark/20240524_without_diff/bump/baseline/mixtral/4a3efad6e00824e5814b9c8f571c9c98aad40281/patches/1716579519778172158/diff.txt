1c1,84
< import eu.europa.esig.dss.pades.CertificationPermission;
\ No newline at end of file
---
> import eu.europa.esig.dss.pades.PadesCertificationLevel;
> import eu.europa.esig.dss.pades.PadesSigner;
> import eu.europa.esig.dss.pades.PdfBoxUtils;
> import eu.europa.esig.dss.pades.PdfPublicKeyData;
> import eu.europa.esig.dss.pades.SignaturePolicySource;
> import eu.europa.esig.dss.pades.SignaturePolicyTree;
> import eu.europa.esig.dss.pades.SignatureValue;
> import eu.europa.esig.dss.pades.StandardSignatureParameters;
> import eu.europa.esig.dss.pades.TokenProvider;
> import eu.europa.esig.dss.pades.validation.PdfBoxRevision;
> import eu.europa.esig.dss.pades.validation.PdfRevision;
> import eu.europa.esig.dss.pades.validation.PdfSignatureValidationContext;
> import eu.europa.esig.dss.pades.validation.PdfSignatureValidationResult;
> import eu.europa.esig.dss.pades.validation.PdfSignaturesValidator;
> import eu.europa.esig.dss.pades.validation.SignaturePolicyIdentifier;
> import eu.europa.esig.dss.pades.validation.TimeStampTokenProvider;
> import eu.europa.esig.dss.token.DSSPrivateKeyEntry;
> import eu.europa.esig.dss.token.DSSPrivateKeySource;
> import eu.europa.esig.dss.token.DSSPublicKeyEntry;
> import eu.europa.esig.dss.token.DSSPublicKeySource;
> import eu.europa.esig.dss.validation.CommonCertificateVerifier;
> import eu.europa.esig.dss.validation.CertificateVerifier;
> import eu.europa.esig.dss.validation.SignedDocumentValidator;
> import eu.europa.esig.dss.validation.reports.Reports;
> 
> import java.io.File;
> import java.io.FileInputStream;
> import java.io.FileOutputStream;
> import java.io.IOException;
> import java.io.InputStream;
> import java.security.KeyStore;
> import java.security.KeyStoreException;
> import java.security.NoSuchAlgorithmException;
> import java.security.PrivateKey;
> import java.security.Security;
> import java.security.UnrecoverableKeyException;
> import java.security.cert.Certificate;
> import java.security.cert.CertificateException;
> import java.util.ArrayList;
> import java.util.Collection;
> import java.util.Date;
> import java.util.List;
> 
> import org.slf4j.Logger;
> import org.slf4j.LoggerFactory;
> 
> import org.openpdf.sign.PDFSigner;
> 
> public class Signer {
> 
>     private static final Logger LOG = LoggerFactory.getLogger(Signer.class);
> 
>     private final String src;
> 
>     private final String dest;
> 
>     private final String pin;
> 
>     public Signer(String src, String dest, String pin) {
>         this.src = src;
>         this.dest = dest;
>         this.pin = pin;
>     }
> 
>     public void sign() throws Exception {
>         try (InputStream is = new FileInputStream(src)) {
>             File outputFile = new File(dest);
>             try (FileOutputStream os = new FileOutputStream(outputFile)) {
>                 KeyStore keyStore = KeyStore.getInstance("PKCS12");
>                 keyStore.load(new FileInputStream("certificate.p12"), "password".toCharArray());
>                 PrivateKey privateKey = (PrivateKey) keyStore.getKey("certificate", "password".toCharArray());
>                 Certificate[] certificateChain = keyStore.getCertificateChain("certificate");
> 
>                 PadesSigner signer = new PadesSigner(new StandardSignatureParameters());
>                 signer.setSigningCertificate(certificateChain[0]);
>                 signer.setSignaturePackaging(PadesCertificationLevel.CERTIFY_DETACHED);
>                 signer.setSignaturePolicy(SignaturePolicySource.RES_DIR, "policy.asice");
> 
>                 PDFSigner pdfSigner = new PDFSigner(is, os, signer);
>                 pdfSigner.sign();
>             }
>         }
>     }
> }
\ No newline at end of file
