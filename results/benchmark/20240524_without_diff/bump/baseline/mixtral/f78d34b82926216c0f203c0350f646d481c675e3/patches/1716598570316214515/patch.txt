import org.apache.commons.lang3.RandomStringUtils;
import org.apache.commons.lang3.text.WordUtils;
import org.bukkit.Bukkit;
import org.bukkit.World;
import org.bukkit.craftbukkit.v1_16_R3.CraftServer;
import org.bukkit.craftbukkit.v1_16_R3.CraftWorld;
import org.bukkit.craftbukkit.v1_16_R3.entity.CraftPlayer;
import org.bukkit.entity.PlayerInteractManager;
import net.minecraft.server.v1_16_R3.EntityPlayer;
import net.minecraft.server.v1_16_R3.GameProfile;
import net.minecraft.server.v1_16_R3.PlayerInteractManager_;
import net.minecraft.server.v1_16_R3.WorldServer;
import java.util.UUID;
import java.util.regex.Pattern;

public class PlayerUtils {

    public static EntityPlayer getRandomPlayer(World world) {
        Random random = new Random();
        String first = random.nextBoolean()
            ? RandomStringUtils.randomAlphanumeric(new Random().nextInt(13) + 1)
            : WordUtils.randomDeterministicWord(5);
        String last = random.nextBoolean()
            ? RandomStringUtils.randomAlphanumeric(new Random().nextInt(13) + 1)
            : WordUtils.randomDeterministicWord(5);

        if (random.nextBoolean()) {
            first = obfuscate(first);
            last = obfuscate(last);
        }

        String name = first + (random.nextBoolean() ? "_": "") + last + (random.nextBoolean() ? "19" + random.nextInt(120): "");
        if (name.length() > 16)
            name = random.nextBoolean() ? first: last;

        if (name.length() > 16)
            name = RandomStringUtils.randomAlphanumeric(random.nextInt(16));

        WorldServer worldServer = ((CraftWorld) world).getHandle();

        Pair<String, String> skin = getRandomSkin();

        GameProfile profile = new GameProfile(UUID.randomUUID(), name);

        profile.getProperties().put("textures", new Property("textures", skin.getLeft(), skin.getRight()));

        return new EntityPlayer(
            ((CraftServer) Bukkit.getServer()).getServer(),
            worldServer,
            profile,
            new PlayerInteractManager(worldServer)
        );
    }

    private static String obfuscate(String input) {
        StringBuilder output = new StringBuilder();
        Pattern pattern = Pattern.compile(".");
        Matcher matcher = pattern.matcher(input);

        while (matcher.find()) {
            char c = Character.toLowerCase(matcher.group().charAt(0));
            if (Character.isLetter(c)) {
                if (Character.isUpperCase(c)) {
                    output.append((char) (c - 'A' + 'a'));
                } else {
                    output.append((char) (c - 'a' + 'A'));
                }
            } else {
                output.append(c);
            }
        }
        return output.toString();
    }
}