1,8c1,11
< /**
<      * まほーじん！！
<      *
<      * @param player  餌食
<      * @param seconds 秒数
<      */
<     public static void magic(Player player, int seconds)
<     {
---
> import org.bukkit.Location;
> import org.bukkit.Particle;
> import org.bukkit.util.Vector;
> 
> import java.util.Random;
> 
> public class Decorations {
> 
>     // ...
> 
>     public static void magic(Player player, int seconds) {
13a17,18
>             Random random = new Random();
> 
17c22,23
<                 for (double i = 0; i < Math.PI * 2; i++)
---
>                 double angle = 0;
>                 for (int i = 0; i < 60; i++)
21c27
<                     circle(center.clone().add(0, 0.9, 0), count[0], 3, Particle.CRIT);
---
>                     circle(center, count[0], 3, Particle.CRIT, angle);
23c29
<                     circle(center.add(0, 0.7, 0), count[0], 2.7, Particle.ENCHANTMENT_TABLE);
---
>                     circle(center.add(0, 0.7, 0), count[0], 2.7, Particle.ENCHANTMENT_TABLE, angle);
25c31
<                     circle(center.clone().add(0, wave.get(0.01, false), 0), count[0], wave.getStatic());
---
>                     circle(center.clone().add(0, wave.get(0.01, false), 0), count[0], wave.getStatic(), angle);
27,30c33,36
<                     circle(center.clone().add(3.2, 0.7, 3.2), count[0], 1.5);
<                     circle(center.clone().add(-3.2, 0.7, -3.2), count[0], 1.5);
<                     circle(center.clone().add(-3.2, 0.7, 3.2), count[0], 1.5);
<                     circle(center.clone().add(3.2, 0.7, -3.2), count[0], 1.5);
---
>                     circle(center.clone().add(3.2, 0.7, 3.2), count[0], 1.5, angle);
>                     circle(center.clone().add(-3.2, 0.7, -3.2), count[0], 1.5, angle);
>                     circle(center.clone().add(-3.2, 0.7, 3.2), count[0], 1.5, angle);
>                     circle(center.clone().add(3.2, 0.7, -3.2), count[0], 1.5, angle);
32c38
<                     circle(center.clone().add(0, 1.5, 0), count[0], 5, Particle.SPELL_WITCH);
---
>                     circle(center.clone().add(0, 1.5, 0), count[0], 5, Particle.SPELL_WITCH, angle);
34a41,42
> 
>                     angle += Math.PI / 30;
39,45c47,61
<                 line(center.clone().add(3, 0.7, 0), center.clone().add(-1.5, 0.7, 2.3));
<                 line(center.clone().add(-1.5, 0.7, 2.3), center.clone().add(-1.5, 0.7, -2.3)); //三角
<                 line(center.clone().add(3, 0.7, 0), center.clone().add(-1.5, 0.7, -2.3));
< 
<                 line(center.clone().add(-3, 0.7, 0), center.clone().add(1.5, 0.7, -2.3));
<                 line(center.clone().add(1.5, 0.7, -2.3), center.clone().add(1.5, 0.7, 2.3)); //三角(反転)
<                 line(center.clone().add(-3, 0.7, 0), center.clone().add(1.5, 0.7, 2.3));
---
>                 Vector direction1 = new Vector(3, 0.7, 0).subtract(center.toVector()).normalize();
>                 Vector direction2 = new Vector(-1.5, 0.7, 2.3).subtract(center.toVector()).normalize();
>                 Vector direction3 = new Vector(-1.5, 0.7, -2.3).subtract(center.toVector()).normalize();
>                 Vector direction4 = new Vector(-3, 0.7, 0).subtract(center.toVector()).normalize();
>                 Vector direction5 = new Vector(1.5, 0.7, -2.3).subtract(center.toVector()).normalize();
>                 Vector direction6 = new Vector(1.5, 0.7, 2.3).subtract(center.toVector()).normalize();
> 
>                 line(center, direction1, count[0]);
>                 line(center, direction2, count[0]);
>                 line(center, direction3, count[0]);
>                 line(center, direction4, count[0]);
>                 line(center, direction5, count[0]);
>                 line(center, direction6, count[0]);
> 
>                 count[0]++;
59a76,107
> 
>     // ...
> 
>     private static void circle(Location center, int count, double radius, Particle particle) {
>         circle(center, count, radius, particle, 0);
>     }
> 
>     private static void circle(Location center, int count, double radius, Particle particle, double angle) {
>         for (double i = 0; i < Math.PI * 2; i += Math.PI / 30) {
>             double x = radius * Math.cos(i + angle);
>             double z = radius * Math.sin(i + angle);
>             center.getWorld().spawnParticle(particle,
>                     center.getX() + x, center.getY() + 0.7, center.getZ() + z, 1);
>         }
>     }
> 
>     private static void line(Location start, Vector direction, int count) {
>         for (double i = 0; i < 30; i++) {
>             Location end = start.clone().add(direction.multiply(i / 30));
>             for (double j = 0; j < 0.1; j += 0.05) {
>                 Particle particle = Particle.REDSTONE;
>                 if (random.nextBoolean()) {
>                     particle = Particle.SMOKE_NORMAL;
>                 }
>                 start.getWorld().spawnParticle(particle,
>                         end.getX() + random.nextDouble() - 0.05,
>                         end.getY() + random.nextDouble() - 0.05,
>                         end.getZ() + random.nextDouble() - 0.05, 0);
>             }
>         }
>     }
> }
\ No newline at end of file
