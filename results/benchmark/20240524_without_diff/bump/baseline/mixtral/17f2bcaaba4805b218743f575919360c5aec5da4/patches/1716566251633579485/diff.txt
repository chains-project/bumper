0a1,5
> import processing.core.PShape;
> 
> import static org.junit.Assert.assertEquals;
> import static org.junit.Assume.assumeTrue;
> 
3,4c8,10
<                 assumeTrue(GROUP_SHAPE.getChildCount() == 2);
<                 PShape out = PGS_Morphology.chaikinCut(GROUP_SHAPE, 0.5, 2);
---
>     assumeTrue(micycle.pgs.PGS_ShapeFactory.GROUP_SHAPE.getChildCount() == 2);
>     PShape groupShape = micycle.pgs.PGS_ShapeFactory.GROUP_SHAPE;
>     PShape out = micycle.pgs.PGS_Morphology.chaikinCut(groupShape, 0.5, 2);
