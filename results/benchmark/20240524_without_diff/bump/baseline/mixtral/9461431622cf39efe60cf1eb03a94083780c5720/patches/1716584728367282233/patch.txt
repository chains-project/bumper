private void registerHard(final MOGroup group) {
    try {
        final Field registry = server.getClass().getDeclaredField("registry");
        registry.setAccessible(true);
        SortedMap<MOScope, ManagedObject<?>> reg = server.getRegistry();
        DefaultMOContextScope contextScope = new DefaultMOContextScope(new OctetString(""), group.getScope());
        reg.put(contextScope, group);
        Type token = new TypeToken<SortedMap<MOScope, ManagedObject<?>>>(){}.getType();
        Map<MOScope, ManagedObject<?>> copyReg = new TreeMap<>(new MOComparator<>());
        copyReg.putAll(reg);
        registry.set(server, copyReg);
    } catch (NoSuchFieldException | IllegalAccessException e) {
        log.warn("could not set server registry", e);
    }
}

private static class MOComparator<T extends MOScope> implements Comparator<MOScope> {
    @Override
    public int compare(MOScope o1, MOScope o2) {
        return o1.compareTo(o2);
    }
}