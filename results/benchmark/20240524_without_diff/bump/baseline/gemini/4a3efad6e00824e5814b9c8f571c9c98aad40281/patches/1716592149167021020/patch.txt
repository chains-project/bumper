import eu.europa.esig.dss.pades.CertificationPermission;
import eu.europa.esig.dss.pades.PAdESService;
import eu.europa.esig.dss.spi.DSSUtils;
import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature;
import org.bouncycastle.tsp.TimeStampToken;

import java.io.IOException;
import java.io.InputStream;
import java.security.cert.X509Certificate;
import java.util.Date;

public class Signer {

    public static void sign(PDDocument document, InputStream p7sStream, InputStream tsaResponseStream, InputStream ocspResponseStream, X509Certificate signingCertificate, CertificationPermission certificationPermission, String signatureFieldName) throws IOException {
        // Get the signature object
        PDSignature signature = DSSUtils.getSignatureObject(document, signatureFieldName);

        // Create a PAdES service
        PAdESService padesService = new PAdESService(signingCertificate);

        // Set the certification permission
        padesService.setCertificationPermission(certificationPermission);

        // Set the TSA response
        TimeStampToken timeStampToken = DSSUtils.loadTimeStampToken(tsaResponseStream);
        padesService.setTsaToken(timeStampToken);

        // Set the OCSP response
        padesService.setOcspResponse(ocspResponseStream);

        // Set the P7S stream
        padesService.setSignature(p7sStream);

        // Sign the document
        padesService.sign(document, signature, signatureFieldName);

        // Set the signature creation date
        signature.setSigningTime(new Date());

        // Close the document
        document.close();
    }
}