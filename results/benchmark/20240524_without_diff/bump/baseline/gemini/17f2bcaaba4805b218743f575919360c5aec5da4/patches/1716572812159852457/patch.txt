  @Test
	void test_PGS_Morphology_minkDifference() {
		assumeTrue(GROUP_SHAPE.getChildCount() == 2);
		final PShape mink = new PShape(PShape.PATH);
		mink.beginShape();
		mink.vertex(0, 0);
		mink.vertex(5, 0);
		mink.vertex(5, 5);
		mink.vertex(0, 5);
		mink.endShape(PConstants.CLOSE);

		// Get the class of the PGS_MorphologyGroupShapeTests class
		Class<?> pgsMorphologyGroupShapeTestsClass = this.getClass();
		// Get the class loader of the PGS_MorphologyGroupShapeTests class
		ClassLoader classLoader = pgsMorphologyGroupShapeTestsClass.getClassLoader();
		// Use the class loader to load the PGS_Morphology class
		Class<?> pgsMorphologyClass = classLoader.loadClass("micycle.pgs.PGS_Morphology");
		// Get the minkDifference method of the PGS_Morphology class
		Method minkDifferenceMethod = pgsMorphologyClass.getMethod("minkDifference", PShape.class, PShape.class);
		// Invoke the minkDifference method with the GROUP_SHAPE and mink objects as arguments
		Object out = minkDifferenceMethod.invoke(null, GROUP_SHAPE, mink);
		// Cast the result to a PShape object
		PShape outPShape = (PShape) out;
		// Assert that the outPShape object has 2 children
		assertEquals(2, outPShape.getChildCount());
	}