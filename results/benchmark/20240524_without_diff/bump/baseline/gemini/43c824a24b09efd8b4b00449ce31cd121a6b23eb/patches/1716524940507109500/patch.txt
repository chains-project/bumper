import de.gwdg.metadataqa.api.json.DataElement;

public void de.gwdg.metadataqa.marc.MarcFactory.evaluateJsonBranch(DataElement jsonBranch, de.gwdg.metadataqa.api.model.pathcache.PathCache pathCache, de.gwdg.metadataqa.api.counter.CompletenessCounter completenessCounter, java.lang.String path, java.lang.Object value) {
    if (jsonBranch.hasFormat()) {
        completenessCounter.addFormat(path, jsonBranch.getFormat());
    }
    if (jsonBranch.isExtractable()) {
        completenessCounter.addExtractable(path, jsonBranch.isExtractable());
    }
    if (jsonBranch.isCollection()) {
        completenessCounter.addCollection(path, jsonBranch.isCollection());
    }
    if (jsonBranch.isMandatory()) {
        completenessCounter.addMandatory(path, jsonBranch.isMandatory());
    }
    if (jsonBranch.isActive()) {
        completenessCounter.addActive(path, jsonBranch.isActive());
    }
    if (jsonBranch.hasRules()) {
        completenessCounter.addRules(path, jsonBranch.getRules().size());
    }
    if (jsonBranch.hasChildren()) {
        for (DataElement child : jsonBranch.getChildren()) {
            evaluateJsonBranch(child, pathCache, completenessCounter, path + "." + child.getLabel(), value);
        }
    }
}