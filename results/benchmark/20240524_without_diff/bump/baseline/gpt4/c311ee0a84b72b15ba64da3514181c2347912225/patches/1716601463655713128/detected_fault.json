{
    "py/object": "pipeline.types.detected_fault.DetectedFault",
    "identifier": 854587510,
    "in_class_code": "/**\n * Integration test for {@link DockerSlice}.\n *\n * @since 0.2\n */\n@SuppressWarnings(\"PMD.AvoidDuplicateLiterals\")\n@DockerClientSupport\nfinal class DockerSliceITCase {\n    /**\n     * Example docker image to use in tests.\n     */\n    private Image image;\n\n    /**\n     * Docker client.\n     */\n    private DockerClient client;\n\n    /**\n     * Docker repository.\n     */\n    private DockerRepository repository;\n\n    // TODO: review this AI generated patch!\n    private Matcher<String> manifestPushed() {\n        String expectedString = String.format(\"latest: digest: %s\", this.image.digest());\n        return new TypeSafeMatcher<String>() {\n            public void describeTo(Description description) {\n                description.appendText(expectedString);\n            }\n\n            protected boolean matchesSafely(String item) {\n                return item.contains(expectedString);\n            }\n        };\n    }\n}",
    "qualified_in_class_code": "/**\n * Integration test for {@link DockerSlice}.\n *\n * @since 0.2\n */\n@java.lang.SuppressWarnings(\"PMD.AvoidDuplicateLiterals\")\n@com.artipie.docker.junit.DockerClientSupport\nfinal class DockerSliceITCase {\n    /**\n     * Example docker image to use in tests.\n     */\n    private com.artipie.docker.http.Image image;\n\n    /**\n     * Docker client.\n     */\n    private com.artipie.docker.junit.DockerClient client;\n\n    /**\n     * Docker repository.\n     */\n    private com.artipie.docker.junit.DockerRepository repository;\n\n    // TODO: review this AI generated patch!\n    private org.hamcrest.Matcher<java.lang.String> manifestPushed() {\n        java.lang.String expectedString = java.lang.String.format(\"latest: digest: %s\", this.image.digest());\n        return new com.artipie.docker.http.TypeSafeMatcher<java.lang.String>() {\n            public void describeTo(com.artipie.docker.http.Description description) {\n                description.appendText(expectedString);\n            }\n\n            protected boolean matchesSafely(java.lang.String item) {\n                return item.contains(expectedString);\n            }\n        };\n    }\n}",
    "plausible_dependency_identifier": null,
    "error_info": {
        "py/object": "pipeline.types.error_info.ErrorInfo",
        "additional_info": "  symbol:   class TypeSafeMatcher\n  location: class com.artipie.docker.http.DockerSliceITCase\n",
        "error_message": "[ERROR] /docker-adapter/src/test/java/com/artipie/docker/http/DockerSliceITCase.java:[125,16] cannot find symbol",
        "client_file_path": "/docker-adapter/src/test/java/com/artipie/docker/http/DockerSliceITCase.java",
        "client_line_position": "125"
    },
    "client_end_line_number": 134,
    "client_line_number": 122,
    "method_code": "// TODO: review this AI generated patch!\nprivate Matcher<String> manifestPushed() {\n    String expectedString = String.format(\"latest: digest: %s\", this.image.digest());\n    return new TypeSafeMatcher<String>() {\n        public void describeTo(Description description) {\n            description.appendText(expectedString);\n        }\n\n        protected boolean matchesSafely(String item) {\n            return item.contains(expectedString);\n        }\n    };\n}",
    "qualified_code": "// TODO: review this AI generated patch!\nprivate org.hamcrest.Matcher<java.lang.String> manifestPushed() {\n    java.lang.String expectedString = java.lang.String.format(\"latest: digest: %s\", this.image.digest());\n    return new com.artipie.docker.http.TypeSafeMatcher<java.lang.String>() {\n        public void describeTo(com.artipie.docker.http.Description description) {\n            description.appendText(expectedString);\n        }\n\n        protected boolean matchesSafely(java.lang.String item) {\n            return item.contains(expectedString);\n        }\n    };\n}",
    "method_name": "manifestPushed"
}