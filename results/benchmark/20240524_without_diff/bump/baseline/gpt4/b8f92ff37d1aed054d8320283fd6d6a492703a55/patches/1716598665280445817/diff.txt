1,10d0
< /**
<          * Computes if a given class is to be included in the post-coverage computation
<          *
<          * If we have include-exclude patterns for Jacoco:
<          * - We include the class if it matches the include patterns and does not match the excludes patterns
<          * Else:
<          * - We include the class if it is available in the binary directories
<          * @param className
<          * @return true if the class should be included in the coverage result, false otherwise
<          */
29c19,21
<             DirectoryScanner directoryScanner = new DirectoryScanner(new File(dir), TestListResolver.getWildcard());
---
>             File directory = new File(dir);
>             if(directory.exists() && directory.isDirectory()) {
>                 DirectoryScanner directoryScanner = new DirectoryScanner(directory, TestListResolver.getWildcard());
33a26
>         }
35c28,30
<             DirectoryScanner directoryScanner = new DirectoryScanner(new File(dir), TestListResolver.getWildcard());
---
>             File directory = new File(dir);
>             if(directory.exists() && directory.isDirectory()) {
>                 DirectoryScanner directoryScanner = new DirectoryScanner(directory, TestListResolver.getWildcard());
37a33
>                 }
