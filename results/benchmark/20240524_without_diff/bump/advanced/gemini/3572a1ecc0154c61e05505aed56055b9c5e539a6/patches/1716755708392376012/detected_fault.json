{
    "py/object": "pipeline.types.detected_fault.DetectedFault",
    "identifier": 689654773,
    "in_class_code": "/**\n * Encoder for LogMessage objects.\n */\npublic static class LogMessageEncoder extends EncoderBase<LogMessage> {\n    private TTransport framedTransport;\n\n    private TProtocol protocol;\n\n    private OutputStream os;\n\n    @Override\n    public void init(OutputStream os) {\n        this.os = os;\n        // Use the TFlushingFastFramedTransport to be compatible with singer_thrift\n        // log.\n        final int bufferCapacity = 10;\n        framedTransport = new TFastFramedTransport(new TIOStreamTransport(os), bufferCapacity);\n        protocol = new TBinaryProtocol(framedTransport);\n    }\n}",
    "qualified_in_class_code": "/**\n * Encoder for LogMessage objects.\n */\npublic static class LogMessageEncoder extends ch.qos.logback.core.encoder.EncoderBase<com.pinterest.singer.thrift.LogMessage> {\n    private org.apache.thrift.transport.TTransport framedTransport;\n\n    private org.apache.thrift.protocol.TProtocol protocol;\n\n    private java.io.OutputStream os;\n\n    @java.lang.Override\n    public void init(java.io.OutputStream os) {\n        this.os = os;\n        // Use the TFlushingFastFramedTransport to be compatible with singer_thrift\n        // log.\n        final int bufferCapacity = 10;\n        framedTransport = new com.pinterest.singer.client.logback.TFastFramedTransport(new org.apache.thrift.transport.TIOStreamTransport(os), bufferCapacity);\n        protocol = new org.apache.thrift.protocol.TBinaryProtocol(framedTransport);\n    }\n}",
    "plausible_dependency_identifier": null,
    "error_info": {
        "py/object": "pipeline.types.error_info.ErrorInfo",
        "additional_info": "  symbol:   class TFastFramedTransport\n  location: class com.pinterest.singer.client.logback.AppenderUtils.LogMessageEncoder\n",
        "error_message": "[ERROR] /singer/thrift-logger/src/main/java/com/pinterest/singer/client/logback/AppenderUtils.java:[64,29] cannot find symbol",
        "client_file_path": "/singer/thrift-logger/src/main/java/com/pinterest/singer/client/logback/AppenderUtils.java",
        "client_line_position": "64"
    },
    "client_end_line_number": 67,
    "client_line_number": 58,
    "method_code": "@Override\n    public void init(OutputStream os) {\n      this.os = os;\n      // Use the TFlushingFastFramedTransport to be compatible with singer_thrift\n      // log.\n      final int bufferCapacity = 10;\n      framedTransport = new TFastFramedTransport(new TIOStreamTransport(os),\n          bufferCapacity);\n      protocol = new TBinaryProtocol(framedTransport);\n    }",
    "qualified_code": "@java.lang.Override\npublic void init(java.io.OutputStream os) {\n    this.os = os;\n    // Use the TFlushingFastFramedTransport to be compatible with singer_thrift\n    // log.\n    final int bufferCapacity = 10;\n    framedTransport = new com.pinterest.singer.client.logback.TFastFramedTransport(new org.apache.thrift.transport.TIOStreamTransport(os), bufferCapacity);\n    protocol = new org.apache.thrift.protocol.TBinaryProtocol(framedTransport);\n}",
    "method_name": "init"
}