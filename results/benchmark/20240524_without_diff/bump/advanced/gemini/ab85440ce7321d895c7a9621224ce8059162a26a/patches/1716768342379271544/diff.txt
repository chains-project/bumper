4c4,17
<     org.hamcrest.MatcherAssert.assertThat(org.junit.jupiter.api.Assertions.assertThrows(java.lang.IllegalArgumentException.class, () -> new com.artipie.docker.http.UploadEntity.Request(new com.artipie.http.rq.RequestLine(RqMethod.PUT, "/one/two").toString())).name()).getMessage(), new org.hamcrest.core.StringContains(false, "Unexpected path"));
---
>     // Create a mock DockerClient
>     DockerClient dockerClient = Mockito.mock(DockerClient.class);
> 
>     // Create a mock UploadEntityRequest
>     UploadEntityRequest request = Mockito.mock(UploadEntityRequest.class);
> 
>     // Set the path to an invalid value
>     Mockito.when(request.path()).thenReturn("/invalid/path");
> 
>     // Create a new UploadEntityRequestTest instance
>     UploadEntityRequestTest test = new UploadEntityRequestTest();
> 
>     // Assert that an exception is thrown when the request is executed
>     assertThrows(IllegalArgumentException.class, () -> test.execute(dockerClient, request));
