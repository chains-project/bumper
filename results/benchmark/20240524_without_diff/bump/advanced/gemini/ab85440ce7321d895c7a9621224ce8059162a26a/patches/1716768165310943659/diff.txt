3,4c3,13
< void shouldThrowExceptionOnInvalidPath() {
<     org.hamcrest.MatcherAssert.assertThat(org.junit.jupiter.api.Assertions.assertThrows(java.lang.IllegalArgumentException.class, () -> new com.artipie.docker.http.UploadEntity.Request(new com.artipie.http.rq.RequestLine(RqMethod.PUT, "/one/two").toString())).name()).getMessage(), new org.hamcrest.core.StringContains(false, "Unexpected path"));
---
> void shouldThrowExceptionOnInvalidPath() throws Exception {
>     // given
>     String body = "invalid body";
>     // when
>     try {
>         new UploadEntityRequest(new ByteArrayInputStream(body.getBytes("UTF-8")), "invalid path");
>         fail("Should throw exception on invalid path");
>     } catch (IllegalArgumentException e) {
>         // then
>         assertThat(e.getMessage()).isEqualTo("Invalid path: invalid path");
>     }
