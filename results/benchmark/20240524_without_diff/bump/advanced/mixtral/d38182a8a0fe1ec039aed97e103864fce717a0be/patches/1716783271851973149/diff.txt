1c1,9
< // TODO: review this AI generated patch!
---
> import com.artipie.http.auth.Authentication;
> import com.artipie.http.auth.Authentication.User;
> import java.util.concurrent.CompletableFuture;
> import java.util.concurrent.ExecutionException;
> import static org.hamcrest.MatcherAssert.assertThat;
> import static org.hamcrest.Matchers.equalTo;
> import static org.hamcrest.Matchers.notNullValue;
> import static org.junit.jupiter.api.Assertions.assertThrows;
> 
3c11
< void testScope() {
---
> void testScope() throws ExecutionException, InterruptedException {
7a16
>     User user = new User("alice") {};
16c25
<         public com.artipie.http.Response response(final java.lang.String line, final java.lang.Iterable<java.util.Map.Entry<java.lang.String, java.lang.String>> headers, final org.reactivestreams.Publisher<java.nio.ByteBuffer> body) {
---
>         public com.artipie.http.Response response(final java.lang.String line, final java.util.Iterable<java.util.Map.Entry<java.lang.String, java.lang.String>> headers, final org.reactivestreams.Publisher<java.nio.ByteBuffer> body) {
19c28
<     }, ( headers, rline) -> java.util.concurrent.CompletableFuture.completedFuture(new com.artipie.http.auth.Authentication.SimpleUser("alice")), ( user, act) -> {
---
>     }, ( headers, rline) -> CompletableFuture.completedFuture(user), ( user1, act) -> {
22,24c31,34
<     }).response(line, com.artipie.http.Headers.EMPTY, com.artipie.asto.Content.EMPTY).send(( status, headers, body) -> java.util.concurrent.CompletableFuture.allOf()).toCompletableFuture().join();
<     org.hamcrest.MatcherAssert.assertThat("Request line passed to slice", cline.get(), new org.hamcrest.core.IsEqual<>(line));
<     org.hamcrest.MatcherAssert.assertThat("Scope passed as action to permissions", caction.get(), new org.hamcrest.core.IsEqual<>(action));
---
>     }).response(line, com.artipie.http.Headers.EMPTY, com.artipie.asto.Content.EMPTY).send(( status, headers, body) -> CompletableFuture.allOf()).toCompletableFuture().join();
>     assertThat("Request line passed to slice", cline.get(), equalTo(line));
>     assertThat("Scope passed as action to permissions", caction.get(), equalTo(action));
>     assertThat("User is not null", user, notNullValue());
