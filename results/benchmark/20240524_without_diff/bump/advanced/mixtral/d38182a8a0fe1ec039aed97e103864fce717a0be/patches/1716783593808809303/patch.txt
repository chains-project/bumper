import com.artipie.http.auth.Authentication;
import com.artipie.http.auth.Authentication.User;
import java.util.concurrent.CompletableFuture;
import java.util.concurrent.ExecutionException;
import org.junit.jupiter.api.Test;
import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.Matchers.equalTo;

@Test
void testScope() throws ExecutionException, InterruptedException {
    final String line = "GET /resource.txt HTTP/1.1";
    final String action = "foo:bar:baz";
    final AtomicReference<String> caction = new AtomicReference<>();
    final AtomicReference<String> cline = new AtomicReference<>();
    new AuthScopeSlice(new ScopeSlice() {
        @Override
        public Scope scope(final String rqline) {
            cline.set(rqline);
            return new Scope.FromString(action);
        }

        @Override
        public Response response(final String line, final Iterable<Map.Entry<String, String>> headers, final Publisher<ByteBuffer> body) {
            return StandardRs.OK;
        }
    }, (headers, rline) -> CompletableFuture.completedFuture(new SimpleUser("alice")), (user, act) -> {
        caction.set(act);
        return true;
    }).response(line, Headers.EMPTY, Content.EMPTY).send((status, headers, body) -> CompletableFuture.allOf()).toCompletableFuture().join();
    assertThat("Request line passed to slice", cline.get(), equalTo(line));
    assertThat("Scope passed as action to permissions", caction.get(), equalTo(action));
}