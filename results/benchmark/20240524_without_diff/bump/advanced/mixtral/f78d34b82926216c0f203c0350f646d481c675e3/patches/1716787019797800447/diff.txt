1,21c1,7
< /**
<      * AuraBotのテレポート。
<      *
<      * @param player    プレイヤー。
<      * @param target    ターゲット。
<      * @param arm       装備。
<      * @param reachMode リーチモードかどうか。
<      */
<     private static void auraBotTeleport(Player player, EntityPlayer target, ItemStack[] arm, boolean reachMode)
<     {
<         final double[] time = {0.0};
<         final double radius = reachMode ? config.getDouble("npc.reachRange"): config.getDoubleList("npc.range")
<             .get(new Random().nextInt(config.getDoubleList("npc.range").size()));
< 
<         WaveCreator ypp = new WaveCreator(10.0, 100.0, 10.0);
< 
<         final int[] count = {0};
<         BukkitRunnable r = new BukkitRunnable()
<         {
<             public void run()
<             {
---
> private static void auraBotTeleport(Player player, EntityPlayer target, ItemStack[] arm, boolean reachMode) {
>     final double[] time = new double[]{ 0.0 };
>     final double radius = (reachMode) ? ml.peya.plugins.Variables.config.getDouble("npc.reachRange") : ml.peya.plugins.Variables.config.getDoubleList("npc.range").get(new java.util.Random().nextInt(ml.peya.plugins.Variables.config.getDoubleList("npc.range").size()));
>     double[] waveCreator = waveCreator(10.0, 100.0, 10.0);
>     final int[] count = new int[]{ 0 };
>     BukkitRunnable r = new BukkitRunnable() {
>         public void run() {
23d8
< 
28,30d12
<                 for (double i = 0; i < Math.PI * 2; i++)
<                 {
<                     double rangeTmp = radius;
32,34d13
<                     if (config.getBoolean("npc.wave"))
<                         rangeTmp = new WaveCreator(radius - 0.1, radius, config.getDouble("npc.waveMin"))
<                             .get(0.01, true);
36,44d14
<                     final Location center = player.getLocation();
<                     final Location n = new Location(
<                         center.getWorld(),
<                         auraBotXPos(time[0], rangeTmp + speed) + center.getX(),
<                         center.getY() + new WaveCreator(1.0, 2.0, 0.0).get(0.01, count[0] < 20),
<                         auraBotZPos(time[0], rangeTmp + speed) + center.getZ(),
<                         (float) ypp.getStatic(),
<                         (float) ypp.get(4.5, false)
<                     );
46,48c16,19
<                     NPC.setLocation(n, target);
<                     ((CraftPlayer) player).getHandle().playerConnection
<                         .sendPacket(new PacketPlayOutEntityTeleport(target));
---
>             for (double i = 0; i < (java.lang.Math.PI * 2); i++) {
>                 double rangeTmp = radius;
>                 if (ml.peya.plugins.Variables.config.getBoolean("npc.wave"))
>                     rangeTmp = waveCreator[0] - 0.1;
49a21,24
>                 final Location center = player.getLocation();
>                 final Location n = new Location(center.getWorld(), ml.peya.plugins.Detect.NPCTeleport.auraBotXPos(time[0], rangeTmp + speed) + center.getX(), center.getY() + waveCreator[1], ml.peya.plugins.Detect.NPCTeleport.auraBotZPos(time[0], rangeTmp + speed) + center.getZ(), ((float) (waveCreator[2])), ((float) (waveCreator[3]))));
>                 NPC.setLocation(n, target);
>                 ((CraftPlayer) (player)).getHandle().playerConnection.sendPacket(new PacketPlayOutEntityTeleport(target));
51,62c26,30
<                     new BukkitRunnable()
<                     {
<                         @Override
<                         public void run()
<                         {
<                             Bukkit.getOnlinePlayers()
<                                 .parallelStream()
<                                 .filter(p -> p.hasPermission("psac.viewnpc"))
<                                 .forEachOrdered(p ->
<                                 {
<                                     ((CraftPlayer) p).getHandle().playerConnection
<                                         .sendPacket(new PacketPlayOutEntityTeleport(target));
---
>                 new BukkitRunnable() {
>                     @java.lang.Override
>                     public void run() {
>                         Bukkit.getOnlinePlayers().parallelStream().filter(( p) -> p.hasPermission("psac.viewnpc")).forEachOrdered(( p) -> {
>                             ((CraftPlayer) (p)).getHandle().playerConnection.sendPacket(new PacketPlayOutEntityTeleport(target));
69,70c37,40
<                     CheatDetectNowMeta meta = cheatMeta.getMetaByPlayerUUID(player.getUniqueId());
<                     if (meta == null) continue;
---
>                 CheatDetectNowMeta meta = ml.peya.plugins.Variables.cheatMeta.getMetaByPlayerUUID(player.getUniqueId());
>                 if (meta == null)
>                     continue;
> 
73,75c43
<                 time[0] += config.getDouble("npc.time") + (config.getBoolean("npc.speed.wave")
<                     ? new WaveCreator(0.0, config.getDouble("npc.speed.waveRange"), 0 - config.getDouble("npc.speed.waveRange")).get(0.001, true)
<                     : 0.0);
---
>             time[0] += ml.peya.plugins.Variables.config.getDouble("npc.time") + (ml.peya.plugins.Variables.config.getBoolean("npc.speed.wave") ? waveCreator[4] : 0.0);
79,84c47,49
< 
<         new BukkitRunnable()
<         {
<             @Override
<             public void run()
<             {
---
>     new BukkitRunnable() {
>         @java.lang.Override
>         public void run() {
88c53,54
<         }.runTaskLater(PeyangSuperbAntiCheat.getPlugin(), 20 * (config.getLong("npc.seconds")));
---
>     }.runTaskLater(PeyangSuperbAntiCheat.getPlugin(), 20 * ml.peya.plugins.Variables.config.getLong("npc.seconds"));
> }
89a56,58
> public static double[] waveCreator(double param1, double param2, double param3) {
>     // Implement WaveCreator functionality here
>     return new double[]{param1, param2, param3, param1, param2};
