1c1,46
< import org.bouncycastle.crypto.tls.TlsFatalAlert;
\ No newline at end of file
---
> import org.bouncycastle.crypto.engines.ChaChaEngine;
> import org.bouncycastle.crypto.params.KeyParameter;
> import org.bouncycastle.crypto.params.ParametersWithIV;
> 
> import java.io.ByteArrayInputStream;
> import java.io.IOException;
> import java.io.InputStream;
> import java.security.MessageDigest;
> import java.security.NoSuchAlgorithmException;
> import java.util.Arrays;
> 
> public class ChachaDecoder {
>     // ...
> 
>     private byte[] decode(byte[] data, byte[] key, byte[] iv) throws IOException {
>         ChaChaEngine chacha = new ChaChaEngine();
>         MessageDigest md = null;
>         try {
>             md = MessageDigest.getInstance("SHA-256");
>         } catch (NoSuchAlgorithmException e) {
>             throw new IOException(e);
>         }
>         md.update(key);
>         byte[] key2 = md.digest();
>         chacha.init(true, new KeyParameter(key2));
>         chacha.processBlock(iv, 0, iv, 0);
>         ParametersWithIV params = new ParametersWithIV(new KeyParameter(chacha.get WorkingKey()), iv);
>         chacha.init(params);
>         byte[] output = new byte[data.length];
>         int offset = 0;
>         for (int i = 0; i < data.length / 64; i++) {
>             chacha.processBlock(data, i * 64, output, offset);
>             offset += 64;
>         }
>         int remaining = data.length % 64;
>         if (remaining > 0) {
>             byte[] buffer = new byte[64];
>             System.arraycopy(data, data.length - remaining, buffer, 0, remaining);
>             chacha.processBlock(buffer, 0, output, offset);
>             offset += remaining;
>         }
>         return output;
>     }
> 
>     // ...
> }
\ No newline at end of file
