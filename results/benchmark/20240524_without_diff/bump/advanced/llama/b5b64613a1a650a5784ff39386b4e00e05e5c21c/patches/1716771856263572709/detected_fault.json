{
    "py/object": "pipeline.types.detected_fault.DetectedFault",
    "identifier": 868815265,
    "in_class_code": "/**\n * Interacts with Perforce various release operations.\n * Using the updated perforce plugin - P4.\n *\n * @author Aviad Shikloshi\n */\npublic class P4Manager extends AbstractPerforceManager<PerforceScm> {\n    private static final Logger logger = Logger.getLogger(P4Manager.class.getName());\n\n    public P4Manager(AbstractBuild<?, ?> build, TaskListener buildListener) {\n        super(build, buildListener);\n    }\n\n    @Override\n    public void prepare() {\n        PerforceScm perforceScm = getJenkinsScm();\n        String credentials = perforceScm.getCredential();\n        ConnectionHelper connection = new ConnectionHelper(credentials, buildListener);\n        IOptionsServer server = ConnectionFactory.getConnection();\n        try {\n            String clientString = getClientString();\n            if (connection.isClient(clientString)) {\n                ClientHelper perforceClient = new ClientHelper(credentials, buildListener, clientString, StandardCharsets.UTF_8.toString());\n                IClient client = perforceClient.getClient();\n                try {\n                    this.perforce = new PerforceClient(server, client);\n                    this.perforce.initConnection();\n                } catch (Exception e) {\n                    logger.warning(\"Could not instantiate connection with PerforceClient: \" + e.getMessage());\n                }\n            } else {\n                logger.warning((\"Client \" + clientString) + \" is not a valid client.\");\n            }\n        } catch (Exception e) {\n            logger.log(Level.FINE, \"Error occurred: \", e);\n        }\n    }\n}",
    "qualified_in_class_code": "/**\n * Interacts with Perforce various release operations.\n * Using the updated perforce plugin - P4.\n *\n * @author Aviad Shikloshi\n */\npublic class P4Manager extends org.jfrog.hudson.release.scm.perforce.AbstractPerforceManager<org.jenkinsci.plugins.p4.PerforceScm> {\n    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(org.jfrog.hudson.release.scm.perforce.P4Manager.class.getName());\n\n    public P4Manager(hudson.model.AbstractBuild<?, ?> build, hudson.model.TaskListener buildListener) {\n        super(build, buildListener);\n    }\n\n    @java.lang.Override\n    public void prepare() {\n        org.jenkinsci.plugins.p4.PerforceScm perforceScm = getJenkinsScm();\n        java.lang.String credentials = perforceScm.getCredential();\n        org.jenkinsci.plugins.p4.client.ConnectionHelper connection = new org.jenkinsci.plugins.p4.client.ConnectionHelper(credentials, buildListener);\n        com.perforce.p4java.server.IOptionsServer server = org.jenkinsci.plugins.p4.client.ConnectionFactory.getConnection();\n        try {\n            java.lang.String clientString = getClientString();\n            if (connection.isClient(clientString)) {\n                org.jenkinsci.plugins.p4.client.ClientHelper perforceClient = new org.jenkinsci.plugins.p4.client.ClientHelper(credentials, buildListener, clientString, java.nio.charset.StandardCharsets.UTF_8.toString());\n                com.perforce.p4java.client.IClient client = perforceClient.getClient();\n                try {\n                    this.perforce = new org.jfrog.build.vcs.perforce.PerforceClient(server, client);\n                    this.perforce.initConnection();\n                } catch (java.lang.Exception e) {\n                    org.jfrog.hudson.release.scm.perforce.P4Manager.logger.warning(\"Could not instantiate connection with PerforceClient: \" + e.getMessage());\n                }\n            } else {\n                org.jfrog.hudson.release.scm.perforce.P4Manager.logger.warning((\"Client \" + clientString) + \" is not a valid client.\");\n            }\n        } catch (java.lang.Exception e) {\n            org.jfrog.hudson.release.scm.perforce.P4Manager.logger.log(java.util.logging.Level.FINE, \"Error occurred: \", e);\n        }\n    }\n}",
    "plausible_dependency_identifier": null,
    "error_info": {
        "py/object": "pipeline.types.error_info.ErrorInfo",
        "additional_info": "    constructor org.jenkinsci.plugins.p4.client.ClientHelper.ClientHelper(hudson.model.ItemGroup,java.lang.String,hudson.model.TaskListener,org.jenkinsci.plugins.p4.workspace.Workspace) is not applicable\n      (argument mismatch; java.lang.String cannot be converted to hudson.model.ItemGroup)\n    constructor org.jenkinsci.plugins.p4.client.ClientHelper.ClientHelper(hudson.model.Item,java.lang.String,hudson.model.TaskListener,org.jenkinsci.plugins.p4.workspace.Workspace) is not applicable\n      (argument mismatch; java.lang.String cannot be converted to hudson.model.Item)\n",
        "error_message": "[ERROR] /artifactory-plugin/src/main/java/org/jfrog/hudson/release/scm/perforce/P4Manager.java:[44,47] no suitable constructor found for ClientHelper(java.lang.String,hudson.model.TaskListener,java.lang.String,java.lang.String)",
        "client_file_path": "/artifactory-plugin/src/main/java/org/jfrog/hudson/release/scm/perforce/P4Manager.java",
        "client_line_position": "44"
    },
    "client_end_line_number": 59,
    "client_line_number": 33,
    "method_code": "@Override\n    public void prepare() {\n\n        PerforceScm perforceScm = getJenkinsScm();\n        String credentials = perforceScm.getCredential();\n\n        ConnectionHelper connection = new ConnectionHelper(credentials, buildListener);\n        IOptionsServer server = ConnectionFactory.getConnection();\n        try {\n            String clientString = getClientString();\n            if (connection.isClient(clientString)) {\n                ClientHelper perforceClient = new ClientHelper(credentials, buildListener, clientString, StandardCharsets.UTF_8.toString());\n                IClient client = perforceClient.getClient();\n                try {\n                    this.perforce = new PerforceClient(server, client);\n                    this.perforce.initConnection();\n                } catch (Exception e) {\n                    logger.warning(\"Could not instantiate connection with PerforceClient: \" + e.getMessage());\n                }\n            } else {\n                logger.warning(\"Client \" + clientString + \" is not a valid client.\");\n            }\n        } catch (Exception e) {\n            logger.log(Level.FINE, \"Error occurred: \", e);\n        }\n\n    }",
    "qualified_code": "@java.lang.Override\npublic void prepare() {\n    org.jenkinsci.plugins.p4.PerforceScm perforceScm = getJenkinsScm();\n    java.lang.String credentials = perforceScm.getCredential();\n    org.jenkinsci.plugins.p4.client.ConnectionHelper connection = new org.jenkinsci.plugins.p4.client.ConnectionHelper(credentials, buildListener);\n    com.perforce.p4java.server.IOptionsServer server = org.jenkinsci.plugins.p4.client.ConnectionFactory.getConnection();\n    try {\n        java.lang.String clientString = getClientString();\n        if (connection.isClient(clientString)) {\n            org.jenkinsci.plugins.p4.client.ClientHelper perforceClient = new org.jenkinsci.plugins.p4.client.ClientHelper(credentials, buildListener, clientString, java.nio.charset.StandardCharsets.UTF_8.toString());\n            com.perforce.p4java.client.IClient client = perforceClient.getClient();\n            try {\n                this.perforce = new org.jfrog.build.vcs.perforce.PerforceClient(server, client);\n                this.perforce.initConnection();\n            } catch (java.lang.Exception e) {\n                org.jfrog.hudson.release.scm.perforce.P4Manager.logger.warning(\"Could not instantiate connection with PerforceClient: \" + e.getMessage());\n            }\n        } else {\n            org.jfrog.hudson.release.scm.perforce.P4Manager.logger.warning((\"Client \" + clientString) + \" is not a valid client.\");\n        }\n    } catch (java.lang.Exception e) {\n        org.jfrog.hudson.release.scm.perforce.P4Manager.logger.log(java.util.logging.Level.FINE, \"Error occurred: \", e);\n    }\n}",
    "method_name": "prepare"
}