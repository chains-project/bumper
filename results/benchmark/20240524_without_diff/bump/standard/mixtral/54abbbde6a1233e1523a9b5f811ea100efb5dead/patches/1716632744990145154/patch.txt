@Override
@com.jcabi.aspects.RetryOnFailure(attempts = 7, delay = 1, unit = java.util.concurrent.TimeUnit.MINUTES, verbose = false, types = java.io.IOException.class)
protected com.jcraft.jsch.Session session() throws java.io.IOException {
    try {
        com.jcraft.jsch.JSch.setLogger(new com.jcabi.ssh.JschLogger());
        final com.jcraft.jsch.JSch jsch = new com.jcraft.jsch.JSch();
        java.lang.String login = this.getLogin();
        java.lang.String addr = this.getAddr();
        int port = this.getPort();
        java.lang.String password = this.password;
        com.jcraft.jsch.Session session = null;
        try {
            com.jcabi.log.Logger.debug(this, "Opening SSH session to %s@%s:%s (auth with password)...", login, addr, port);
            session = jsch.getSession(login, addr, port);
            session.setConfig("StrictHostKeyChecking", "no");
            session.setPassword(password);
            session.setServerAliveInterval(1000 * 10);
            session.setServerAliveCountMax(1000000);
            session.connect(1000 * 10);
        } catch (com.jcraft.jsch.JSchException ex) {
            throw new java.io.IOException(ex);
        }
        return session;
    } catch (Exception e) {
        // Add a catch block to handle any exceptions
        throw new java.io.IOException(e);
    } finally {
    }
}