1,14c1,3
< /**
<          * Computes if a given class is to be included in the post-coverage computation
<          *
<          * If we have include-exclude patterns for Jacoco:
<          * - We include the class if it matches the include patterns and does not match the excludes patterns
<          * Else:
<          * - We include the class if it is available in the binary directories
<          * @param className
<          * @return true if the class should be included in the coverage result, false otherwise
<          */
<     private boolean classToInclude(String className) {
<         // False if it matches an excludes pattern
<         for (String pattern : config.getJacocoExcludes()) {
<             WildcardMatcher matcher = new WildcardMatcher(pattern);
---
> private boolean classToInclude(java.lang.String className) {
>     for (java.lang.String pattern : config.getJacocoExcludes()) {
>         org.jacoco.core.runtime.WildcardMatcher matcher = new org.jacoco.core.runtime.WildcardMatcher(pattern);
19,21c8,9
<         // True if it matches an includes pattern and doesn't match any excludes pattern
<         for (String pattern : config.getJacocoIncludes()) {
<             WildcardMatcher matcher = new WildcardMatcher(pattern);
---
>     for (java.lang.String pattern : config.getJacocoIncludes()) {
>         org.jacoco.core.runtime.WildcardMatcher matcher = new org.jacoco.core.runtime.WildcardMatcher(pattern);
26,29c14,15
< 
<         // True if it is present in the available binaries
<         for (String dir : config.getBinJavaDir()) {
<             DirectoryScanner directoryScanner = new DirectoryScanner(new File(dir), TestListResolver.getWildcard());
---
>     for (java.lang.String dir : config.getBinJavaDir()) {
>         org.apache.maven.plugin.surefire.util.DirectoryScanner directoryScanner = new org.apache.maven.plugin.surefire.util.DirectoryScanner(new java.io.File(dir), "");
34,35c20,21
<         for (String dir : config.getBinTestDir()) {
<             DirectoryScanner directoryScanner = new DirectoryScanner(new File(dir), TestListResolver.getWildcard());
---
>     for (java.lang.String dir : config.getBinTestDir()) {
>         org.apache.maven.plugin.surefire.util.DirectoryScanner directoryScanner = new org.apache.maven.plugin.surefire.util.DirectoryScanner(new java.io.File(dir), "");
40d25
< 
