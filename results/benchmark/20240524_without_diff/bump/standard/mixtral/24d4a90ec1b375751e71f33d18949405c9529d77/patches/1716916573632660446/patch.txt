import com.jcabi.s3.Bucket;
import com.jcabi.s3.Ocket.Text;
import org.apache.commons.lang3.RandomStringUtils;
import org.hamcrest.MatcherAssert;
import org.junit.Rule;
import org.junit.Test;
import static org.hamcrest.Matchers.equalTo;
import static com.jcabi.s3.Constants.HUNDRED;
import static com.jcabi.s3.Constants.THOUSAND;
import java.io.IOException;
import java.lang.String;
import com.jcabi.s3.mock.BucketRule;

/**
 * AwsOcket can read and write large S3 content.
 *
 * @throws Exception
 * 		If fails
 */
@org.junit.Test
public void readsAndWritesLargeObjectContent() throws java.lang.Exception {
    final Bucket bucket = this.rule.bucket();
    final String name = "test-44.txt";
    final Text ocket = new Text(bucket.ocket(name));
    final String data = RandomStringUtils.random(HUNDRED * THOUSAND);
    ocket.write(data);
    try {
        MatcherAssert.assertThat(ocket.read(), equalTo(data));
    } finally {
        bucket.remove(name);
    }
}