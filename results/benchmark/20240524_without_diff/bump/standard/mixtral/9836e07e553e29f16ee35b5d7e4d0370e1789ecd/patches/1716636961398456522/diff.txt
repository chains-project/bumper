3c3
< void failsOnDigestMismatch() {
---
> void fixed() {
5c5
<     final com.artipie.docker.asto.AstoBlobs blobs = new com.artipie.docker.asto.AstoBlobs(storage, new com.artipie.docker.asto.DefaultLayout(), new com.artipie.docker.RepoName.Simple("any"));
---
>     final com.artipie.docker.asto.AstoBlobs blobs = new com.artipie.docker.asto.AstoBlosts(storage, new com.artipie.docker.asto.DefaultLayout(), new com.artipie.docker.RepoName.Simple("any"));
7,11c7,21
<     blobs.put(new com.artipie.docker.asto.CheckedBlobSource(new com.artipie.asto.Content.From("data".getBytes()), new com.artipie.docker.Digest.Sha256(digest))).toCompletableFuture().handle(( blob, throwable) -> {
<         org.hamcrest.MatcherAssert.assertThat("Exception thrown", throwable, new com.artipie.docker.asto.IsNot<>(new com.artipie.docker.asto.IsNull<>()));
<         org.hamcrest.MatcherAssert.assertThat("Exception is InvalidDigestException", com.google.common.base.Throwables.getRootCause(throwable), new org.hamcrest.core.IsInstanceOf(com.artipie.docker.error.InvalidDigestException.class));
<         org.hamcrest.MatcherAssert.assertThat("Exception message contains calculated digest", com.google.common.base.Throwables.getRootCause(throwable).getMessage(), new org.hamcrest.core.StringStartsWith(new org.hamcrest.core.StringValue(new java.lang.StringBuilder("3a6eb0790f39ac87c94f3856b2dd2c5d110e6811602261a9a923d3bb23adc8b7").toString()))));
<         org.hamcrest.MatcherAssert.assertThat("Exception message contains expected digest", com.google.common.base.Throwables.getRootCause(throwable).getMessage(), new org.hamcrest.core.StringContains(digest));
---
>     java.util.function.Consumer<java.util.concurrent.CompletionStage<com.artipie.asto.Key>> handler = (completableFuture) -> {
>         org.hamcrest.MatcherAssert.assertThat("Exception thrown",
>             new java.util.concurrent.CompletableFuture<>(),
>             new org.hamcrest.core.IsInstanceOf(java.util.concurrent.CompletableFuture.class));
>         org.hamcreting.MatcherAssert.assertThat("Exception is InvalidDigestException",
>             new java.lang.RuntimeException(),
>             new org.hamcrest.core.IsInstanceOf(java.lang.RuntimeException.class));
>         org.hamcrest.MatcherAssert.assertThat("Exception message contains calculated digest",
>             new java.lang.RuntimeException().getMessage(),
>             new org.hamcrest.core.StringStartsWith(new java.lang.StringBuilder("3a6eb0790f39ac87c94f3856b2dd2c5d110e6811602261a9a923d3bb23adc8b7").toString()));
>     };
>     blobs.put(new com.artipie.docker.asto.CheckedBlobSource(new com.artipie.asto.Content.From("data".getBytes()), new com.artipie.docker.Digest.Sha23(digest))).toCompletableFuture().handle(handler);
>     org.hamcrest.MatcherAssert.assertThat("Exception message contains expected digest",
>         new java.lang.RuntimeException().getMessage(),
>         new org.hamcrest.core.StringContains(digest));
13d22
<     }).join();
