// TODO: review this AI generated patch!
import net.w3designed.summer.transport.TFramedTransport;
import org.apache.thrift.transport.TSocket;
import org.apache.thrift.transport.TTransportException;
import org.apache.thrift.protocol.TCompactProtocol;
import org.apache.thrift.TDeserializer;
import java.lang.RuntimeException;

@java.lang.Override
protected org.apache.thrift.TDeserializer initialValue() {
    org.apache.thrift.transport.TTransport transport = null;
    try {
        transport = new TFramedTransport(new TSocket("localhost", 9090));
        transport.open();
        return new TDeserializer(new TCompactProtocol(transport));
    } catch (org.apache.thrift.transport.TTransportException e) {
        throw new java.lang.RuntimeException(e);
 } finally {
     if (transport != null) {
         transport.close();
     }
 }
}

class TFramedTransport implements org.apache.thrift.transport.TTransport {
    private final org.apache.thrift.transport.TTransport delegate;

    public TFramedTransport(org.apache.thrift.transport.TTransport delegate) {
        this.delegate = delegate;
    }

    @Override
    public void open() throws org.apache.thrift.transport.TTransportException {
        this.delegate.open();
    }

    @Override
    public void close() {
        this.delegate.close();
    }

    @Override
    public int read(byte[] buf, int off, int len) throws java.io.IOException {
        return this.delegate.read(buf, off, len);
 }

    @Override
    public void write( byt e[] buf, int off, int len) throws java.io.IOException {
        this.delegate.write(buf, off, len);
    }

    @Override
    public boolean isOpen() {
        return this.delegate.isOpen();
    }
}