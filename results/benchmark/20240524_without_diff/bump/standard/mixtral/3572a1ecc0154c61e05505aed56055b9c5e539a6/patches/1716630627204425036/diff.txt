1,2c1,2
< @Override
<     public void init(OutputStream os) {
---
> @java.lang.Override
> public void init(java.io.OutputStream os) {
4c4
<       // Use the TFlushingFastFramedTransport to be compatible with singer_thrift
---
>     // Use the TFramedTransport to be compatible with singer_thrift
7,9c7,22
<       framedTransport = new TFastFramedTransport(new TIOStreamTransport(os),
<           bufferCapacity);
<       protocol = new TBinaryProtocol(framedTransport);
---
>     framedTransport = new org.apache.thrift.transport.TFramedTransport(new org.apache.thrift.transport.TIOStreamTransport(os));
>     framedTransport.setFramedTransportEventListener(new com.pinterest.singer.client.logback.TFastFramedTransport.Listener() {
>         @Override
>         public void onMessageSizeExceeded(int messageSize) {
>             // Handle the case when message size exceeds the buffer capacity
>             // as per the TFastFramedTransport implementation
>             throw new RuntimeException("Message size exceeded the buffer capacity: " + messageSize);
>         }
>     });
>     framedTransport.setFramedTransporterFactory(new com.pinterest.singer.client.logback.TFastFramedTransport.Factory() {
>         @Override
>                 public com.pinterest.singer.client.logback.TFastFramedTransport newFramedTransport(int bufferCapacity) {
>             return new com.pinterest.singer.client.logback.TFastFramedTransport(framedTransport, bufferCapacity);
>                 }
>         });
>     protocol = new org.apache.thrift.protocol.TBinaryProtocol(framedTransport);
