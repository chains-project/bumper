3a4,14
>     io.netty.buffer.ByteBufAllocator allocator = io.netty.buffer.PooledByteBufAllocator.DEFAULT;
>     io.netty.channel.EventLoopGroup group = io.netty.channel.nio.NioEventLoopGroup.DEFAULT_EVENT_LOOP_GROUP;
>     io.netty.channel.socket.SocketChannel channel = null;
>     io.netty.bootstrap.Bootstrap bootstrap = new io.netty.bootstrap.Bootstrap();
>     io.netty.channel.ChannelFuture future = null;
>     io.netty.channel.Channel channel0 = null;
>     io.netty.handler.codec.LengthFieldBasedFrameDecoder frameDecoder = null;
>     io.netty.handler.codec.bytes.ByteArrayEncoder byteArrayEncoder = null;
>     io.netty.handler.codec.CodecException codecException = null;
>     io.netty.handler.timeout.ReadTimeoutHandler readTimeoutHandler = null;
>     io.netty.channel.ChannelHandler handler = null;
4a16,17
>     org.apache.thrift.protocol.TProtocol protocol = null;
>     org.apache.thrift.TDeserializer deserializer = null;
6,13c19,39
<         transport = new org.apache.thrift.transport.TFramedTransport(new org.apache.thrift.transport.TSocket("localhost", 9090));
<         transport.open();
<         return new org.apache.thrift.TDeserializer(new org.apache.thrift.protocol.TCompactProtocol(transport));
<     } catch (org.apache.thrift.transport.TTransportException e) {
<         throw new RuntimeException(e);
<     } finally {
<         if (transport != null) {
<             transport.close();
---
>         bootstrap.group(group)
>             .channel(io.netty.channel.socket.SocketChannel.class)
>             .handler(new io.netty.channel.ChannelInitializer<io.netty.channel.socket.SocketChannel>() {
>                 @java.lang.Override
>                 protected void initChannel(io.netty.channel.socket.SocketChannel ch) throws java.lang.Exception {
>                     channel = ch;
>                     frameDecoder = new io.netty.handler.codec.LengthFieldBasedFrameDecoder(
>                         Integer.MAX_VALUE,
>                         0,
>                         4,
>                         0,
>                         4
>                     );
>                     byteArrayEncoder = new io.netty.handler.codec.bytes.ByteArrayEncoder();
>                     readTimeoutHandler = new io.netty.handler.timeout.ReadTimeoutHandler(5);
>                     handler = io.netty.handler.logging.LoggingHandler.getLogger(ThriftCodec.class);
>                     channel.pipeline()
>                         .addLast(frameDecoder)
>                         .addLast(byteArrayEncoder)
>                         .addLast(readTimeoutHandler)
>                         .addLast(handler);
14a41,54
>             });
>         future = bootstrap.connect("localhost", 9090);
>         channel0 = future.sync().channel();
>         transport = new io.netty.handler.thrift.TFramedTransport(channel0, allocator, 4, 4, -1, true);
>         protocol = new org.apache.thrift.protocol.TCompactProtocol(transport);
>         deserializer = new org.apache.thrift.TDeserializer(protocol);
>     } catch (java.lang.InterruptedException e) {
>         throw new java.lang.RuntimeException(e);
>     } catch (io.netty.channel.ConnectTimeoutException e) {
>         throw new java.lang.RuntimeException(e);
>     } catch (io.netty.handler.timeout.ReadTimeoutException e) {
>         throw new java.lang.RuntimeException(e);
>     } catch (io.netty.channel.ChannelException e) {
>         throw new java.lang.RuntimeException(e);
15a56
>     return deserializer;
