1d0
< // TODO: review this AI generated patch!
5c4,5
<     final com.artipie.docker.asto.AstoBlobs blobs = new com.artipie.docker.asto.AstoBlobs(storage, new com.artip calculated digest
---
>     final com.artipie.docker.asto.AstoBlobs blobs = new com.artipie.docker.asto.AstoBlobs(storage, new com.artipie.docker.asto.artip.Default());
>     com.artipie.docker.asto.calculated.Default digest;
7,8c7
<     blobs.put(new com.artipie.docker.asto.CheckedBlobSource(new com.artipie.asto.Content.From("data".getBytes()), new com.artipie.docker.Digest.Sha23
<     .handle(( blob, throwable) -> {
---
>     blobs.put(new com.artipie.docker.asto.CheckedBlobSource(new com.artipie.asto.Content.From("data".getBytes())), new com.artipie.docker.Digest.Default.handle(( blob, throwable) -> {
10,11c9
<         org.hamcrest.MatcherAssert.assertThat("Exception message contains calculated digest", com.google.common.base.Throwables.getRootCause(throwstringContains(throwable.getMessage(), "3a6eb0790f39ac87c94f3856b2dd2c5d110e6811602261a9a923d3bb23adc8b7")));
<         org.hamcrest.MatcherAssert.assertThat("Exception message contains expected digest", com.google.common.base.Throwables.getRootCause(throwable), new org.hamcrest.core.StringContains(expected));
---
>         org.hamcrest.MatcherAssert.assertThat("Exception message contains calculated digest", com.google.common.base.Throwables.getRootCause(throwable), new org.hamcret.core.StringContains(expected));
13c11
<     }).join();
---
>     })).join();
