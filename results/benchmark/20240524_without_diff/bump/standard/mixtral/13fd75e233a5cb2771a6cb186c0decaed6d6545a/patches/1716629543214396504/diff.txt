1d0
< // TODO: review this AI generated patch!
5c4,5
<     final com.artipie.docker.asto.AstoBlobs blobs = new com.artipie.docker.asto.AstoBlobs(storage, new com.artip calculated digest
---
>     final com.artipie.docker.asto.AstoBlobs blobs = new com.artipie.docker.asto.AstoBlobs(storage, new com.artipie.docker.asto.artip());
>     com.artipie.docker.asto.calculated.Mutable digest = new com.artipie.docker.asto.calculated.Mutable();
7,13c7,19
<     blobs.put(new com.artipie.docker.asto.CheckedBlobSource(new com.artipie.asto.Content.From("data".getBytes()), new com.artipie.docker.Digest.Sha23
<     .handle(( blob, throwable) -> {
<         org.hamcrest.MatcherAssert.assertThat("Exception thrown", throwable, new com.artipie.docker.asto.IsNot<>(new com.artipie.dorg.hamcrest.core.StringContains(expected)));
<         org.hamcrest.MatcherAssert.assertThat("Exception message contains calculated digest", com.google.common.base.Throwables.getRootCause(throwstringContains(throwable.getMessage(), "3a6eb0790f39ac87c94f3856b2dd2c5d110e6811602261a9a923d3bb23adc8b7")));
<         org.hamcrest.MatcherAssert.assertThat("Exception message contains expected digest", com.google.common.base.Throwables.getRootCause(throwable), new org.hamcrest.core.StringContains(expected));
<         return java.util.concurrent.CompletableFuture.allOf();
<     }).join();
---
>     blobs.put(new com.artipie.docker.asto.CheckedBlobSource(new com.artipie.asto.Content.From("data".getBytes()), new com.artipie.docker.asto.digest.Calculate(new com.google.common.hash.Hashing.sha256(), new java.io.FilterWriter(new java.io.OutputStreamWriter(new java.io.ByteArrayOutputStream()))) {
>         @Override
>         public void write(final byte[] bytes) throws java.io.IOException {
>             super.write(bytes);
>             digest.update(bytes);
>         }
>     }, new java.util.concurrent.CompletableFuture<>())).whenComplete((result, error) -> {
>         if (error != null) {
>             org.hamcrest.MatcherAssert.assertThat("Exception thrown", error, new com.artipie.docker.asto.is.Not<>(new com.artipie.dorg.hamcrest.core.StringContains(expected)));
>             org.hamcrest.MatcherAssert.assertThat("Exception message contains calculated digest", com.google.common.base.Throwables.getRootCause(error), new org.hamcrest.core.StringContains(digest.toString()));
>             org.hamcrest.MatcherAssert.assertThat("Exception message contains expected digest", com.google.common.base.Throwables.getRootCause(error), new org.hamcretest.core.StringContains(expected));
>         }
>     });
