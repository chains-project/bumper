1d0
< // TODO: review this AI generated patch!
7,8c6,10
<     blobs.put(new com.artipie.docker.asto.CheckedBlobSource(new com.artipie.asto.Content.From("data".getBytes()), new com.artipie.docker.Digest.Sha256(digest))).toCompletableFuture().handle(( blob, throwable) -> {
<         org.hamcrest.MatcherAssert.assertThat("Exception thrown", throwable, new com.artipie.docker.asto.IsNot<>(new com.artipie.docker.asto.IsNull<>()));
---
>     com.artipie.docker.asto.CheckedBlobSource src = new com.artipie.docker.asto.CheckedBlobSource(new com.artipie.asto.Content.From("data".getBytes()), new com.artipie.docker.Digest.Sha256(digest));
>     com.artipie.docker.asto.IsNot<Throwable> isNot = new com.artipie.docker.asto.IsNot<>(new com.artipie.docker.asto.IsNull<>());
>     com.artipie.docker.error.InvalidDigestException invalidDigestException = new com.artipie.docker.error.InvalidDigestException("Expected digest");
>     blobs.put(src).toCompletableFuture().handle(( blob, throwable) -> {
>         org.hamcrest.MatcherAssert.assertThat("Exception thrown", throwable, isNot);
10c12,13
<         org.hamcrest.MatcherAssert.assertThat("Exception message contains calculated digest", com.google.common.base.Throwables.getRootCause(throwable).getMessage(), new org.hamcrest.core.StringStartsWith(new org.hamcrest.core.StringValue(com.artipie.docker.Digest.Sha256.NAME))));
---
>         org.hamcrest.MatcherAssert.assertThat("Exception message contains calculated digest", com.google.common.base.Throwables.getRootCause(throwable).getMessage(), new org.hamcrest.core.StringStartsWith(new org.hamcrest.core.StringValue(com.artipie.docker.Digest.Sha256.NAME)));
>     });
13d15
<     }).join();
