import eu.europa.esig.dss.pades.PAdESSignatureParameters;
import eu.europa.esig.dss.pades.PAdESService;
import eu.europa.esig.dss.pades.signature.PAdESSignatureService;
import eu.europa.esig.dss.pades.signature.PAdESVisibleSignatureParameters;
import eu.europa.esig.dss.pades.signature.SignatureImageParameters;
import eu.europa.esig.dss.pades.signature.TableSignatureFieldParameters;
import eu.europa.esig.dss.pdf.PDFSignature;
import eu.europa.esig.dss.pdf.PDFSignatureParameters;
import eu.europa.esig.dss.pdf.PdfDocumentSignatureService;
import eu.europa.esig.dss.spi.x509.tsp.CompositeTSPSource;
import eu.europa.esig.dss.spi.x509.tsp.TSPSource;
import eu.europa.esig.dss.token.JKSSignatureToken;
import eu.europa.esig.dss.validation.CommonCertificateVerifier;
import org.apache.pdfbox.pdmodel.PDDocument;
import org.openpdfsign.dss.PdfBoxNativeTableObjectFactory;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.security.KeyStore;
import java.security.KeyStore.PasswordProtection;
import java.security.cert.Certificate;
import java.security.cert.CertificateChain;
import java.time.ZoneId;
import java.time.ZonedDateTime;
import java.time.format.DateTimeFormatter;
import java.util.HashMap;
import java.util.Map;

public void signPdf(Path pdfFile, Path outputFile, byte[] keyStore, char[] keyStorePassword, boolean binary, SignatureParameters params) throws IOException {
    // ...
    // Initialize visual signature and configure
    if (visibleSignature) {
        SignatureImageParameters imageParameters = new SignatureImageParameters();
        TableSignatureFieldParameters fieldParameters = new TableSignatureFieldParameters();
        imageParameters.setFieldParameters(fieldParameters);
        // ...
        fieldParameters.setPermission(new CertificationPermission(CertificationPermission.CERTIFIED_NO_CHANGES_ALLOWED));
        // ...
    }
    // ...
    // Create PAdESService for signature
    PAdESService service = new PAdESService(commonCertificateVerifier);
    // ...
    // Initialize visual signature and configure
    if (visibleSignature) {
        PAdESVisibleSignatureParameters sigParams = new PAdESVisibleSignatureParameters();
        sigParams.setSignatureImageParameters(imageParameters);
        // ...
        sigParams.setPermission(new CertificationPermission(CertificationPermission.CERTIFIED_NO_CHANGES_ALLOWED));
        // ...
    }
    // ...
}