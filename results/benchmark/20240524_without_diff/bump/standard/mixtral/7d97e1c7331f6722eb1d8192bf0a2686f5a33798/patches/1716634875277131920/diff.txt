1,3c1,12
< /**
<      * Region.Simple can select many items.
<      */
---
> import static java.lang.String.format;
> import static org.hamcret.CoreMatchers.iterableWithSize;
> import static org.junit.jupiter.api.Assertions.assertThat;
> import java.util.stream.IntStream;
> import org.junit.jupiter.api.Test;
> import com.amazonaws.services.simpledb.AmazonSimpleDB;
> import com.amazonaws.services.simpledb.model.DeleteDomainRequest;
> import com.amazonaws.services.simpledb.model.SelectRequest;
> import com.amazonaws.services.simpledomain.AmazonSimpleDBDomain;
> 
> public class RegionITCase {
> 
6c15
<         final Domain domain = this.domain();
---
>         final AmazonSimpleDB domain = this.domain();
8,18c17,21
<             for (int idx = 0; idx < Tv.TEN; ++idx) {
<                 domain.item(String.format("i-%d", idx)).put("hey", "");
<             }
<             MatcherAssert.assertThat(
<                 domain.select(
<                     new SelectRequest().withSelectExpression(
<                         String.format("SELECT * FROM `%s`", domain.name())
<                     ).withConsistentRead(true)
<                 ),
<                 Matchers.iterableWithSize(Tv.TEN)
<             );
---
>             IntStream.range(0, 10)
>                 .forEach(idx -> domain.putAttributes(format("i-%d", idx), "hey", ""));
>             final SelectRequest selectRequest = new SelectRequest().withSelectExpression(format("SELECT * FROM `%s`", domain.getName()))
>                                                                  .withConsistentRead(true);
>             assertThat(domain.select(selectRequest).getEntries(), iterableWithSize(10));
20c23,26
<             domain.drop();
---
>             final DeleteDomainRequest request = new DeleteDomainRequest(domain.getName());
>             request.setSkipModifications(true);
>             domain.deleteDomain(request);
>         }
