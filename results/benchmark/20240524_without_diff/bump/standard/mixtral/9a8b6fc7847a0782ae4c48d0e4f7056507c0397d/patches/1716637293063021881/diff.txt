1,2c1,2
< @Override
<         protected PasswordEncoder createStringEncoder() {
---
> @java.lang.Override
> protected org.acegisecurity.providers.encoding.PasswordEncoder createStringEncoder() {
4,5c4
< 
<                 char[] chars = toChars(password);
---
>     char[] chars = java.util.Arrays.stream(password).map(t -> (char) t).toArray();
7,21c6,10
<                         stringEncrypter = new StandardPBEStringEncryptor();
<                         stringEncrypter.setPasswordCharArray(chars);
< 
<                         if (getProviderName() != null && !getProviderName().isEmpty()) {
<                                 stringEncrypter.setProviderName(getProviderName());
<                         }
<                         stringEncrypter.setAlgorithm(getAlgorithm());
< 
<                         PBEPasswordEncoder encoder = new PBEPasswordEncoder();
<                         encoder.setPbeStringEncryptor(stringEncrypter);
< 
<                         return encoder;
<                 } finally {
<                         scramble(password);
<                         scramble(chars);
---
>         stringEncrypter = new org.jasypt.encryption.pbe.StandardPBEStringEncryptor();
>         stringEncrypter.setPassword(new String(chars));
>         if ((getProviderName() != null) && (!getProviderName().isEmpty())) {
>             stringEncrypter.setProviderName(getProviderIt.geosolutions.geostore.core.security.password.SecurityUtils.scramble(password);
>         java.util.Arrays.fill(chars, ' ');
22a12
>     return new org.jasypt.spring.security.PBEPasswordEncoder();
