1d0
< // TODO: review this AI generated patch!
7,11c6,46
<     blobs.put(new com.artipie.docker.asto.CheckedBlobSource(new com.artipie.asto.Content.From("data".getBytes()), new com.artipie.docker.Digest.Sha256(digest))).toCompletableFuture().handle(( blob, throwable) -> {
<         org.hamcrest.MatcherAssert.assertThat("Exception thrown", throwable, new com.artipie.docker.asto.IsNot<>(new java.util.NoSuchElementException()));
<         org.hamcrest.MatcherAssert.assertThat("Exception is InvalidDigestException", com.google.common.base.Throwables.getRootCause(throwable), new org.hamcrest.core.IsInstanceOf(com.artipie.docker.error.InvalidDigestException.class));
<         org.hamcrest.MatcherAssert.assertThat("Exception message contains calculated digest", com.google.common.base.Throwables.getRootCause(throwable).getMessage(), new org.hamcrest.core.StringStartsWith(new java.lang.StringBuffer("3a6eb0790f39ac87c94f3856b2dd2c5d110e6811602261a9a923d3bb23adc8b7")));
<         org.hamcrest.MatcherAssert.assertThat("Exception message contains expected digest", com.google.common.base.Throwables.getRootCause(throwable).getMessage(), new org.hamcrest.core.StringContains(new java.lang.StringBuffer(new java.lang.StringBuffer(new java.lang.StringBuffer().append("Wanted but not invoked:")).append(System.lineSeparator()).append("-> at com.artipie.docker.asto.AstoBlobsITCase.failsOnDigestMismatch(AstoBlogsITCase.java:").append(94)).append(System.lineSeparator()).append("-> at java.base/java.util.Objects.requireNonNull(Objects.java:233)").append(System.lineSeparator()).append("-> at com.artipie.docker.asto.AstoBlobsITCase.lambda$new$1(AstoBlogsITCase.java:65)").append(System.lineSeparator())).append(digest).append(System.lineSeparator())));
---
>     blobs.put(new com.artipie.docker.asto.CheckedBlobSource(new com.artipie.asto.Content.From("data".getBytes()), new com.artipie.docker.Digest.Sha256(digest)))
>         .toCompletableFuture()
>         .handle(
>             (blob, throwable) -> {
>                 if (throwable != null) {
>                     org.hamcrest.MatcherAssert.assertThat(
>                         "Exception thrown",
>                         throwable,
>                         new com.artipie.docker.asto.IsNot<>(new java.util.NoSuchElementException())
>                     );
>                     org.hamcrest.MatcherAssert.assertThat(
>                         "Exception is InvalidDigestException",
>                         com.google.common.base.Throwables.getRootCause(throwable),
>                         new org.hamcrest.core.IsInstanceOf(com.artipie.docker.error.InvalidDigestException.class)
>                     );
>                     org.hamcrest.MatcherAssert.assertThat(
>                         "Exception message contains calculated digest",
>                         com.google.common.base.Throwables.getRootCause(throwable).getMessage(),
>                         new org.hamcrest.core.StringStartsWith(
>                             new java.lang.StringBuffer("3a6eb0790f39ac87c94f3856b2dd2c5d110e6811602261a9a923d3bb23adc8b7")
>                         )
>                     );
>                     org.hamcrest.MatcherAssert.assertThat(
>                         "Exception message contains expected digest",
>                         com.google.common.base.Throwables.getRootCause(throwable).getMessage(),
>                         new org.hamcrest.core.StringContains(
>                             new java.lang.StringBuffer(
>                                 new java.lang.StringBuffer(
>                                     new java.lang.StringBuffer().append("Wanted but not invoked:")
>                                 ).append(java.lang.System.lineSeparator())
>                                 .append("-> at com.artipie.docker.asto.AstoBlobsITCase.failsOnDigestMismatch(AstoBlogsITCase.java:")
>                                 .append(94)
>                             )
>                             .append(java.lang.System.lineSeparator())
>                             .append("-> at java.base/java.util.Objects.requireNonNull(Objects.java:233)")
>                             .append(java.lang.System.lineSeparator())
>                             .append("-> at com.artipie.docker.asto.AstoBlobsITCase.lambda$new$1(AstoBlogsITCase.java:65)")
>                             .append(java.lang.System.lineSeparator())
>                         )
>                     );
>                 }
13c48,50
<     }).join();
---
>             }
>         )
>         .join();
