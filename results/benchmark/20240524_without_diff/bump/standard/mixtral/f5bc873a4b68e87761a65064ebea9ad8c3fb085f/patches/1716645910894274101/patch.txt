import org.apache.maven.project.MavenProject;
import org.apache.maven.artifact.activation.ArtifactArtifact;
import org.codehaus.plexus.components.interactivity.interactive.InteractiveMode;

// ...

@Parameter
private ArtifactArtifact artifact;

@Parameter(defaultValue = "${mojoExecution}", required = true, readonly = true)
private MojoExecutionMojoExecutionMojoExecution mojoExecution;

// ...

@SuppressWarnings("unchecked")
private MavenProject getProject() {
    if (project == null) {
        ProjectBuilderFactory projectBuilderFactory = (ProjectBuilderFactory) getTool().lookup(ProjectBuilderFactory.class);
        ProjectBuilder projectBuilder = projectBuilderFactory.newInstance(getLog());

        // Use the following line instead of the one in the original code
        // to get the MavenProject from the MojoExecution
        // instead of the one from the ProjectBuilder
        // that may not have the required dependencies
        // resolved yet.
        project = (MavenProject) mojoExecution.getMojo().getTool().getComponent(MavenProject.class);

        try {
            ProjectBuildingRequest buildingRequest = projectBuilder.newBuildingRequest();

            // ...

            project = (MavenProject) projectBuilder.build(project, buildingRequest).getProject();
        } catch (Exception e) {
            // ...
        }
    }

    return project;
}

// ...