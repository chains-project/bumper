-- public ExceptionUtils develop.p2p.lib.ExceptionUtils()
-- public static java.lang.String develop.p2p.lib.ExceptionUtils.toString(java.lang.Exception)
-- public FieldModifier develop.p2p.lib.FieldModifier()
-- public static bool develop.p2p.lib.FieldModifier.modify(java.lang.Object,java.lang.String,java.lang.Object)
-- public static void develop.p2p.lib.FieldModifier.modifyAsGod(java.lang.Class,java.lang.String,java.lang.Object)
-- public FileConfiguration develop.p2p.lib.FileConfiguration(java.io.File,java.lang.String)
-- public java.lang.Object develop.p2p.lib.FileConfiguration.get(java.lang.String)
-- public java.util.Map develop.p2p.lib.FileConfiguration.getConfig()
-- public java.lang.String develop.p2p.lib.FileConfiguration.getString(java.lang.String)
-- public void develop.p2p.lib.FileConfiguration.loadConfig()
-- public void develop.p2p.lib.FileConfiguration.reloadConfig()
-- public void develop.p2p.lib.FileConfiguration.saveDefaultConfig()
-- public Intellij develop.p2p.lib.Intellij()
-- public static bool develop.p2p.lib.Intellij.isDebugging()
-- public LearnMath develop.p2p.lib.LearnMath()
-- public static D develop.p2p.lib.LearnMath.delta(double)
-- public static D develop.p2p.lib.LearnMath.elu(double)
-- public static D develop.p2p.lib.LearnMath.elu(double,double)
-- public static D develop.p2p.lib.LearnMath.eluDef(double)
-- public static D develop.p2p.lib.LearnMath.eluDef(double,double)
-- public static D develop.p2p.lib.LearnMath.identity(double)
-- public static D develop.p2p.lib.LearnMath.identityDef()
-- public static D develop.p2p.lib.LearnMath.lrelu(double)
-- public static D develop.p2p.lib.LearnMath.lrelu(double,double)
-- public static D develop.p2p.lib.LearnMath.lreluDef(double)
-- public static D develop.p2p.lib.LearnMath.lreluDef(double,double)
-- public static D develop.p2p.lib.LearnMath.mish(double)
-- public static D develop.p2p.lib.LearnMath.mishDef(double)
-- public static D develop.p2p.lib.LearnMath.omega(double)
-- public static D develop.p2p.lib.LearnMath.relu(double)
-- public static D develop.p2p.lib.LearnMath.reluDef(double)
-- public static D develop.p2p.lib.LearnMath.selu(double,double,double)
-- public static D develop.p2p.lib.LearnMath.seluDef(double,double,double)
-- public static D develop.p2p.lib.LearnMath.sigmoid(double)
-- public static D develop.p2p.lib.LearnMath.sigmoidDef(double)
-- public static [D develop.p2p.lib.LearnMath.softmax(double[])
-- public static [[D develop.p2p.lib.LearnMath.softmax(double[][])
-- public static D develop.p2p.lib.LearnMath.softplus(double)
-- public static D develop.p2p.lib.LearnMath.softplusDef(double)
-- public static D develop.p2p.lib.LearnMath.step(double)
-- public static D develop.p2p.lib.LearnMath.swish(double)
-- public static D develop.p2p.lib.LearnMath.swishDef(double)
-- public static D develop.p2p.lib.LearnMath.tanH(double)
-- public static D develop.p2p.lib.LearnMath.tanHDef(double)
-- public LeetConverter develop.p2p.lib.LeetConverter()
-- public static java.lang.String develop.p2p.lib.LeetConverter.convert(java.lang.String)
-- public LoggerChanger develop.p2p.lib.LoggerChanger()
-- public static bool develop.p2p.lib.LoggerChanger.changeToDummy(java.lang.Object,java.lang.String,org.slf4j.Logger)
-- public static bool develop.p2p.lib.LoggerChanger.shutUpLog(java.lang.Object,java.lang.String)
-- public OptGraphGenerator develop.p2p.lib.OptGraphGenerator()
-- public SQLModifier develop.p2p.lib.SQLModifier()
-- public static void develop.p2p.lib.SQLModifier.delete(java.sql.Connection,java.lang.String,java.util.HashMap)
-- public static transient void develop.p2p.lib.SQLModifier.exec(java.sql.Connection,java.lang.String,java.lang.Object[])
-- public static transient void develop.p2p.lib.SQLModifier.insert(java.sql.Connection,java.lang.String,java.lang.Object[])
-- public TimeParser develop.p2p.lib.TimeParser()
-- public static transient java.util.Date develop.p2p.lib.TimeParser.convert(java.lang.String[])
-- public static java.lang.String develop.p2p.lib.TimeParser.convertFromDate(java.util.Date)
-- public WaveCreator develop.p2p.lib.WaveCreator(double,double,double)
-- public D develop.p2p.lib.WaveCreator.get(double,boolean)
-- public D develop.p2p.lib.WaveCreator.getStatic()
-- public ItemUtils develop.p2p.lib.bukkit.ItemUtils()
-- public static org.bukkit.inventory.ItemStack develop.p2p.lib.bukkit.ItemUtils.appendDisplayName(org.bukkit.inventory.ItemStack,java.lang.String)
-- public static org.bukkit.inventory.ItemStack develop.p2p.lib.bukkit.ItemUtils.hideAttribute(org.bukkit.inventory.ItemStack)
-- public static org.bukkit.inventory.ItemStack develop.p2p.lib.bukkit.ItemUtils.lore(org.bukkit.inventory.ItemStack,java.util.List)
-- public static org.bukkit.inventory.ItemStack develop.p2p.lib.bukkit.ItemUtils.quickLore(org.bukkit.inventory.ItemStack,java.lang.String)
-- public static org.bukkit.inventory.ItemStack develop.p2p.lib.bukkit.ItemUtils.setDisplayName(org.bukkit.inventory.ItemStack,java.lang.String)
-- public static org.bukkit.inventory.ItemStack develop.p2p.lib.bukkit.ItemUtils.setGlow(org.bukkit.inventory.ItemStack)
-- public static org.bukkit.inventory.ItemStack develop.p2p.lib.bukkit.ItemUtils.setUnbreakable(org.bukkit.inventory.ItemStack)
-- public transient Say2Functional$FunctionalEntry develop.p2p.lib.bukkit.Say2Functional$FunctionalEntry(java.util.function.BiFunction,java.util.function.Consumer,java.lang.String[])
-- public Say2Functional develop.p2p.lib.bukkit.Say2Functional(org.bukkit.plugin.Plugin)
-- public void develop.p2p.lib.bukkit.Say2Functional.add(java.util.UUID,develop.p2p.lib.bukkit.Say2Functional$FunctionalEntry)
-- public void develop.p2p.lib.bukkit.Say2Functional.onConsole(org.bukkit.event.server.ServerCommandEvent)
-- public void develop.p2p.lib.bukkit.Say2Functional.onQuit(org.bukkit.event.player.PlayerQuitEvent)
-- public void develop.p2p.lib.bukkit.Say2Functional.onSay(org.bukkit.event.player.AsyncPlayerChatEvent)
-- public TitleNotification develop.p2p.lib.bukkit.TitleNotification(org.bukkit.plugin.Plugin)
-- public void develop.p2p.lib.bukkit.TitleNotification.setMainTitle(org.bukkit.entity.Player,java.lang.String)
-- public void develop.p2p.lib.bukkit.TitleNotification.setSubTitle(org.bukkit.entity.Player,java.lang.String)
++ public ExceptionUtils tokyo.peya.lib.ExceptionUtils()
++ public static java.lang.String tokyo.peya.lib.ExceptionUtils.toString(java.lang.Exception)
++ public FieldModifier tokyo.peya.lib.FieldModifier()
++ public static bool tokyo.peya.lib.FieldModifier.modify(java.lang.Object,java.lang.String,java.lang.Object)
++ public static void tokyo.peya.lib.FieldModifier.modifyAsGod(java.lang.Class,java.lang.String,java.lang.Object)
++ public FileConfiguration tokyo.peya.lib.FileConfiguration(java.io.File,java.lang.String)
++ public java.lang.Object tokyo.peya.lib.FileConfiguration.get(java.lang.String)
++ public java.util.Map tokyo.peya.lib.FileConfiguration.getConfig()
++ public java.lang.String tokyo.peya.lib.FileConfiguration.getString(java.lang.String)
++ public void tokyo.peya.lib.FileConfiguration.loadConfig()
++ public void tokyo.peya.lib.FileConfiguration.reloadConfig()
++ public void tokyo.peya.lib.FileConfiguration.saveDefaultConfig()
++ public Intellij tokyo.peya.lib.Intellij()
++ public static bool tokyo.peya.lib.Intellij.isDebugging()
++ public LearnMath tokyo.peya.lib.LearnMath()
++ public static D tokyo.peya.lib.LearnMath.delta(double)
++ public static D tokyo.peya.lib.LearnMath.elu(double)
++ public static D tokyo.peya.lib.LearnMath.elu(double,double)
++ public static D tokyo.peya.lib.LearnMath.eluDef(double)
++ public static D tokyo.peya.lib.LearnMath.eluDef(double,double)
++ public static D tokyo.peya.lib.LearnMath.identity(double)
++ public static D tokyo.peya.lib.LearnMath.identityDef()
++ public static D tokyo.peya.lib.LearnMath.lrelu(double)
++ public static D tokyo.peya.lib.LearnMath.lrelu(double,double)
++ public static D tokyo.peya.lib.LearnMath.lreluDef(double)
++ public static D tokyo.peya.lib.LearnMath.lreluDef(double,double)
++ public static D tokyo.peya.lib.LearnMath.mish(double)
++ public static D tokyo.peya.lib.LearnMath.mishDef(double)
++ public static D tokyo.peya.lib.LearnMath.omega(double)
++ public static D tokyo.peya.lib.LearnMath.relu(double)
++ public static D tokyo.peya.lib.LearnMath.reluDef(double)
++ public static D tokyo.peya.lib.LearnMath.selu(double,double,double)
++ public static D tokyo.peya.lib.LearnMath.seluDef(double,double,double)
++ public static D tokyo.peya.lib.LearnMath.sigmoid(double)
++ public static D tokyo.peya.lib.LearnMath.sigmoidDef(double)
++ public static [D tokyo.peya.lib.LearnMath.softmax(double[])
++ public static [[D tokyo.peya.lib.LearnMath.softmax(double[][])
++ public static D tokyo.peya.lib.LearnMath.softplus(double)
++ public static D tokyo.peya.lib.LearnMath.softplusDef(double)
++ public static D tokyo.peya.lib.LearnMath.step(double)
++ public static D tokyo.peya.lib.LearnMath.swish(double)
++ public static D tokyo.peya.lib.LearnMath.swishDef(double)
++ public static D tokyo.peya.lib.LearnMath.tanH(double)
++ public static D tokyo.peya.lib.LearnMath.tanHDef(double)
++ public LeetConverter tokyo.peya.lib.LeetConverter()
++ public static java.lang.String tokyo.peya.lib.LeetConverter.convert(java.lang.String)
++ public LoggerChanger tokyo.peya.lib.LoggerChanger()
++ public static bool tokyo.peya.lib.LoggerChanger.changeToDummy(java.lang.Object,java.lang.String,org.slf4j.Logger)
++ public static bool tokyo.peya.lib.LoggerChanger.shutUpLog(java.lang.Object,java.lang.String)
++ public OptGraphGenerator tokyo.peya.lib.OptGraphGenerator()
++ public PluginYamlParser$Command tokyo.peya.lib.PluginYamlParser$Command()
++ public static tokyo.peya.lib.PluginYamlParser$DefaultPermission tokyo.peya.lib.PluginYamlParser$DefaultPermission.valueOf(java.lang.String)
++ public static tokyo.peya.lib.PluginYamlParser$DefaultPermission tokyo.peya.lib.PluginYamlParser$DefaultPermission.values()
++ public static tokyo.peya.lib.PluginYamlParser$Load tokyo.peya.lib.PluginYamlParser$Load.valueOf(java.lang.String)
++ public static tokyo.peya.lib.PluginYamlParser$Load tokyo.peya.lib.PluginYamlParser$Load.values()
++ public PluginYamlParser$Permission tokyo.peya.lib.PluginYamlParser$Permission()
++ public PluginYamlParser tokyo.peya.lib.PluginYamlParser()
++ public static tokyo.peya.lib.PluginYamlParser tokyo.peya.lib.PluginYamlParser.fromJar(java.io.File)
++ public static tokyo.peya.lib.PluginYamlParser tokyo.peya.lib.PluginYamlParser.fromMap(java.util.Map)
++ public static tokyo.peya.lib.PluginYamlParser tokyo.peya.lib.PluginYamlParser.fromYaml(java.io.File)
++ public SQLModifier tokyo.peya.lib.SQLModifier()
++ public static void tokyo.peya.lib.SQLModifier.delete(java.sql.Connection,java.lang.String,java.util.HashMap)
++ public static transient void tokyo.peya.lib.SQLModifier.exec(java.sql.Connection,java.lang.String,java.lang.Object[])
++ public static transient void tokyo.peya.lib.SQLModifier.insert(java.sql.Connection,java.lang.String,java.lang.Object[])
++ public TimeParser tokyo.peya.lib.TimeParser()
++ public static transient java.util.Date tokyo.peya.lib.TimeParser.convert(java.lang.String[])
++ public static java.lang.String tokyo.peya.lib.TimeParser.convertFromDate(java.util.Date)
++ public WaveCreator tokyo.peya.lib.WaveCreator(double,double,double)
++ public D tokyo.peya.lib.WaveCreator.get(double,boolean)
++ public D tokyo.peya.lib.WaveCreator.getStatic()
++ public EntitySelector tokyo.peya.lib.bukkit.EntitySelector()
++ public static java.util.List tokyo.peya.lib.bukkit.EntitySelector.matchEntities(org.bukkit.command.CommandSender,java.lang.String,boolean)
++ public static org.bukkit.entity.Entity tokyo.peya.lib.bukkit.EntitySelector.matchOneEntity(org.bukkit.command.CommandSender,java.lang.String)
++ public static void tokyo.peya.lib.bukkit.EntitySelector.validateSelector(java.lang.String,boolean)
++ public ItemUtils tokyo.peya.lib.bukkit.ItemUtils()
++ public static org.bukkit.inventory.ItemStack tokyo.peya.lib.bukkit.ItemUtils.appendDisplayName(org.bukkit.inventory.ItemStack,java.lang.String)
++ public static org.bukkit.inventory.ItemStack tokyo.peya.lib.bukkit.ItemUtils.hideAttribute(org.bukkit.inventory.ItemStack)
++ public static org.bukkit.inventory.ItemStack tokyo.peya.lib.bukkit.ItemUtils.lore(org.bukkit.inventory.ItemStack,java.util.List)
++ public static org.bukkit.inventory.ItemStack tokyo.peya.lib.bukkit.ItemUtils.quickLore(org.bukkit.inventory.ItemStack,java.lang.String)
++ public static org.bukkit.inventory.ItemStack tokyo.peya.lib.bukkit.ItemUtils.setDisplayName(org.bukkit.inventory.ItemStack,java.lang.String)
++ public static org.bukkit.inventory.ItemStack tokyo.peya.lib.bukkit.ItemUtils.setGlow(org.bukkit.inventory.ItemStack)
++ public static org.bukkit.inventory.ItemStack tokyo.peya.lib.bukkit.ItemUtils.setUnbreakable(org.bukkit.inventory.ItemStack)
++ public transient Say2Functional$FunctionalEntry tokyo.peya.lib.bukkit.Say2Functional$FunctionalEntry(java.util.function.BiFunction,java.util.function.Consumer,java.lang.String[])
++ public Say2Functional tokyo.peya.lib.bukkit.Say2Functional(org.bukkit.plugin.Plugin)
++ public void tokyo.peya.lib.bukkit.Say2Functional.add(java.util.UUID,tokyo.peya.lib.bukkit.Say2Functional$FunctionalEntry)
++ public void tokyo.peya.lib.bukkit.Say2Functional.onConsole(org.bukkit.event.server.ServerCommandEvent)
++ public void tokyo.peya.lib.bukkit.Say2Functional.onQuit(org.bukkit.event.player.PlayerQuitEvent)
++ public void tokyo.peya.lib.bukkit.Say2Functional.onSay(org.bukkit.event.player.AsyncPlayerChatEvent)
++ public TitleNotification tokyo.peya.lib.bukkit.TitleNotification(org.bukkit.plugin.Plugin)
++ public void tokyo.peya.lib.bukkit.TitleNotification.setMainTitle(org.bukkit.entity.Player,java.lang.String)
++ public void tokyo.peya.lib.bukkit.TitleNotification.setSubTitle(org.bukkit.entity.Player,java.lang.String)
++ public SelectorException tokyo.peya.lib.bukkit.exception.SelectorException()
++ public SelectorInvalidException tokyo.peya.lib.bukkit.exception.SelectorInvalidException(java.util.Map)
++ public java.util.Map tokyo.peya.lib.bukkit.exception.SelectorInvalidException.getInvalidKeys()
++ public SelectorMalformedException tokyo.peya.lib.bukkit.exception.SelectorMalformedException()