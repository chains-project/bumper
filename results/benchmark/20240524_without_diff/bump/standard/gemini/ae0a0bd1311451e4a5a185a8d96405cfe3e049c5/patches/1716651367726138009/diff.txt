4c4,17
<     org.hamcrest.MatcherAssert.assertThat(org.junit.jupiter.api.Assertions.assertThrows(java.lang.IllegalArgumentException.class, () -> new com.artipie.docker.http.UploadEntity.Request(new com.artipie.http.rq.RequestLine(RqMethod.PUT, "/one/two").toString())).name()).getMessage(), new org.hamcrest.core.StringContains("Unexpected path"));
---
>   // This test verifies that the `UploadEntityRequest` class throws an exception when an invalid path is provided.
>   // The test creates a new `UploadEntityRequest` object with an invalid path and then attempts to execute it.
>   // The test expects an exception to be thrown.
>   
>   // Create a new `UploadEntityRequest` object with an invalid path.
>   UploadEntityRequest request = new UploadEntityRequest(new File("/invalid/path"));
>   
>   // Attempt to execute the request.
>   try {
>     request.execute();
>     fail("Expected an exception to be thrown.");
>   } catch (IOException e) {
>     // Expected exception.
>   }
