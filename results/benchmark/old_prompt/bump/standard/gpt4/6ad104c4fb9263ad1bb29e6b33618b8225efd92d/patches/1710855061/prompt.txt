act as a senior software engineer, your goal is fix code failures.
You are specialized in breaking dependency updates, in which the failure is caused by an external dependency.
To solve the failure you can only work on the client code.

propose a patch that I can apply to the code in order to fix the error.
Your response will be automatically parsed by an algorithm, be sure to only return the code.
be sure to return a code segment that can replace the entire failing client code.
you CANNOT change the function signature, but you can create variables if they help to make the code easier to understand.
you CANNOT use removed library methods identified with `--`, but you CAN use added library methods identified with `++`.
DO NOT USE '--' or '++' to indicate changes you make on the code, be sure to return only code that can be compiled.
BE SURE to return fully qualified code (e.g. don't return Float but return java.lang.Float)
return only the fixed failing method, not the complete class code, you MUST change something in the code.

the following client code fails:
```java
public byte[] decodeCiphertext(byte[] receivedMAC, byte[] additionalData, byte[] ciphertext) throws java.io.IOException {
    org.bouncycastle.crypto.params.KeyParameter macKey = initRecordMAC(decryptCipher);
    byte[] calculatedMAC = io.github.hapjava.server.impl.crypto.PolyKeyCreator.create(macKey, additionalData, ciphertext);
    if (!org.bouncycastle.util.Arrays.constantTimeAreEqual(calculatedMAC, receivedMAC)) {
        throw new io.github.hapjava.server.impl.crypto.TlsFatalAlert(AlertDescription.bad_record_mac);
    }
    byte[] output = new byte[ciphertext.length];
    decryptCipher.processBytes(ciphertext, 0, ciphertext.length, output, 0);
    return output;
}
```

with the following error message:
[ERROR] /HAP-Java/src/main/java/io/github/hapjava/server/impl/crypto/ChachaDecoder.java:[33,17] cannot find symbol
  symbol:   class TlsFatalAlert
  location: class io.github.hapjava.server.impl.crypto.ChachaDecoder
