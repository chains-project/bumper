-- public AgentConfigManager org.snmp4j.agent.AgentConfigManager(org.snmp4j.smi.OctetString,org.snmp4j.MessageDispatcher,org.snmp4j.agent.security.VACM,org.snmp4j.agent.MOServer[],org.snmp4j.util.WorkerPool,org.snmp4j.agent.io.MOInputFactory,org.snmp4j.agent.io.MOPersistenceProvider,org.snmp4j.agent.cfg.EngineBootsProvider)
-- public AgentConfigManager org.snmp4j.agent.AgentConfigManager(org.snmp4j.smi.OctetString,org.snmp4j.MessageDispatcher,org.snmp4j.agent.security.VACM,org.snmp4j.agent.MOServer[],org.snmp4j.util.WorkerPool,org.snmp4j.agent.io.MOInputFactory,org.snmp4j.agent.io.MOPersistenceProvider,org.snmp4j.agent.cfg.EngineBootsProvider,org.snmp4j.agent.mo.MOFactory)
-- public AgentConfigManager org.snmp4j.agent.AgentConfigManager(org.snmp4j.smi.OctetString,org.snmp4j.MessageDispatcher,org.snmp4j.agent.security.VACM,org.snmp4j.agent.MOServer[],org.snmp4j.util.WorkerPool,org.snmp4j.agent.io.MOInputFactory,org.snmp4j.agent.io.MOPersistenceProvider,org.snmp4j.agent.cfg.EngineBootsProvider,org.snmp4j.agent.mo.MOFactory,java.util.Collection)
++ public AgentConfigManager org.snmp4j.agent.AgentConfigManager(org.snmp4j.smi.OctetString,org.snmp4j.MessageDispatcher,org.snmp4j.agent.security.VACM,org.snmp4j.agent.MOServer[],org.snmp4j.util.WorkerPool,org.snmp4j.agent.io.MOInputFactory,org.snmp4j.agent.io.MOPersistenceProvider,org.snmp4j.cfg.EngineBootsProvider)
++ public AgentConfigManager org.snmp4j.agent.AgentConfigManager(org.snmp4j.smi.OctetString,org.snmp4j.MessageDispatcher,org.snmp4j.agent.security.VACM,org.snmp4j.agent.MOServer[],org.snmp4j.util.WorkerPool,org.snmp4j.agent.io.MOInputFactory,org.snmp4j.agent.io.MOPersistenceProvider,org.snmp4j.cfg.EngineBootsProvider,org.snmp4j.agent.mo.MOFactory)
++ public AgentConfigManager org.snmp4j.agent.AgentConfigManager(org.snmp4j.smi.OctetString,org.snmp4j.MessageDispatcher,org.snmp4j.agent.security.VACM,org.snmp4j.agent.MOServer[],org.snmp4j.util.WorkerPool,org.snmp4j.agent.io.MOInputFactory,org.snmp4j.agent.io.MOPersistenceProvider,org.snmp4j.cfg.EngineBootsProvider,org.snmp4j.agent.mo.MOFactory,java.util.Collection)
++ protected org.snmp4j.mp.CounterSupport org.snmp4j.agent.AgentConfigManager.createCounterSupport()
++ public org.snmp4j.agent.io.MOInputFactory org.snmp4j.agent.AgentConfigManager.getConfigurationFactory()
++ public org.snmp4j.mp.CounterSupport org.snmp4j.agent.AgentConfigManager.getCounterSupport()
++ public org.snmp4j.agent.io.MOPersistenceProvider org.snmp4j.agent.AgentConfigManager.getPersistenceProvider()
++ public org.snmp4j.security.SecurityModels org.snmp4j.agent.AgentConfigManager.getSecurityModels()
++ public org.snmp4j.security.SecurityProtocols org.snmp4j.agent.AgentConfigManager.getSecurityProtocols()
++ protected void org.snmp4j.agent.AgentConfigManager.initSecurityContext()
-- protected void org.snmp4j.agent.AgentConfigManager.initSecurityModels(org.snmp4j.agent.cfg.EngineBootsProvider)
++ protected void org.snmp4j.agent.AgentConfigManager.initSecurityModels(org.snmp4j.cfg.EngineBootsProvider)
++ public void org.snmp4j.agent.AgentConfigManager.setConfigurationFactory(org.snmp4j.agent.io.MOInputFactory)
++ public void org.snmp4j.agent.AgentConfigManager.setContext(org.snmp4j.security.SecurityModels,org.snmp4j.security.SecurityProtocols,org.snmp4j.mp.CounterSupport)
++ public void org.snmp4j.agent.AgentConfigManager.setCounterSupport(org.snmp4j.mp.CounterSupport)
++ public void org.snmp4j.agent.AgentConfigManager.setPersistenceProvider(org.snmp4j.agent.io.MOPersistenceProvider)
-- public void org.snmp4j.agent.CommandProcessor.addMOServer(org.snmp4j.agent.MOServer)
++ public bool org.snmp4j.agent.CommandProcessor.addMOServer(org.snmp4j.agent.MOServer)
++ public bool org.snmp4j.agent.CommandProcessor.removeMOServer(org.snmp4j.agent.MOServer)
-- public void org.snmp4j.agent.CommandProcessor.removeMOServer(org.snmp4j.agent.MOServer)
-- public void org.snmp4j.agent.DefaultMOQuery.substractScope(org.snmp4j.agent.MOScope)
++ public void org.snmp4j.agent.DefaultMOQuery.subtractScope(org.snmp4j.agent.MOScope)
-- public void org.snmp4j.agent.DefaultMOScope.substractScope(org.snmp4j.agent.MOScope)
++ public void org.snmp4j.agent.DefaultMOScope.subtractScope(org.snmp4j.agent.MOScope)
++ public java.util.Map org.snmp4j.agent.DefaultMOServer.getRegisteredScopes(org.snmp4j.agent.ManagedObject)
++ public java.util.Iterator org.snmp4j.agent.DefaultMOServer.iterator(java.util.Comparator,org.snmp4j.agent.mo.MOFilter)
-- public org.snmp4j.agent.ManagedObject org.snmp4j.agent.DefaultMOServer.lookup(org.snmp4j.agent.MOQuery,org.snmp4j.agent.mo.lock.LockRequest,org.snmp4j.agent.MOServerLookupEvent)
++ public org.snmp4j.agent.ManagedObject org.snmp4j.agent.DefaultMOServer.lookup(org.snmp4j.agent.MOQuery,org.snmp4j.agent.mo.lock.LockRequest,org.snmp4j.agent.MOServerLookupEvent,java.lang.Class)
-- public abstract void org.snmp4j.agent.MOQuery.substractScope(org.snmp4j.agent.MOScope)
++ public abstract void org.snmp4j.agent.MOQuery.subtractScope(org.snmp4j.agent.MOScope)
++ public abstract java.util.Map org.snmp4j.agent.MOServer.getRegisteredScopes(org.snmp4j.agent.ManagedObject)
++ public java.util.Iterator org.snmp4j.agent.MOServer.iterator(java.util.Comparator)
++ public abstract java.util.Iterator org.snmp4j.agent.MOServer.iterator(java.util.Comparator,org.snmp4j.agent.mo.MOFilter)
++ public org.snmp4j.agent.ManagedObject org.snmp4j.agent.MOServer.lookup(org.snmp4j.agent.MOQuery)
-- public abstract org.snmp4j.agent.ManagedObject org.snmp4j.agent.MOServer.lookup(org.snmp4j.agent.MOQuery)
++ public org.snmp4j.agent.ManagedObject org.snmp4j.agent.MOServer.lookup(org.snmp4j.agent.MOQuery,java.lang.Class)
-- public abstract org.snmp4j.agent.ManagedObject org.snmp4j.agent.MOServer.lookup(org.snmp4j.agent.MOQuery,org.snmp4j.agent.mo.lock.LockRequest,org.snmp4j.agent.MOServerLookupEvent)
++ public org.snmp4j.agent.ManagedObject org.snmp4j.agent.MOServer.lookup(org.snmp4j.agent.MOQuery,org.snmp4j.agent.mo.lock.LockRequest,org.snmp4j.agent.MOServerLookupEvent)
++ public abstract org.snmp4j.agent.ManagedObject org.snmp4j.agent.MOServer.lookup(org.snmp4j.agent.MOQuery,org.snmp4j.agent.mo.lock.LockRequest,org.snmp4j.agent.MOServerLookupEvent,java.lang.Class)
-- public abstract void org.snmp4j.agent.MutableMOScope.substractScope(org.snmp4j.agent.MOScope)
++ public abstract void org.snmp4j.agent.MutableMOScope.subtractScope(org.snmp4j.agent.MOScope)
++ public bool org.snmp4j.agent.RandomAccessManagedObject.isVolatile(org.snmp4j.smi.OID)
-- public EngineBootsCounterFile org.snmp4j.agent.cfg.EngineBootsCounterFile(java.io.File)
-- public java.io.File org.snmp4j.agent.cfg.EngineBootsCounterFile.getBootCounterFile()
-- public int org.snmp4j.agent.cfg.EngineBootsCounterFile.getEngineBoots()
-- protected int org.snmp4j.agent.cfg.EngineBootsCounterFile.getLastEngineBoots()
-- protected void org.snmp4j.agent.cfg.EngineBootsCounterFile.setEngineBoots(int)
-- public int org.snmp4j.agent.cfg.EngineBootsCounterFile.updateEngineBoots()
-- public abstract int org.snmp4j.agent.cfg.EngineBootsProvider.getEngineBoots()
-- public abstract int org.snmp4j.agent.cfg.EngineBootsProvider.updateEngineBoots()
-- public abstract org.snmp4j.smi.OctetString org.snmp4j.agent.cfg.EngineIdProvider.getEngineId(org.snmp4j.smi.OctetString)
-- public abstract void org.snmp4j.agent.cfg.EngineIdProvider.resetEngineId(org.snmp4j.smi.OctetString)
++ protected SampleAgent org.snmp4j.agent.example.SampleAgent(java.util.Map,org.snmp4j.agent.MOServer[],org.snmp4j.agent.io.MOPersistenceProvider,java.util.Properties,org.snmp4j.agent.io.ImportMode)
++ protected org.snmp4j.agent.io.MOInputFactory org.snmp4j.agent.example.SampleAgent.createMOInputFactory(java.lang.String,org.snmp4j.agent.io.ImportMode)
++ protected static java.util.Properties org.snmp4j.agent.example.SampleAgent.getTableSizeLimitsProperties(java.util.Map)
++ protected void org.snmp4j.agent.example.SampleAgent.setupAgent(java.util.Map,org.snmp4j.agent.io.MOPersistenceProvider,org.snmp4j.cfg.EngineBootsProvider,org.snmp4j.smi.OctetString,org.snmp4j.agent.MOServer[],org.snmp4j.agent.io.MOInputFactory,java.util.List,java.lang.String)
++ protected static java.util.List org.snmp4j.agent.example.SampleAgent.splitArgsForMultipleAgents(java.lang.String[],java.lang.String)
++ public void org.snmp4j.agent.io.DefaultMOPersistenceProvider.store(java.lang.String,org.snmp4j.agent.mo.MOPriorityProvider)
++ public void org.snmp4j.agent.io.MOPersistenceProvider.restore(java.lang.String,int,org.snmp4j.agent.mo.MOPriorityProvider)
++ public abstract void org.snmp4j.agent.io.MOPersistenceProvider.store(java.lang.String,org.snmp4j.agent.mo.MOPriorityProvider)
++ public void org.snmp4j.agent.io.MOServerPersistence.saveData(org.snmp4j.agent.io.MOOutput,org.snmp4j.agent.mo.MOPriorityProvider)
++ public PropertyMOInput org.snmp4j.agent.io.prop.PropertyMOInput(java.util.Properties,org.snmp4j.agent.mo.util.VariableProvider,org.snmp4j.agent.io.ImportMode)
++ public void org.snmp4j.agent.io.prop.PropertyMOInput.setImportMode(int)
++ public void org.snmp4j.agent.io.prop.PropertyMOInput.setOidTextFormat(org.snmp4j.util.OIDTextFormat)
++ protected bool org.snmp4j.agent.mo.DefaultMOTable.addRowInternal(org.snmp4j.agent.mo.MOTableRow,org.snmp4j.agent.mo.MOTableRowEvent$OriginType)
++ public org.snmp4j.agent.mo.MOTableRow org.snmp4j.agent.mo.DefaultMOTable.createRowInternal(org.snmp4j.smi.OID,org.snmp4j.smi.Variable[],org.snmp4j.agent.mo.MOTableRowEvent$OriginType)
++ public bool org.snmp4j.agent.mo.DefaultMOTable.isVolatile(org.snmp4j.smi.OID)
++ protected org.snmp4j.smi.Variable org.snmp4j.agent.mo.DefaultMOTable.restoreRawDataForHiddenColumns(org.snmp4j.smi.Variable[],int)
++ public int org.snmp4j.agent.mo.DefaultMOTableRow.compareTo(org.snmp4j.agent.mo.MOTableRow)
++ public static org.snmp4j.smi.Variable org.snmp4j.agent.mo.DefaultMOTableRow.getColumnValue(org.snmp4j.agent.mo.MOTableRow,org.snmp4j.agent.mo.MOTable,java.lang.Class,org.snmp4j.agent.request.SubRequest)
++ public MOChangeEvent org.snmp4j.agent.mo.MOChangeEvent(java.lang.Object,org.snmp4j.agent.ManagedObject,org.snmp4j.smi.OID,org.snmp4j.agent.mo.MOChangeEvent$Modification,org.snmp4j.agent.request.SubRequest)
++ public MOChangeEvent org.snmp4j.agent.mo.MOChangeEvent(java.lang.Object,org.snmp4j.agent.ManagedObject,org.snmp4j.smi.OID,org.snmp4j.smi.Variable,org.snmp4j.smi.Variable,boolean,org.snmp4j.agent.request.SubRequest)
++ public org.snmp4j.agent.request.SubRequest org.snmp4j.agent.mo.MOChangeEvent.getSubRequest()
++ public int org.snmp4j.agent.mo.MOColumn.compareTo(org.snmp4j.agent.mo.MOColumn)
++ public abstract org.snmp4j.agent.ManagedObject org.snmp4j.agent.mo.MOPriorityProvider.getBootManagedObject(org.snmp4j.smi.OctetString)
++ public abstract java.util.SortedMap org.snmp4j.agent.mo.MOPriorityProvider.getPriorityMap(org.snmp4j.smi.OctetString)
++ public static org.snmp4j.agent.mo.MOTableRowEvent$OriginType org.snmp4j.agent.mo.MOTableRowEvent$OriginType.valueOf(java.lang.String)
++ public static org.snmp4j.agent.mo.MOTableRowEvent$OriginType org.snmp4j.agent.mo.MOTableRowEvent$OriginType.values()
++ public MOTableRowEvent org.snmp4j.agent.mo.MOTableRowEvent(java.lang.Object,org.snmp4j.agent.mo.MOTable,org.snmp4j.agent.mo.MOTableRow,int,org.snmp4j.agent.mo.MOTableRowEvent$OriginType)
++ public MOTableRowEvent org.snmp4j.agent.mo.MOTableRowEvent(java.lang.Object,org.snmp4j.agent.mo.MOTable,org.snmp4j.agent.mo.MOTableRow,int,org.snmp4j.agent.mo.MOTableRowEvent$OriginType,boolean)
++ public org.snmp4j.agent.mo.MOTableRowEvent$OriginType org.snmp4j.agent.mo.MOTableRowEvent.getOriginType()
++ public int org.snmp4j.agent.mo.snmp.CoexistenceInfo.compareTo(org.snmp4j.agent.mo.snmp.CoexistenceInfo)
++ public synchronized int org.snmp4j.agent.mo.snmp.DateAndTime.validate(org.snmp4j.smi.OctetString,org.snmp4j.smi.OctetString)
++ public org.snmp4j.agent.mo.MOColumn org.snmp4j.agent.mo.snmp.NotificationLogMib$SnmpAdminString.createColumn(int,int,org.snmp4j.agent.MOAccess,org.snmp4j.smi.OctetString,boolean)
++ public org.snmp4j.agent.mo.MOScalar org.snmp4j.agent.mo.snmp.NotificationLogMib$SnmpAdminString.createScalar(org.snmp4j.smi.OID,org.snmp4j.agent.MOAccess,org.snmp4j.smi.OctetString)
++ public org.snmp4j.agent.mo.MOColumn org.snmp4j.agent.mo.snmp.NotificationLogMib$SnmpEngineID.createColumn(int,int,org.snmp4j.agent.MOAccess,org.snmp4j.smi.OctetString,boolean)
++ public org.snmp4j.agent.mo.MOScalar org.snmp4j.agent.mo.snmp.NotificationLogMib$SnmpEngineID.createScalar(org.snmp4j.smi.OID,org.snmp4j.agent.MOAccess,org.snmp4j.smi.OctetString)
++ public org.snmp4j.agent.mo.MOColumn org.snmp4j.agent.mo.snmp.NotificationLogMib$TAddress.createColumn(int,int,org.snmp4j.agent.MOAccess,org.snmp4j.smi.OctetString,boolean)
++ public org.snmp4j.agent.mo.MOScalar org.snmp4j.agent.mo.snmp.NotificationLogMib$TAddress.createScalar(org.snmp4j.smi.OID,org.snmp4j.agent.MOAccess,org.snmp4j.smi.OctetString)
++ public org.snmp4j.agent.mo.MOColumn org.snmp4j.agent.mo.snmp.NotificationLogMib$TDomain.createColumn(int,int,org.snmp4j.agent.MOAccess,org.snmp4j.smi.OID,boolean)
++ public org.snmp4j.agent.mo.MOScalar org.snmp4j.agent.mo.snmp.NotificationLogMib$TDomain.createScalar(org.snmp4j.smi.OID,org.snmp4j.agent.MOAccess,org.snmp4j.smi.OID)
++ public RowCount org.snmp4j.agent.mo.snmp.RowCount()
++ public RowCount org.snmp4j.agent.mo.snmp.RowCount(org.snmp4j.agent.mo.MOTable)
++ public java.lang.Object org.snmp4j.agent.mo.snmp.RowCount.clone()
++ public int org.snmp4j.agent.mo.snmp.RowCount.compareTo(org.snmp4j.smi.Variable)
++ public void org.snmp4j.agent.mo.snmp.RowCount.decodeBER(org.snmp4j.asn1.BERInputStream)
++ public void org.snmp4j.agent.mo.snmp.RowCount.encodeBER(java.io.OutputStream)
++ public void org.snmp4j.agent.mo.snmp.RowCount.fromSubIndex(org.snmp4j.smi.OID,boolean)
++ public int org.snmp4j.agent.mo.snmp.RowCount.getBERLength()
++ public int org.snmp4j.agent.mo.snmp.RowCount.getBERPayloadLength()
++ public int org.snmp4j.agent.mo.snmp.RowCount.getSyntax()
++ public java.lang.String org.snmp4j.agent.mo.snmp.RowCount.getSyntaxString()
++ public J org.snmp4j.agent.mo.snmp.RowCount.getValue()
++ public bool org.snmp4j.agent.mo.snmp.RowCount.isDynamic()
++ public bool org.snmp4j.agent.mo.snmp.RowCount.isException()
++ public int org.snmp4j.agent.mo.snmp.RowCount.toInt()
++ public J org.snmp4j.agent.mo.snmp.RowCount.toLong()
++ public org.snmp4j.smi.OID org.snmp4j.agent.mo.snmp.RowCount.toSubIndex(boolean)
++ public static org.snmp4j.smi.Integer32 org.snmp4j.agent.mo.snmp.RowStatus.getRowStatus(org.snmp4j.agent.mo.MOTableRow,org.snmp4j.agent.mo.MOTable)
++ public SnmpAdminString org.snmp4j.agent.mo.snmp.SnmpAdminString(int,org.snmp4j.agent.MOAccess,org.snmp4j.smi.OctetString,boolean)
++ public SnmpAdminString org.snmp4j.agent.mo.snmp.SnmpAdminString(int,org.snmp4j.agent.MOAccess,org.snmp4j.smi.OctetString,boolean,int,int)
-- public SnmpAdminString org.snmp4j.agent.mo.snmp.SnmpAdminString(int,org.snmp4j.agent.MOAccess,org.snmp4j.smi.Variable,boolean)
-- public SnmpAdminString org.snmp4j.agent.mo.snmp.SnmpAdminString(int,org.snmp4j.agent.MOAccess,org.snmp4j.smi.Variable,boolean,int,int)
++ public synchronized int org.snmp4j.agent.mo.snmp.SnmpAdminString.validate(org.snmp4j.smi.OctetString,org.snmp4j.smi.OctetString)
-- public SnmpFrameworkMIB org.snmp4j.agent.mo.snmp.SnmpFrameworkMIB(org.snmp4j.security.USM,java.util.Collection)
-- public SnmpFrameworkMIB org.snmp4j.agent.mo.snmp.SnmpFrameworkMIB(org.snmp4j.security.USM,java.util.Collection,boolean)
++ public SnmpFrameworkMIB org.snmp4j.agent.mo.snmp.SnmpFrameworkMIB(org.snmp4j.smi.OctetString,org.snmp4j.security.USM,java.util.Collection)
++ public SnmpFrameworkMIB org.snmp4j.agent.mo.snmp.SnmpFrameworkMIB(org.snmp4j.smi.OctetString,org.snmp4j.security.USM,java.util.Collection,boolean)
-- protected SnmpSshTmMib org.snmp4j.agent.mo.snmp.SnmpSshTmMib()
-- public SnmpSshTmMib org.snmp4j.agent.mo.snmp.SnmpSshTmMib(org.snmp4j.agent.mo.MOFactory)
-- public void org.snmp4j.agent.mo.snmp.SnmpSshTmMib.addImportedTCsToFactory(org.snmp4j.agent.mo.MOFactory)
-- protected void org.snmp4j.agent.mo.snmp.SnmpSshTmMib.addTCsToFactory(org.snmp4j.agent.mo.MOFactory)
-- protected void org.snmp4j.agent.mo.snmp.SnmpSshTmMib.createMO(org.snmp4j.agent.mo.MOFactory)
-- public org.snmp4j.agent.mo.MOScalar org.snmp4j.agent.mo.snmp.SnmpSshTmMib.getSnmpSshtmSessionCloses()
-- public org.snmp4j.agent.mo.MOScalar org.snmp4j.agent.mo.snmp.SnmpSshTmMib.getSnmpSshtmSessionInvalidCaches()
-- public org.snmp4j.agent.mo.MOScalar org.snmp4j.agent.mo.snmp.SnmpSshTmMib.getSnmpSshtmSessionNoChannels()
-- public org.snmp4j.agent.mo.MOScalar org.snmp4j.agent.mo.snmp.SnmpSshTmMib.getSnmpSshtmSessionNoSessions()
-- public org.snmp4j.agent.mo.MOScalar org.snmp4j.agent.mo.snmp.SnmpSshTmMib.getSnmpSshtmSessionNoSubsystems()
-- public org.snmp4j.agent.mo.MOScalar org.snmp4j.agent.mo.snmp.SnmpSshTmMib.getSnmpSshtmSessionOpenErrors()
-- public org.snmp4j.agent.mo.MOScalar org.snmp4j.agent.mo.snmp.SnmpSshTmMib.getSnmpSshtmSessionOpens()
-- public org.snmp4j.agent.mo.MOScalar org.snmp4j.agent.mo.snmp.SnmpSshTmMib.getSnmpSshtmSessionUserAuthFailures()
-- public void org.snmp4j.agent.mo.snmp.SnmpSshTmMib.registerMOs(org.snmp4j.agent.MOServer,org.snmp4j.smi.OctetString)
-- public void org.snmp4j.agent.mo.snmp.SnmpSshTmMib.unregisterMOs(org.snmp4j.agent.MOServer,org.snmp4j.smi.OctetString)
++ public SnmpTagList org.snmp4j.agent.mo.snmp.SnmpTagList(int,org.snmp4j.agent.MOAccess,org.snmp4j.smi.OctetString,boolean)
-- public SnmpTagList org.snmp4j.agent.mo.snmp.SnmpTagList(int,org.snmp4j.agent.MOAccess,org.snmp4j.smi.Variable,boolean)
++ public synchronized int org.snmp4j.agent.mo.snmp.SnmpTagList.validate(org.snmp4j.smi.OctetString,org.snmp4j.smi.OctetString)
++ public synchronized int org.snmp4j.agent.mo.snmp.SnmpTagValue.validate(org.snmp4j.smi.OctetString,org.snmp4j.smi.OctetString)
-- public org.snmp4j.Target org.snmp4j.agent.mo.snmp.SnmpTargetMIB$SnmpTargetAddrEntryRow.getTarget(org.snmp4j.smi.OctetString,org.snmp4j.smi.OctetString)
++ public org.snmp4j.Target org.snmp4j.agent.mo.snmp.SnmpTargetMIB$SnmpTargetAddrEntryRow.getTarget(org.snmp4j.smi.OctetString,org.snmp4j.smi.OctetString,org.snmp4j.smi.Address)
++ public org.snmp4j.CertifiedTarget org.snmp4j.agent.mo.snmp.SnmpTargetMIB$SnmpTargetAddrEntryRow.getTlsTmTarget(org.snmp4j.smi.Address,org.snmp4j.smi.OctetString,org.snmp4j.smi.OID,org.snmp4j.smi.OID,org.snmp4j.agent.mo.snmp.SnmpTlsTmMib)
++ public org.snmp4j.Target org.snmp4j.agent.mo.snmp.SnmpTargetMIB.getTarget(org.snmp4j.smi.OctetString,org.snmp4j.smi.OctetString,org.snmp4j.smi.OctetString,org.snmp4j.smi.Address)
++ public org.snmp4j.agent.mo.snmp.TDomainAddressFactory org.snmp4j.agent.mo.snmp.SnmpTargetMIB.removeSupportedTDomain(org.snmp4j.smi.OID)
-- public SnmpTlsTmMib$SnmpAdminString org.snmp4j.agent.mo.snmp.SnmpTlsTmMib$SnmpAdminString(org.snmp4j.agent.mo.snmp.SnmpTlsTmMib)
-- public org.snmp4j.agent.mo.MOColumn org.snmp4j.agent.mo.snmp.SnmpTlsTmMib$SnmpAdminString.createColumn(int,int,org.snmp4j.agent.MOAccess,org.snmp4j.smi.Variable,boolean)
-- public org.snmp4j.smi.Variable org.snmp4j.agent.mo.snmp.SnmpTlsTmMib$SnmpAdminString.createInitialValue()
-- public org.snmp4j.agent.mo.MOScalar org.snmp4j.agent.mo.snmp.SnmpTlsTmMib$SnmpAdminString.createScalar(org.snmp4j.smi.OID,org.snmp4j.agent.MOAccess,org.snmp4j.smi.Variable)
-- public java.lang.String org.snmp4j.agent.mo.snmp.SnmpTlsTmMib$SnmpAdminString.getModuleName()
-- public java.lang.String org.snmp4j.agent.mo.snmp.SnmpTlsTmMib$SnmpAdminString.getName()
++ public org.snmp4j.agent.mo.MOColumn org.snmp4j.agent.mo.snmp.SnmpTlsTmMib$SnmpTLSFingerprint.createColumn(int,int,org.snmp4j.agent.MOAccess,org.snmp4j.smi.OctetString,boolean)
++ public org.snmp4j.agent.mo.MOScalar org.snmp4j.agent.mo.snmp.SnmpTlsTmMib$SnmpTLSFingerprint.createScalar(org.snmp4j.smi.OID,org.snmp4j.agent.MOAccess,org.snmp4j.smi.OctetString)
++ public void org.snmp4j.agent.mo.snmp.SnmpTlsTmMib$SnmpTlstmAddrEntryRow.prepare(org.snmp4j.agent.request.SubRequest,org.snmp4j.agent.mo.MOTableRow,int)
++ public SnmpTlsTmMib$TDomainTLSAddressFactory org.snmp4j.agent.mo.snmp.SnmpTlsTmMib$TDomainTLSAddressFactory()
++ public org.snmp4j.smi.Address org.snmp4j.agent.mo.snmp.SnmpTlsTmMib$TDomainTLSAddressFactory.createAddress(org.snmp4j.smi.OID,org.snmp4j.smi.OctetString)
++ public SnmpTlsTmMib org.snmp4j.agent.mo.snmp.SnmpTlsTmMib(org.snmp4j.agent.mo.MOFactory,org.snmp4j.agent.mo.snmp.SnmpTargetMIB)
++ public void org.snmp4j.agent.mo.snmp.SnmpTlsTmMib.addTlsDomainsToSnmpTargetMIB(org.snmp4j.agent.mo.snmp.SnmpTargetMIB)
-- public bool org.snmp4j.agent.mo.snmp.SnmpTlsTmMib.isClientCertificateAccepted(java.security.cert.X509Certificate)
++ public bool org.snmp4j.agent.mo.snmp.SnmpTlsTmMib.isClientCertificateAccepted(java.security.cert.X509Certificate)
++ public void org.snmp4j.agent.mo.snmp.SnmpTlsTmMib.removeTlsDomainsFromSnmpTargetMIB(org.snmp4j.agent.mo.snmp.SnmpTargetMIB)
++ public static org.snmp4j.mp.SnmpConstants$StorageTypeEnum org.snmp4j.agent.mo.snmp.StorageType$StorageTypeEnum.toSnmpConstantsStorageTypeEnum(int)
++ public static org.snmp4j.smi.Integer32 org.snmp4j.agent.mo.snmp.StorageType.getStorageType(org.snmp4j.agent.mo.MOTableRow,org.snmp4j.agent.mo.MOTable)
++ public synchronized int org.snmp4j.agent.mo.snmp.StorageType.validate(org.snmp4j.smi.Integer32,org.snmp4j.smi.Integer32)
-- public org.snmp4j.agent.mo.MOMutableRow2PC org.snmp4j.agent.mo.snmp.UsmMIB$UsmTableModel.createRow(org.snmp4j.smi.OID,org.snmp4j.smi.Variable[])
++ public org.snmp4j.agent.mo.snmp.UsmMIB$UsmTableRow org.snmp4j.agent.mo.snmp.UsmMIB$UsmTableModel.createRow(org.snmp4j.smi.OID,org.snmp4j.smi.Variable[])
++ public static org.snmp4j.security.UsmUserEntry org.snmp4j.agent.mo.snmp.UsmMIB.localizeUser(org.snmp4j.smi.OctetString,org.snmp4j.smi.OctetString,org.snmp4j.smi.OID,org.snmp4j.smi.OctetString,org.snmp4j.smi.OID,org.snmp4j.smi.OctetString,org.snmp4j.security.SecurityProtocols)
++ public VacmMIB org.snmp4j.agent.mo.snmp.VacmMIB(org.snmp4j.agent.MOServer[],org.snmp4j.security.SecurityModels)
-- public org.snmp4j.agent.mo.MOTable org.snmp4j.agent.mo.snmp.VacmMIB.getVacmSecurityToGroupTable()
++ public org.snmp4j.agent.mo.DefaultMOTable org.snmp4j.agent.mo.snmp.VacmMIB.getVacmSecurityToGroupTable()
-- public DHGroups org.snmp4j.agent.mo.snmp.dh.DHGroups()
++ public org.snmp4j.agent.mo.MOColumn org.snmp4j.agent.mo.snmp.dh.SnmpUsmDhObjectsMib$DHKeyChange.createColumn(int,int,org.snmp4j.agent.MOAccess,org.snmp4j.smi.OctetString,boolean)
++ public org.snmp4j.agent.mo.MOScalar org.snmp4j.agent.mo.snmp.dh.SnmpUsmDhObjectsMib$DHKeyChange.createScalar(org.snmp4j.smi.OID,org.snmp4j.agent.MOAccess,org.snmp4j.smi.OctetString)
-- public SnmpUsmDhObjectsMib$SnmpAdminString org.snmp4j.agent.mo.snmp.dh.SnmpUsmDhObjectsMib$SnmpAdminString(org.snmp4j.agent.mo.snmp.dh.SnmpUsmDhObjectsMib)
-- public org.snmp4j.agent.mo.MOColumn org.snmp4j.agent.mo.snmp.dh.SnmpUsmDhObjectsMib$SnmpAdminString.createColumn(int,int,org.snmp4j.agent.MOAccess,org.snmp4j.smi.Variable,boolean)
-- public org.snmp4j.smi.Variable org.snmp4j.agent.mo.snmp.dh.SnmpUsmDhObjectsMib$SnmpAdminString.createInitialValue()
-- public org.snmp4j.agent.mo.MOScalar org.snmp4j.agent.mo.snmp.dh.SnmpUsmDhObjectsMib$SnmpAdminString.createScalar(org.snmp4j.smi.OID,org.snmp4j.agent.MOAccess,org.snmp4j.smi.Variable)
-- public java.lang.String org.snmp4j.agent.mo.snmp.dh.SnmpUsmDhObjectsMib$SnmpAdminString.getModuleName()
-- public java.lang.String org.snmp4j.agent.mo.snmp.dh.SnmpUsmDhObjectsMib$SnmpAdminString.getName()
++ public org.snmp4j.agent.mo.MOColumn org.snmp4j.agent.mo.snmp.tc.RowStatusTC.createColumn(int,int,org.snmp4j.agent.MOAccess,org.snmp4j.smi.Integer32,boolean)
++ public org.snmp4j.agent.mo.MOScalar org.snmp4j.agent.mo.snmp.tc.RowStatusTC.createScalar(org.snmp4j.smi.OID,org.snmp4j.agent.MOAccess,org.snmp4j.smi.Integer32)
++ public org.snmp4j.agent.mo.MOColumn org.snmp4j.agent.mo.snmp.tc.StorageTypeTC.createColumn(int,int,org.snmp4j.agent.MOAccess,org.snmp4j.smi.Integer32,boolean)
++ public org.snmp4j.agent.mo.MOScalar org.snmp4j.agent.mo.snmp.tc.StorageTypeTC.createScalar(org.snmp4j.smi.OID,org.snmp4j.agent.MOAccess,org.snmp4j.smi.Integer32)
++ public org.snmp4j.agent.mo.MOColumn org.snmp4j.agent.mo.snmp.tc.TestAndIncrTC.createColumn(int,int,org.snmp4j.agent.MOAccess,org.snmp4j.smi.Integer32,boolean)
++ public org.snmp4j.agent.mo.MOScalar org.snmp4j.agent.mo.snmp.tc.TestAndIncrTC.createScalar(org.snmp4j.smi.OID,org.snmp4j.agent.MOAccess,org.snmp4j.smi.Integer32)
++ public org.snmp4j.agent.mo.MOColumn org.snmp4j.agent.mo.snmp.tc.TimeStampTC.createColumn(int,int,org.snmp4j.agent.MOAccess,org.snmp4j.smi.TimeTicks,boolean)
++ public org.snmp4j.agent.mo.MOScalar org.snmp4j.agent.mo.snmp.tc.TimeStampTC.createScalar(org.snmp4j.smi.OID,org.snmp4j.agent.MOAccess,org.snmp4j.smi.TimeTicks)
++ public void org.snmp4j.agent.mo.snmp4j.Snmp4jConfigMib$Snmp4jCfgReset.cleanup(org.snmp4j.agent.request.SubRequest)
++ public void org.snmp4j.agent.mo.snmp4j.Snmp4jConfigMib$Snmp4jCfgReset.commit(org.snmp4j.agent.request.SubRequest)
++ public int org.snmp4j.agent.mo.snmp4j.Snmp4jConfigMib$Snmp4jCfgReset.isValueOK(org.snmp4j.agent.request.SubRequest)
++ public Snmp4jConfigMib$Snmp4jCfgResetEnum org.snmp4j.agent.mo.snmp4j.Snmp4jConfigMib$Snmp4jCfgResetEnum()
++ public Snmp4jConfigMib$Snmp4jCfgStorageSeqEntryRow org.snmp4j.agent.mo.snmp4j.Snmp4jConfigMib$Snmp4jCfgStorageSeqEntryRow(org.snmp4j.agent.mo.snmp4j.Snmp4jConfigMib,org.snmp4j.smi.OID,org.snmp4j.smi.Variable[])
++ public org.snmp4j.smi.Integer32 org.snmp4j.agent.mo.snmp4j.Snmp4jConfigMib$Snmp4jCfgStorageSeqEntryRow.getSnmp4jCfgStorageSeqRowStatus()
++ public org.snmp4j.smi.Integer32 org.snmp4j.agent.mo.snmp4j.Snmp4jConfigMib$Snmp4jCfgStorageSeqEntryRow.getSnmp4jCfgStorageSeqStorageType()
++ public org.snmp4j.smi.OID org.snmp4j.agent.mo.snmp4j.Snmp4jConfigMib$Snmp4jCfgStorageSeqEntryRow.getSnmp4jCfgStorageSeqSubtree()
++ public org.snmp4j.smi.Variable org.snmp4j.agent.mo.snmp4j.Snmp4jConfigMib$Snmp4jCfgStorageSeqEntryRow.getValue(int)
++ public void org.snmp4j.agent.mo.snmp4j.Snmp4jConfigMib$Snmp4jCfgStorageSeqEntryRow.setSnmp4jCfgStorageSeqRowStatus(org.snmp4j.smi.Integer32)
++ public void org.snmp4j.agent.mo.snmp4j.Snmp4jConfigMib$Snmp4jCfgStorageSeqEntryRow.setSnmp4jCfgStorageSeqStorageType(org.snmp4j.smi.Integer32)
++ public void org.snmp4j.agent.mo.snmp4j.Snmp4jConfigMib$Snmp4jCfgStorageSeqEntryRow.setSnmp4jCfgStorageSeqSubtree(org.snmp4j.smi.OID)
++ public void org.snmp4j.agent.mo.snmp4j.Snmp4jConfigMib$Snmp4jCfgStorageSeqEntryRow.setValue(int,org.snmp4j.smi.Variable)
++ public Snmp4jConfigMib$Snmp4jCfgStorageSeqEntryRowFactory org.snmp4j.agent.mo.snmp4j.Snmp4jConfigMib$Snmp4jCfgStorageSeqEntryRowFactory(org.snmp4j.agent.mo.snmp4j.Snmp4jConfigMib)
++ public synchronized org.snmp4j.agent.mo.snmp4j.Snmp4jConfigMib$Snmp4jCfgStorageSeqEntryRow org.snmp4j.agent.mo.snmp4j.Snmp4jConfigMib$Snmp4jCfgStorageSeqEntryRowFactory.createRow(org.snmp4j.smi.OID,org.snmp4j.smi.Variable[])
++ public synchronized void org.snmp4j.agent.mo.snmp4j.Snmp4jConfigMib$Snmp4jCfgStorageSeqEntryRowFactory.freeRow(org.snmp4j.agent.mo.snmp4j.Snmp4jConfigMib$Snmp4jCfgStorageSeqEntryRow)
++ public Snmp4jConfigMib org.snmp4j.agent.mo.snmp4j.Snmp4jConfigMib(org.snmp4j.agent.mo.snmp.SysUpTime,org.snmp4j.agent.AgentConfigManager)
++ public synchronized void org.snmp4j.agent.mo.snmp4j.Snmp4jConfigMib.freeRow(org.snmp4j.agent.mo.snmp4j.Snmp4jConfigMib$Snmp4jCfgStorageEntryRow)
++ public org.snmp4j.agent.ManagedObject org.snmp4j.agent.mo.snmp4j.Snmp4jConfigMib.getBootManagedObject(org.snmp4j.smi.OctetString)
++ public java.util.SortedMap org.snmp4j.agent.mo.snmp4j.Snmp4jConfigMib.getPriorityMap(org.snmp4j.smi.OctetString)
++ public org.snmp4j.agent.mo.MOTable org.snmp4j.agent.mo.snmp4j.Snmp4jConfigMib.getSnmp4jCfgStorageSeqEntry()
-- public Snmp4jProxyMib$SnmpAdminString org.snmp4j.agent.mo.snmp4j.Snmp4jProxyMib$SnmpAdminString(org.snmp4j.agent.mo.snmp4j.Snmp4jProxyMib)
-- public org.snmp4j.agent.mo.MOColumn org.snmp4j.agent.mo.snmp4j.Snmp4jProxyMib$SnmpAdminString.createColumn(int,int,org.snmp4j.agent.MOAccess,org.snmp4j.smi.Variable,boolean)
-- public org.snmp4j.smi.Variable org.snmp4j.agent.mo.snmp4j.Snmp4jProxyMib$SnmpAdminString.createInitialValue()
-- public org.snmp4j.agent.mo.MOScalar org.snmp4j.agent.mo.snmp4j.Snmp4jProxyMib$SnmpAdminString.createScalar(org.snmp4j.smi.OID,org.snmp4j.agent.MOAccess,org.snmp4j.smi.Variable)
-- public java.lang.String org.snmp4j.agent.mo.snmp4j.Snmp4jProxyMib$SnmpAdminString.getModuleName()
-- public java.lang.String org.snmp4j.agent.mo.snmp4j.Snmp4jProxyMib$SnmpAdminString.getName()
-- public Snmp4jProxyMib$SnmpEngineID org.snmp4j.agent.mo.snmp4j.Snmp4jProxyMib$SnmpEngineID(org.snmp4j.agent.mo.snmp4j.Snmp4jProxyMib)
-- public org.snmp4j.agent.mo.MOColumn org.snmp4j.agent.mo.snmp4j.Snmp4jProxyMib$SnmpEngineID.createColumn(int,int,org.snmp4j.agent.MOAccess,org.snmp4j.smi.Variable,boolean)
-- public org.snmp4j.smi.Variable org.snmp4j.agent.mo.snmp4j.Snmp4jProxyMib$SnmpEngineID.createInitialValue()
-- public org.snmp4j.agent.mo.MOScalar org.snmp4j.agent.mo.snmp4j.Snmp4jProxyMib$SnmpEngineID.createScalar(org.snmp4j.smi.OID,org.snmp4j.agent.MOAccess,org.snmp4j.smi.Variable)
-- public java.lang.String org.snmp4j.agent.mo.snmp4j.Snmp4jProxyMib$SnmpEngineID.getModuleName()
-- public java.lang.String org.snmp4j.agent.mo.snmp4j.Snmp4jProxyMib$SnmpEngineID.getName()
-- protected SnmpRequest$SnmpSubRequest org.snmp4j.agent.request.SnmpRequest$SnmpSubRequest(org.snmp4j.agent.request.SnmpRequest,org.snmp4j.agent.request.SnmpRequest$SnmpSubRequest,int)
++ protected SnmpRequest$SnmpSubRequest org.snmp4j.agent.request.SnmpRequest$SnmpSubRequest(org.snmp4j.agent.request.SnmpRequest,org.snmp4j.agent.request.SnmpSubRequest,int)
++ public static int org.snmp4j.agent.request.SnmpRequest.getMaxRepetitionsLimit()
++ public static void org.snmp4j.agent.request.SnmpRequest.setMaxRepetitionsLimit(int)
-- public abstract org.snmp4j.agent.request.RequestStatus org.snmp4j.agent.request.SnmpSubRequest.getStatus()
-- public abstract org.snmp4j.smi.VariableBinding org.snmp4j.agent.request.SnmpSubRequest.getVariableBinding()
-- public abstract void org.snmp4j.agent.request.SnmpSubRequest.setErrorStatus(int)
++ public MOScopePriorityComparator org.snmp4j.agent.util.MOScopePriorityComparator(java.util.SortedMap)
++ public int org.snmp4j.agent.util.MOScopePriorityComparator.compare(org.snmp4j.agent.MOScope,org.snmp4j.agent.MOScope)