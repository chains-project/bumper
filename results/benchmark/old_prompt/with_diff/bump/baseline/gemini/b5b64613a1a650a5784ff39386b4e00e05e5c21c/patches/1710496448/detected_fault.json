{
    "py/object": "pipeline.types.detected_fault.DetectedFault",
    "identifier": 868815265,
    "in_class_code": "public class CreateDockerBuildExecutor extends BuildInfoProcessRunner {\n    private final ArtifactoryServer server;\n\n    private final String kanikoImageFile;\n\n    private final String jibImageFile;\n\n    private final String sourceRepo;\n\n    public CreateDockerBuildExecutor(ArtifactoryServer pipelineServer, BuildInfo buildInfo, Run<?, ?> build, String kanikoImageFile, String jibImageFile, String sourceRepo, String javaArgs, Launcher launcher, TaskListener listener, FilePath ws, EnvVars envVars) {\n        super(buildInfo, launcher, javaArgs, ws, \"\", \"\", envVars, listener, build);\n        this.kanikoImageFile = kanikoImageFile;\n        this.jibImageFile = jibImageFile;\n        this.sourceRepo = sourceRepo;\n        this.server = pipelineServer;\n    }\n\n    public void execute() throws Exception {\n        if (server == null) {\n            throw new IllegalStateException(\"Artifactory server must be configured\");\n        }\n        if (StringUtils.isAllBlank(kanikoImageFile, jibImageFile) || StringUtils.isNoneBlank(kanikoImageFile, jibImageFile)) {\n            throw new IllegalStateException(\"Exactly one of 'kanikoImageFile' or 'jibImageFile' must be configured\");\n        }\n        CommonDeployer deployer = new CommonDeployer();\n        deployer.setServer(server);\n        deployer.setRepo(sourceRepo);\n        FilePath tempDir = ExtractorUtils.createAndGetTempDir(ws);\n        EnvExtractor envExtractor = new CreateDockerBuildEnvExtractor(build, buildInfo, deployer, listener, launcher, tempDir, env, kanikoImageFile, jibImageFile);\n        super.execute(\"Create Docker Build\", \"org.jfrog.build.extractor.docker.extractor.BuildDockerCreator\", envExtractor, tempDir);\n    }\n}",
    "qualified_in_class_code": "public class CreateDockerBuildExecutor extends org.jfrog.hudson.pipeline.common.executors.BuildInfoProcessRunner {\n    private final org.jfrog.hudson.pipeline.common.types.ArtifactoryServer server;\n\n    private final java.lang.String kanikoImageFile;\n\n    private final java.lang.String jibImageFile;\n\n    private final java.lang.String sourceRepo;\n\n    public CreateDockerBuildExecutor(org.jfrog.hudson.pipeline.common.types.ArtifactoryServer pipelineServer, org.jfrog.hudson.pipeline.common.types.buildInfo.BuildInfo buildInfo, hudson.model.Run<?, ?> build, java.lang.String kanikoImageFile, java.lang.String jibImageFile, java.lang.String sourceRepo, java.lang.String javaArgs, hudson.Launcher launcher, hudson.model.TaskListener listener, hudson.FilePath ws, hudson.EnvVars envVars) {\n        super(buildInfo, launcher, javaArgs, ws, \"\", \"\", envVars, listener, build);\n        this.kanikoImageFile = kanikoImageFile;\n        this.jibImageFile = jibImageFile;\n        this.sourceRepo = sourceRepo;\n        this.server = pipelineServer;\n    }\n\n    public void execute() throws java.lang.Exception {\n        if (server == null) {\n            throw new java.lang.IllegalStateException(\"Artifactory server must be configured\");\n        }\n        if (org.apache.commons.lang3.StringUtils.isAllBlank(kanikoImageFile, jibImageFile) || org.apache.commons.lang3.StringUtils.isNoneBlank(kanikoImageFile, jibImageFile)) {\n            throw new java.lang.IllegalStateException(\"Exactly one of 'kanikoImageFile' or 'jibImageFile' must be configured\");\n        }\n        org.jfrog.hudson.pipeline.common.types.deployers.CommonDeployer deployer = new org.jfrog.hudson.pipeline.common.types.deployers.CommonDeployer();\n        deployer.setServer(server);\n        deployer.setRepo(sourceRepo);\n        hudson.FilePath tempDir = org.jfrog.hudson.util.ExtractorUtils.createAndGetTempDir(ws);\n        org.jfrog.hudson.pipeline.common.executors.EnvExtractor envExtractor = new org.jfrog.hudson.pipeline.common.executors.CreateDockerBuildEnvExtractor(build, buildInfo, deployer, listener, launcher, tempDir, env, kanikoImageFile, jibImageFile);\n        super.execute(\"Create Docker Build\", \"org.jfrog.build.extractor.docker.extractor.BuildDockerCreator\", envExtractor, tempDir);\n    }\n}",
    "plausible_dependency_identifier": null,
    "error_info": {
        "py/object": "pipeline.types.error_info.ErrorInfo",
        "additional_info": "  symbol:   method isAllBlank(java.lang.String,java.lang.String)\n  location: class org.apache.commons.lang3.StringUtils\n",
        "error_message": "[ERROR] /artifactory-plugin/src/main/java/org/jfrog/hudson/pipeline/common/executors/CreateDockerBuildExecutor.java:[34,24] cannot find symbol",
        "client_file_path": "/artifactory-plugin/src/main/java/org/jfrog/hudson/pipeline/common/executors/CreateDockerBuildExecutor.java",
        "client_line_position": "34"
    },
    "client_end_line_number": 43,
    "client_line_number": 30,
    "method_code": "public void execute() throws Exception {\n        if (server == null) {\n            throw new IllegalStateException(\"Artifactory server must be configured\");\n        }\n        if (StringUtils.isAllBlank(kanikoImageFile, jibImageFile) || StringUtils.isNoneBlank(kanikoImageFile, jibImageFile)) {\n            throw new IllegalStateException(\"Exactly one of 'kanikoImageFile' or 'jibImageFile' must be configured\");\n        }\n        CommonDeployer deployer = new CommonDeployer();\n        deployer.setServer(server);\n        deployer.setRepo(sourceRepo);\n        FilePath tempDir = ExtractorUtils.createAndGetTempDir(ws);\n        EnvExtractor envExtractor = new CreateDockerBuildEnvExtractor(build, buildInfo, deployer, listener, launcher, tempDir, env, kanikoImageFile, jibImageFile);\n        super.execute(\"Create Docker Build\", \"org.jfrog.build.extractor.docker.extractor.BuildDockerCreator\", envExtractor, tempDir);\n    }",
    "qualified_code": "public void execute() throws java.lang.Exception {\n    if (server == null) {\n        throw new java.lang.IllegalStateException(\"Artifactory server must be configured\");\n    }\n    if (org.apache.commons.lang3.StringUtils.isAllBlank(kanikoImageFile, jibImageFile) || org.apache.commons.lang3.StringUtils.isNoneBlank(kanikoImageFile, jibImageFile)) {\n        throw new java.lang.IllegalStateException(\"Exactly one of 'kanikoImageFile' or 'jibImageFile' must be configured\");\n    }\n    org.jfrog.hudson.pipeline.common.types.deployers.CommonDeployer deployer = new org.jfrog.hudson.pipeline.common.types.deployers.CommonDeployer();\n    deployer.setServer(server);\n    deployer.setRepo(sourceRepo);\n    hudson.FilePath tempDir = org.jfrog.hudson.util.ExtractorUtils.createAndGetTempDir(ws);\n    org.jfrog.hudson.pipeline.common.executors.EnvExtractor envExtractor = new org.jfrog.hudson.pipeline.common.executors.CreateDockerBuildEnvExtractor(build, buildInfo, deployer, listener, launcher, tempDir, env, kanikoImageFile, jibImageFile);\n    super.execute(\"Create Docker Build\", \"org.jfrog.build.extractor.docker.extractor.BuildDockerCreator\", envExtractor, tempDir);\n}",
    "method_name": "execute"
}