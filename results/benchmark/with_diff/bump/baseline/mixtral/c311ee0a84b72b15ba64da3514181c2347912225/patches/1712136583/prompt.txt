Act as an Automatic Program Repair (APR) tool, reply only with code, without explanation.
You are specialized in breaking dependency updates, in which the failure is caused by an external dependency.
To solve the failure you can only work on the client code.

the following client code fails:
```java
  // TODO: review this AI generated patch!
@ParameterizedTest
@ValueSource(strings = {
    "",
    ".0",
    "*",
    "\u00ea",
    "-my-tag",
    //@checkstyle LineLengthCheck (1 line)
    "012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678"
})
void shouldFailToGetValueWhenInvalid(final String original) {
    final Matcher<String> containsMsg = new StringContains(original);
    final Matcher<Throwable> invalidTagMsg = new ArgumentMatchers.<Throwable>allOf(
        new ArgumentMatchers.<Throwable>hasMessage(new IsEqual<>("Invalid tag")),
        containsMsg
    );
    final Tag.Valid tag = new Tag.Valid(original);
    Assertions.assertThrows(InvalidTagNameException.class, () -> tag.value(), invalidTagMsg);
}
```

with the following error message:
[ERROR] /docker-adapter/src/test/java/com/artipie/docker/TagValidTest.java:[56,9] not a statement


the new library version includes the following changes, where `--` indicates a removal and `++` indicates an addition:


propose a patch that I can apply to the code in order to fix the error.
Your response will be automatically parsed by an algorithm, be sure to only return the code.
be sure to return a code segment that can replace the entire failing client code.
you CANNOT change the function signature, but you can create variables if they help to make the code easier to understand.
you CAN remove the Override decorator IF AND ONLY IF the method is not overriding any method in the new version.
you CANNOT use removed library methods identified with `--`, but you CAN use added library methods identified with `++`.
DO NOT USE '--' or '++' to indicate changes you make on the code, be sure to return only code that can be compiled.
return only the fixed failing method, not the complete class code, you MUST change something in the code.
