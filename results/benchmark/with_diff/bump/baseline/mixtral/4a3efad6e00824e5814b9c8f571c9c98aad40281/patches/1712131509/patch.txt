import eu.europa.esig.dss.pades.PadesSigner;
import eu.europa.esig.dss.pades.PadesSigningLevel;
import eu.europa.esig.dss.pades.PadesSigningCertificateSource;
import eu.europa.esig.dss.pades.PadesSigningCertificate;
import eu.europa.esig.dss.pades.PadesExternalSigningSupport;
import eu.europa.esig.dss.pades.PadesCertificationLevel;
import eu.europa.esig.dss.pades.PadesMode;
import eu.europa.esig.dss.model.DSSDocument;
import eu.europa.esig.dss.model.DSSPrivateKey;
import eu.europa.esig.dss.model.InMemoryKeyStore;
import eu.europa.esig.dss.enumerations.DigestAlgorithm;
import eu.europa.esig.dss.token.DSSPrivateKeyEntry;
import eu.europa.esig.dss.validation.CommonCertificateVerifier;
import eu.europa.esig.dss.validation.CertificateVerifier;
import eu.europa.esig.dss.validation.Processable;
import java.io.InputStream;
import java.security.KeyStore;
import java.security.cert.X509Certificate;
import java.util.List;

//...

private void signPdf(String inputFilePath, String outputFilePath, String certificateAlias, String certificatePassword) throws Exception {
    //...

    // Create a PAdES signer
    PadesSigner signer = new PadesSigner(padesSigningCertificateSource);

    // Configure the signer
    signer.setSigningCertificate(padesSigningCertificate);
    signer.setSigningCertificateChain(padesSigningCertificateChain);
    signer.setSigningCertificateSource(padesSigningCertificateSource);
    signer.setPadesMode(PadesMode.CMS);
    signer.setSigningDate(new Date());
    signer.setDigestAlgorithm(DigestAlgorithm.SHA256);
    signer.setTspSource(tspSource);
    signer.setCertificationLevel(PadesCertificationLevel.CERTIFIED_COMPLETE);
    signer.setSigningCertificateTimeStampToken(timeStampToken);

    // Create an input stream for the document to be signed
    InputStream documentToSignInputStream = new FileInputStream(inputFilePath);
    DSSDocument documentToSign = new DSSDocument(documentToSignInputStream);

    // Sign the document
    DSSDocument signedDocument = signer.sign(documentToSign);

    // Save the signed document
    OutputStream outputStream = new FileOutputStream(outputFilePath);
    signedDocument.getFirst().writeTo(outputStream);
    outputStream.close();
}