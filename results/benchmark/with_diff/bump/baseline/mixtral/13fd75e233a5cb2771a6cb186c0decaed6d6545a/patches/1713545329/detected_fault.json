{
    "py/object": "pipeline.types.detected_fault.DetectedFault",
    "identifier": 1961173763,
    "in_class_code": "/**\n * Matcher for errors response.\n *\n * @since 0.5\n * @checkstyle ClassDataAbstractionCouplingCheck (500 lines)\n */\npublic final class IsErrorsResponse extends BaseMatcher<Response> {\n    /**\n     * Delegate matcher.\n     */\n    private final Matcher<Response> delegate;\n\n    /**\n     * Ctor.\n     *\n     * @param status\n     * \t\tExpected response status code.\n     * @param code\n     * \t\tExpected error code.\n     */\n    public IsErrorsResponse(final RsStatus status, final String code) {\n        this.delegate = new AllOf<>(Arrays.asList(new RsHasStatus(status), new RsHasHeaders(Matchers.containsInRelativeOrder(new Header(\"Content-Type\", \"application/json; charset=utf-8\"))), new RsHasBody(new IsJson(new JsonHas(\"errors\", new JsonContains(new IsError(code)))))));\n    }\n\n    @Override\n    public boolean matches(final Object actual) {\n        return this.delegate.matches(actual);\n    }\n\n    /**\n     * Matcher for bytes array representing JSON.\n     *\n     * @since 0.5\n     */\n    private static class IsJson extends TypeSafeMatcher<byte[]> {\n        /**\n         * Matcher for JSON.\n         */\n        private final Matcher<? extends JsonValue> json;\n\n        /**\n         * Ctor.\n         *\n         * @param json\n         * \t\tMatcher for parsed JSON.\n         */\n        IsJson(final Matcher<? extends JsonValue> json) {\n            this.json = json;\n        }\n\n        @Override\n        public void describeTo(final Description description) {\n            description.appendText(\"JSON \").appendDescriptionOf(this.json);\n        }\n\n        @Override\n        public boolean matchesSafely(final byte[] bytes) {\n            final JsonObject root;\n            try (JsonReader reader = Json.createReader(new ByteArrayInputStream(bytes))) {\n                root = reader.readObject();\n            }\n            return this.json.matches(root);\n        }\n    }\n\n    /**\n     * Matcher for JSON object representing error.\n     *\n     * @since 0.5\n     */\n    private static class IsError extends BaseMatcher<JsonObject> {\n        /**\n         * Expected code.\n         */\n        private final Matcher<JsonObject> delegate;\n\n        /**\n         * Ctor.\n         *\n         * @param code\n         * \t\tExpected error code.\n         */\n        IsError(final String code) {\n            this.delegate = new AllOf<>(Arrays.asList(new JsonHas(\"code\", new JsonValueIs(code)), new JsonHas(\"message\", new JsonValueIs(new IsNot<>(IsEmptyString.emptyString())))));\n        }\n\n        @Override\n        public void describeTo(final Description description) {\n            this.delegate.describeTo(description);\n        }\n\n        @Override\n        public boolean matches(final Object item) {\n            return this.delegate.matches(item);\n        }\n    }\n}",
    "qualified_in_class_code": "/**\n * Matcher for errors response.\n *\n * @since 0.5\n * @checkstyle ClassDataAbstractionCouplingCheck (500 lines)\n */\npublic final class IsErrorsResponse extends org.hamcrest.BaseMatcher<com.artipie.http.Response> {\n    /**\n     * Delegate matcher.\n     */\n    private final org.hamcrest.Matcher<com.artipie.http.Response> delegate;\n\n    /**\n     * Ctor.\n     *\n     * @param status\n     * \t\tExpected response status code.\n     * @param code\n     * \t\tExpected error code.\n     */\n    public IsErrorsResponse(final com.artipie.http.rs.RsStatus status, final java.lang.String code) {\n        this.delegate = new org.hamcrest.core.AllOf<>(java.util.Arrays.asList(new com.artipie.http.hm.RsHasStatus(status), new com.artipie.http.hm.RsHasHeaders(org.hamcrest.Matchers.containsInRelativeOrder(new com.artipie.http.headers.Header(\"Content-Type\", \"application/json; charset=utf-8\"))), new com.artipie.http.hm.RsHasBody(new com.artipie.docker.http.IsErrorsResponse.IsJson(new wtf.g4s8.hamcrest.json.JsonHas(\"errors\", new wtf.g4s8.hamcrest.json.JsonContains(new com.artipie.docker.http.IsErrorsResponse.IsError(code)))))));\n    }\n\n    @java.lang.Override\n    public boolean matches(final java.lang.Object actual) {\n        return this.delegate.matches(actual);\n    }\n\n    /**\n     * Matcher for bytes array representing JSON.\n     *\n     * @since 0.5\n     */\n    private static class IsJson extends org.hamcrest.TypeSafeMatcher<byte[]> {\n        /**\n         * Matcher for JSON.\n         */\n        private final org.hamcrest.Matcher<? extends javax.json.JsonValue> json;\n\n        /**\n         * Ctor.\n         *\n         * @param json\n         * \t\tMatcher for parsed JSON.\n         */\n        IsJson(final org.hamcrest.Matcher<? extends javax.json.JsonValue> json) {\n            this.json = json;\n        }\n\n        @java.lang.Override\n        public void describeTo(final org.hamcrest.Description description) {\n            description.appendText(\"JSON \").appendDescriptionOf(this.json);\n        }\n\n        @java.lang.Override\n        public boolean matchesSafely(final byte[] bytes) {\n            final javax.json.JsonObject root;\n            try (javax.json.JsonReader reader = javax.json.Json.createReader(new java.io.ByteArrayInputStream(bytes))) {\n                root = reader.readObject();\n            }\n            return this.json.matches(root);\n        }\n    }\n\n    /**\n     * Matcher for JSON object representing error.\n     *\n     * @since 0.5\n     */\n    private static class IsError extends org.hamcrest.BaseMatcher<javax.json.JsonObject> {\n        /**\n         * Expected code.\n         */\n        private final org.hamcrest.Matcher<javax.json.JsonObject> delegate;\n\n        /**\n         * Ctor.\n         *\n         * @param code\n         * \t\tExpected error code.\n         */\n        IsError(final java.lang.String code) {\n            this.delegate = new org.hamcrest.core.AllOf<>(java.util.Arrays.asList(new wtf.g4s8.hamcrest.json.JsonHas(\"code\", new wtf.g4s8.hamcrest.json.JsonValueIs(code)), new wtf.g4s8.hamcrest.json.JsonHas(\"message\", new wtf.g4s8.hamcrest.json.JsonValueIs(new org.hamcrest.core.IsNot<>(org.hamcrest.text.IsEmptyString.emptyString())))));\n        }\n\n        @java.lang.Override\n        public void describeTo(final org.hamcrest.Description description) {\n            this.delegate.describeTo(description);\n        }\n\n        @java.lang.Override\n        public boolean matches(final java.lang.Object item) {\n            return this.delegate.matches(item);\n        }\n    }\n}",
    "plausible_dependency_identifier": null,
    "error_info": {
        "py/object": "pipeline.types.error_info.ErrorInfo",
        "additional_info": "  symbol:   class Object\n  location: class com.artipie.docker.http.IsErrorsResponse\n",
        "error_message": "[ERROR] /docker-adapter/src/test/java/com/artipie/docker/http/IsErrorsResponse.java:[72,34] cannot find symbol",
        "client_file_path": "/docker-adapter/src/test/java/com/artipie/docker/http/IsErrorsResponse.java",
        "client_line_position": "72"
    },
    "client_end_line_number": 74,
    "client_line_number": 71,
    "method_code": "@Override\n    public boolean matches(final Object actual) {\n        return this.delegate.matches(actual);\n    }",
    "qualified_code": "@java.lang.Override\npublic boolean matches(final java.lang.Object actual) {\n    return this.delegate.matches(actual);\n}",
    "method_name": "matches"
}