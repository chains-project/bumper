{
    "py/object": "pipeline.types.detected_fault.DetectedFault",
    "identifier": 1741979653,
    "in_class_code": "@Configuration\npublic class GeoStorePasswordEncoderConfig {\n    @Bean\n    public PasswordEncoder passwordEncoder() {\n        PasswordEncoder passwordEncoder = new PasswordEncoder() {\n            private final TextEncryptor textEncryptor;\n\n            private final PasswordEncryptor passwordEncryptor;\n\n            public 1(TextEncryptor textEncryptor, PasswordEncryptor passwordEncryptor) {\n                this.textEncryptor = textEncryptor;\n                this.passwordEncryptor = passwordEncryptor;\n            }\n\n            @Override\n            public String encode(CharSequence rawPassword) {\n                return passwordEncryptor.encryptPassword(rawPassword.toString());\n            }\n\n            @Override\n            public boolean matches(CharSequence rawPassword, String encodedPassword) {\n                return passwordEncryptor.checkPassword(rawPassword.toString(), encodedPassword);\n            }\n        };\n        return passwordEncoder;\n    }\n}",
    "qualified_in_class_code": "@org.springframework.context.annotation.Configuration\npublic class GeoStorePasswordEncoderConfig {\n    @org.springframework.context.annotation.Bean\n    public org.acegisecurity.providers.encoding.PasswordEncoder passwordEncoder() {\n        org.acegisecurity.providers.encoding.PasswordEncoder passwordEncoder = new org.acegisecurity.providers.encoding.PasswordEncoder() {\n            private final org.jasypt.util.text.TextEncryptor textEncryptor;\n\n            private final org.jasypt.util.password.PasswordEncryptor passwordEncryptor;\n\n            public 1(org.jasypt.util.text.TextEncryptor textEncryptor, org.jasypt.util.password.PasswordEncryptor passwordEncryptor) {\n                this.textEncryptor = textEncryptor;\n                this.passwordEncryptor = passwordEncryptor;\n            }\n\n            @java.lang.Override\n            public java.lang.String encode(java.lang.CharSequence rawPassword) {\n                return passwordEncryptor.encryptPassword(rawPassword.toString());\n            }\n\n            @java.lang.Override\n            public boolean matches(java.lang.CharSequence rawPassword, java.lang.String encodedPassword) {\n                return passwordEncryptor.checkPassword(rawPassword.toString(), encodedPassword);\n            }\n        };\n        return passwordEncoder;\n    }\n}",
    "plausible_dependency_identifier": null,
    "error_info": {
        "py/object": "pipeline.types.error_info.ErrorInfo",
        "additional_info": "",
        "error_message": "[ERROR] /geostore/src/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStorePBEPasswordEncoder.java:[65,19] error: invalid method declaration; return type required",
        "client_file_path": "/geostore/src/core/security/src/main/java/it/geosolutions/geostore/core/security/password/GeoStorePBEPasswordEncoder.java",
        "client_line_position": "65"
    },
    "client_end_line_number": 82,
    "client_line_number": 59,
    "method_code": "@Bean\n    public PasswordEncoder passwordEncoder() {\n        PasswordEncoder passwordEncoder = new PasswordEncoder() {\n            private final TextEncryptor textEncryptor;\n            private final PasswordEncryptor passwordEncryptor;\n\n            public PasswordEncoder(TextEncryptor textEncryptor, PasswordEncryptor passwordEncryptor) {\n                this.textEncryptor = textEncryptor;\n                this.passwordEncryptor = passwordEncryptor;\n            }\n\n            @Override\n            public String encode(CharSequence rawPassword) {\n                return passwordEncryptor.encryptPassword(rawPassword.toString());\n            }\n\n            @Override\n            public boolean matches(CharSequence rawPassword, String encodedPassword) {\n                return passwordEncryptor.checkPassword(rawPassword.toString(), encodedPassword);\n            }\n        };\n\n        return passwordEncoder;\n    }",
    "qualified_code": "@org.springframework.context.annotation.Bean\npublic org.acegisecurity.providers.encoding.PasswordEncoder passwordEncoder() {\n    org.acegisecurity.providers.encoding.PasswordEncoder passwordEncoder = new org.acegisecurity.providers.encoding.PasswordEncoder() {\n        private final org.jasypt.util.text.TextEncryptor textEncryptor;\n\n        private final org.jasypt.util.password.PasswordEncryptor passwordEncryptor;\n\n        public 1(org.jasypt.util.text.TextEncryptor textEncryptor, org.jasypt.util.password.PasswordEncryptor passwordEncryptor) {\n            this.textEncryptor = textEncryptor;\n            this.passwordEncryptor = passwordEncryptor;\n        }\n\n        @java.lang.Override\n        public java.lang.String encode(java.lang.CharSequence rawPassword) {\n            return passwordEncryptor.encryptPassword(rawPassword.toString());\n        }\n\n        @java.lang.Override\n        public boolean matches(java.lang.CharSequence rawPassword, java.lang.String encodedPassword) {\n            return passwordEncryptor.checkPassword(rawPassword.toString(), encodedPassword);\n        }\n    };\n    return passwordEncoder;\n}",
    "method_name": "passwordEncoder"
}