7,14c7,11
<     blobs.put(new com.artipie.docker.asto.CheckedBlobSource(new com.artipie.asto.Content.From("data".getBytes()), new com.artipie.docker.Digest.Sha256(digest))).toCompletableFuture().handle(( blob, throwable) -> {
<         org.hamcrest.MatcherAssert.assertThat("Exception thrown", throwable, new com.artipie.docker.asto.IsNot<>(new com.artipie.docker.asto.IsNull<>()));
<         org.hamcrest.MatcherAssert.assertThat("Exception is InvalidDigestException", com.google.common.base.Throwables.getRootCause(throwable), new org.hamcrest.core.IsInstanceOf(com.artipie.docker.error.InvalidDigestException.class));
<         org.hamcrest.MatcherAssert.assertThat("Exception message contains calculated digest", com.google.common.base.Throwables.getRootCause(throwable).getMessage(), new org.hamcrest.core.StringContains(true, "3a6eb0790f39ac87c94f3856b2dd2c5d110e6811602261a9a923d3bb23adc8b7"));
<         final ++java.util.function.Predicate<java.lang.String> predicate = string -> string.contains(digest);
<         org.hamcrest.MatcherAssert.assertThat("Exception message contains expected digest", com.google.common.base.Throwables.getRootCause(throwable).getMessage(), predicate);
<         return java.util.concurrent.CompletableFuture.allOf();
<     }).join();
---
>     final java.util.Optional<java.lang.String> actual = blobs.exists(com.artipie.docker.Digest.valueOf(digest));
>     org.hamcrest.MatcherAssert.assertThat("Exception thrown", actual, new org.hamcrest.core.IsNot<>(new com.artipie.docker.asto.IsNull<>()));
>     org.hamcrest.MatcherAssert.assertThat("Exception is InvalidDigestException", actual, new org.hamcrest.core.IsInstanceOf(java.lang.String.class));
>     org.hamcrest.MatcherAssert.assertThat("Exception message contains calculated digest", actual.get(), new org.hamcrest.core.StringContains(true, "3a6eb0790f39ac87c94f3856b2dd2c5d110e6811602261a9a923d3bb23adc8b7"));
>     final java.util.function.Predicate<java.lang.String> predicate = (java.lang.String string) -> string.contains(digest);
