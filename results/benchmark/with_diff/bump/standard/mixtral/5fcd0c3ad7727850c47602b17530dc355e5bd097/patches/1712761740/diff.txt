1,4c1,14
< private MutationTestSummaryData createSummaryData(
<       final CoverageDatabase coverage, final ClassMutationResults data) {
<     return new MutationTestSummaryData(data.getFileName(),
<         data.getMutations(), coverage.getClassInfo(Collections.singleton(data.getMutatedClass())));
---
> import org.pitest.classinfo.ClassInfo;
> import org.pitest.classinfo.ClassInfoBuilder;
> import org.pitest.classinfo.ClassName;
> import java.util.Set;
> import java.util.stream.Collectors;
> 
> private org.pitest.elements.models.MutationTestSummaryData createSummaryData(final org.pitest.coverage.CoverageDatabase coverage, final org.pitest.mutationtest.ClassMutationResults data) {
>     Set<ClassName> classNames = java.util.Collections.singleton(data.getMutatedClass());
>     byte[] emptyByteArray = new byte[0];
>     long zero = 0;
>     Set<ClassInfo> classInfos = classNames.stream()
>         .map(name -> ClassInfoBuilder.forClass(name).withByteCode(emptyByteArray).withExecutionCount(zero).build())
>         .collect(Collectors.toSet());
>     return new org.pitest.elements.models.MutationTestSummaryData(data.getFileName(), data.getMutations(), classInfos);
