0a1,16
> import static org.hamcrest.MatcherAssert.assertThat;
> import static org.hamcrest.Matchers.instanceOf;
> import static org.hamcrest.Matchers.not;
> import static org.hamcrest.Matchers.nullValue;
> import java.nio.charset.StandardCharsets;
> import java.util.concurrent.CompletableFuture;
> import org.junit.jupiter.api.Test;
> import com.artipie.asto.Content;
> import com.artipie.asto.MemoryStorage;
> import com.artipie.asto.ext.Key;
> import com.artipie.docker.asto.AstoBlobs;
> import com.artipie.docker.asto.CheckedBlobSource;
> import com.artipie.docker.Digest;
> import com.artipie.docker.error.InvalidDigestException;
> import com.google.common.base.Throwables;
> 
3c19
<         final InMemoryStorage storage = new InMemoryStorage();
---
>     final MemoryStorage storage = new MemoryStorage();
5c21,23
<             storage, new DefaultLayout(), new RepoName.Simple("any")
---
>         storage,
>         new DefaultLayout(),
>         new RepoName.Simple("any")
9,12c27,33
<             new CheckedBlobSource(new Content.From("data".getBytes()), new Digest.Sha256(digest))
<         ).toCompletableFuture().handle(
<             (blob, throwable) -> {
<                 MatcherAssert.assertThat(
---
>         new CheckedBlobSource(
>             new Content.From("data".getBytes(StandardCharsets.UTF_8)),
>             new Digest.Sha256(digest)
>         )
>     ).thenAccept(
>         blob -> {
>             assertThat(
14,15c35,36
<                     throwable,
<                     new IsNot<>(new IsNull<>())
---
>                 Throwables.getRootCause(blob),
>                 not(nullValue())
17c38
<                 MatcherAssert.assertThat(
---
>             assertThat(
19,20c40,41
<                     Throwables.getRootCause(throwable),
<                     new IsInstanceOf(InvalidDigestException.class)
---
>                 Throwables.getRootCause(blob),
>                 instanceOf(InvalidDigestException.class)
22c43,44
<                 MatcherAssert.assertThat(
---
>             final InvalidDigestException exception = (InvalidDigestException) Throwables.getRootCause(blob);
>             assertThat(
24,28c46,47
<                     Throwables.getRootCause(throwable).getMessage(),
<                     new StringContains(
<                         true,
<                         "3a6eb0790f39ac87c94f3856b2dd2c5d110e6811602261a9a923d3bb23adc8b7"
<                     )
---
>                 exception.message(),
>                 new StringContains("3a6eb0790f39ac87c94f3856b2dd2c5d110e6811602261a9a923d3bb23adc8b7")
30c49
<                 MatcherAssert.assertThat(
---
>             assertThat(
32,33c51,52
<                     Throwables.getRootCause(throwable).getMessage(),
<                     new StringContains(true, digest)
---
>                 exception.message(),
>                 new StringContains(digest)
35d53
<                 return CompletableFuture.allOf();
