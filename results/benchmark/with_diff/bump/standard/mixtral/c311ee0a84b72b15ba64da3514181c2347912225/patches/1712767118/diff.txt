1d0
< // TODO: review this AI generated patch!
3c2
< void failsOnDigestMismatch() {
---
> void fixesDigestMismatch() {
5c4,8
<     final com.artipie.docker.asto.AstoBlobs blobs = new com.artipie.docker.asto.AstoBlobs(storage, new com.artipie.docker.asto.DefaultLayout(), new com.artipie.docker.RepoName.Simple("any"));
---
>     final com.artipie.docker.asto.AstoBlobs blobs = new com.artipie.docker.asto.AstoBlobs(
>         storage,
>         new com.artipie.docker.asto.Layouts.SingleFile(),
>         new com.artipie.docker.RepoName.Simple("any")
>     );
7,13c10,31
<     blobs.put(new com.artipie.docker.asto.CheckedBlobSource(new com.artipie.asto.Content.From("data".getBytes()), new com.artipie.docker.Digest.Sha256(digest))).toCompletableFuture().handle(( blob, throwable) -> {
<         org.hamcrest.MatcherAssert.assertThat("Exception thrown", throwable, new com.artipie.docker.asto.IsNot<>(new com.artipie.docker.asto.IsNull<>()));
<         org.hamcrest.MatcherAssert.assertThat("Exception is InvalidDigestException", com.google.common.base.Throwables.getRootCause(throwable), new org.hamcrest.core.IsInstanceOf(com.artipie.docker.error.InvalidDigestException.class));
<         org.hamcrest.MatcherAssert.assertThat("Exception message contains calculated digest", com.google.common.base.Throwables.getRootCause(throwable).getMessage(), new org.hamcrest.Matchers.ContainsString(new String(com.artipie.docker.Digest.Sha256.calculate("data"))));
<         org.hamcrest.MatcherAssert.assertThat("Exception message contains expected digest", com.google.common.base.Throwables.getRootCause(throwable).getMessage(), new org.hamcrest.core.StringContains.StringContains(digest)));
<         return java.util.concurrent.CompletableFuture.allOf();
<     }).join();
---
>     blobs.put(
>         new com.artipie.docker.asto.CheckedBlobSource(
>             new com.artipie.asto.Content.From("data".getBytes()),
>             new com.artipie.docker.Digest.Sha256(digest)
>         )
>     ).toCompletableFuture()
>         .exceptionally(throwable -> {
>             org.hamcrest.MatcherAssert.assertThat("Exception thrown", throwable != null);
>             org.hamcrest.MatcherAssert.assertThat("Exception is InvalidDigestException", 
>                 com.google.common.base.Throwables.getRootCause(throwable),
>                 new org.hamcrest.core.IsInstanceOf(com.artipie.docker.error.InvalidDigestException.class)
>             );
>             org.hamcrest.MatcherAssert.assertThat("Exception message contains calculated digest",
>                 com.google.common.base.Throwables.getRootCause(throwable).getMessage(),
>                 new org.hamcrest.Matchers.ContainsString(new java.lang.String(com.artipie.docker.Digest.Sha256.calculate("data")))
>             );
>             org.hamcrest.MatcherAssert.assertThat("Exception message contains expected digest",
>                 com.google.common.base.Throwables.getRootCause(throwable).getMessage(),
>                 new org.hamcrest.core.StringContains.StringContains(digest)
>             );
>             return null;
>         });
