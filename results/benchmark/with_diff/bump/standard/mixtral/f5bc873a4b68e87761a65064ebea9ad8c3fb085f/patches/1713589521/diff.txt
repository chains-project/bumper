1a2,30
> import org.apache.maven.project.ProjectBuilder;
> import org.apache.maven.project.ProjectConfigurator;
> import org.apache.maven.project.ProjectBuildingException;
> 
> // ...
> 
> @Override
> protected MavenProject getMavenProject() throws MojoExecutionException {
>     try {
>         ProjectBuilder projectBuilder = (ProjectBuilder) lookup(ProjectBuilder.ROLE);
>         ModelBuildingRequest modelBuildingRequest = new DefaultModelBuildingRequest();
>         modelBuildingRequest.setPomFile(getPom());
>         modelBuildingRequest.setValidationLevel(ModelValidationLevel.MINIMAL);
>         ModelBuildingResult modelBuildingResult = projectBuilder.build(modelBuildingRequest);
>         Model model = modelBuildingResult.getModel();
> 
>         ProjectConfigurator projectConfigurator = (ProjectConfigurator) lookup(ProjectConfigurator.ROLE);
>         ProjectBuildingRequest buildingRequest = new DefaultProjectBuildingRequest();
>         buildingRequest.setValidationLevel(ModelValidationLevel.MINIMAL);
>         buildingRequest.setRemoteProjectRepositories(getRemoteRepositories());
>         buildingRequest.setPluginRepositories(getPluginRepositories());
>         buildingRequest.setSystemProperties(getSystemProperties());
>         buildingRequest.setAttribute(ProjectBuildingRequest.USE_PLUGIN_CLASSLOADER, Boolean.TRUE);
> 
>         return projectConfigurator.configureProject(model, buildingRequest);
>     } catch (ProjectBuildingException e) {
>         throw new MojoExecutionException("Failed to build project: " + e.getMessage(), e);
>     }
> }
\ No newline at end of file
