{
    "py/object": "pipeline.types.detected_fault.DetectedFault",
    "identifier": 2044215423,
    "in_class_code": "public static class Execution extends ArtifactorySynchronousStepExecution<Void> {\n    protected static final long serialVersionUID = 1L;\n\n    private final transient CreateJFrogInstanceStep step;\n\n    @Inject\n    public Execution(CreateJFrogInstanceStep step, StepContext context) throws IOException, InterruptedException {\n        super(context);\n        this.step = step;\n    }\n\n    // TODO: review this AI generated patch!\n    private void checkInputs(JFrogPlatformInstance server) throws IOException {\n        if (isAllBlank(server.getUrl() != null ? server.getUrl() : \"\", server.getArtifactory() != null ? server.getArtifactory().getUrl() : \"\", server.getDistribution() != null ? server.getDistribution().getUrl() : \"\", step.url != null ? step.url : \"\", step.artifactoryUrl != null ? step.artifactoryUrl : \"\", step.distributionUrl != null ? step.ditionalUrl : \"\")) {\n            throw new IOException(\"Server URL is missing\");\n        }\n        if (StringUtils.isNotBlank(step.credentialsId)) {\n            if (StringUtils.isNotBlank(step.username)) {\n                throw new IOException(\"'rtServer' step can't include both credentialsId and username\");\n            }\n            if (StringUtils.isNotBlank(step.password)) {\n                throw new IOException(\"'rtServer' step can't include both credentialsId and password\");\n            }\n        }\n    }\n}",
    "qualified_in_class_code": "public static class Execution extends org.jfrog.hudson.pipeline.ArtifactorySynchronousStepExecution<java.lang.Void> {\n    protected static final long serialVersionUID = 1L;\n\n    private final transient org.jfrog.hudson.pipeline.declarative.steps.CreateJFrogInstanceStep step;\n\n    @com.google.inject.Inject\n    public Execution(org.jfrog.hudson.pipeline.declarative.steps.CreateJFrogInstanceStep step, org.jenkinsci.plugins.workflow.steps.StepContext context) throws java.io.IOException, java.lang.InterruptedException {\n        super(context);\n        this.step = step;\n    }\n\n    // TODO: review this AI generated patch!\n    private void checkInputs(org.jfrog.hudson.pipeline.common.types.JFrogPlatformInstance server) throws java.io.IOException {\n        if (isAllBlank(server.getUrl() != null ? server.getUrl() : \"\", server.getArtifactory() != null ? server.getArtifactory().getUrl() : \"\", server.getDistribution() != null ? server.getDistribution().getUrl() : \"\", step.url != null ? step.url : \"\", step.artifactoryUrl != null ? step.artifactoryUrl : \"\", step.distributionUrl != null ? step.ditionalUrl : \"\")) {\n            throw new java.io.IOException(\"Server URL is missing\");\n        }\n        if (org.apache.commons.lang3.StringUtils.isNotBlank(step.credentialsId)) {\n            if (org.apache.commons.lang3.StringUtils.isNotBlank(step.username)) {\n                throw new java.io.IOException(\"'rtServer' step can't include both credentialsId and username\");\n            }\n            if (org.apache.commons.lang3.StringUtils.isNotBlank(step.password)) {\n                throw new java.io.IOException(\"'rtServer' step can't include both credentialsId and password\");\n            }\n        }\n    }\n}",
    "plausible_dependency_identifier": null,
    "error_info": {
        "py/object": "pipeline.types.error_info.ErrorInfo",
        "additional_info": "",
        "error_message": "[ERROR] /artifactory-plugin/src/main/java/org/jfrog/hudson/pipeline/declarative/steps/CreateJFrogInstanceStep.java:[145,1] illegal character: '`'",
        "client_file_path": "/artifactory-plugin/src/main/java/org/jfrog/hudson/pipeline/declarative/steps/CreateJFrogInstanceStep.java",
        "client_line_position": "145"
    },
    "client_end_line_number": 147,
    "client_line_number": 134,
    "method_code": "// TODO: review this AI generated patch!\nprivate void checkInputs(org.jfrog.hudson.pipeline.common.types.JFrogPlatformInstance server) throws java.io.IOException {\n    if (isAllBlank(server.getUrl() != null ? server.getUrl() : \"\", server.getArtifactory() != null ? server.getArtifactory().getUrl() : \"\", server.getDistribution() != null ? server.getDistribution().getUrl() : \"\", step.url != null ? step.url : \"\", step.artifactoryUrl != null ? step.artifactoryUrl : \"\", step.distributionUrl != null ? step.ditionalUrl : \"\")) {\n        throw new java.io.IOException(\"Server URL is missing\");\n    }\n    if (org.apache.commons.lang3.StringUtils.isNotBlank(step.credentialsId)) {\n        if (org.apache.commons.lang3.StringUtils.isNotBlank(step.username)) {\n            throw new java.io.IOException(\"'rtServer' step can't include both credentialsId and username\");\n        }\n        if (org.apache.commons.lang3.StringUtils.isNotBlank(step.password)) {\n            throw new java.io.IOException(\"'rtServer' step can't include both credentialsId and password\");\n`        }\n    }\n}",
    "qualified_code": "// TODO: review this AI generated patch!\nprivate void checkInputs(org.jfrog.hudson.pipeline.common.types.JFrogPlatformInstance server) throws java.io.IOException {\n    if (isAllBlank(server.getUrl() != null ? server.getUrl() : \"\", server.getArtifactory() != null ? server.getArtifactory().getUrl() : \"\", server.getDistribution() != null ? server.getDistribution().getUrl() : \"\", step.url != null ? step.url : \"\", step.artifactoryUrl != null ? step.artifactoryUrl : \"\", step.distributionUrl != null ? step.ditionalUrl : \"\")) {\n        throw new java.io.IOException(\"Server URL is missing\");\n    }\n    if (org.apache.commons.lang3.StringUtils.isNotBlank(step.credentialsId)) {\n        if (org.apache.commons.lang3.StringUtils.isNotBlank(step.username)) {\n            throw new java.io.IOException(\"'rtServer' step can't include both credentialsId and username\");\n        }\n        if (org.apache.commons.lang3.StringUtils.isNotBlank(step.password)) {\n            throw new java.io.IOException(\"'rtServer' step can't include both credentialsId and password\");\n        }\n    }\n}",
    "method_name": "checkInputs"
}