@org.junit.jupiter.api.Test
void fixesDigestMismatch() {
    final com.artipie.asto.memory.InMemoryStorage storage = new com.artipContent.From("data".getBytes()), new com.google.common.base.Supplier<java.nio.ByteBuffer>() {
        @Override
        public java.nio.ByteBuffer get() {
            return java.nio.ByteBuffer.wrap("data".getBytes());
        }
    });
    final java.lang.String digest = "123";
    blobs.put(new com.artipie.docker.asto.CheckedBlobSource(newContent.toCompletableFuture().handle(( blob, throwable) -> {
        org.hamcrest.MatcherAssert.assertThat("Exception thrown", throwable, new org.hamcrest.core.IsInstanceOf(com.artipie.docker.error.InvalidDigestException.class));
        org.hamcrest.MatcherAssert.assertThat("Exception message contains calculated digest", com.google.common.base.Throwables.getRootCause(throwable).getMessage(), new org.hamcrest.core.StringStartsWith(new org.hamcrest.core.StringValue(com.artipie.d    org.hamcrest.MatcherAssert.assertThat("Exception message contains expected digest", com.google.java.util.concurrent.CompletableFuture.allOf();
}