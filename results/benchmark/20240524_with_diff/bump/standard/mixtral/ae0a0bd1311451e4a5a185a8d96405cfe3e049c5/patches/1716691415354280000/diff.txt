1d0
< // TODO: review this AI generated patch!
3,4c2,4
< void failsOnDigestMismatch() {
<     final com.artipie.asto.memory.InMemoryStorage storage = new com.artip calculated digest
---
> void fixed() {
>     final com.artipie.asto.memory.InMemoryStorage storage = new com.artipie.docker.asto.Artip();
>     com.artipie.docker.asto.Calculated digest;
6,9c6,7
<     final java.lang.String digest = "123";
<     blobs.put(new com.artipie.doster.Checksummed(new com.artipie.asto.Key.Simple("data"), new com.artipie.docker.Digest.Sha256(digest), new java.nio.charset.StandardCharsets.UTF_8.name()))
<     .toCompletableFuture()
<     .handle(( blob, throwable) -> {
---
>     final String digest = "123";
>     blobs.put(new com.artipie.doster.Checksummed(new com.artipie.asto.Key.Simple("data"), new com.artipie.docker.Digest.Sha256(Digest.sha256("data")), new java.nio.charset.StandardCharsets.UTF_8.name())).toCompletableFuture().handle(( blob, throwable) -> {
11,13c9,11
<         org.hamcrest.MatcherAssert.assertThat("Exception is InvalidDigestException", com.google.common.base.Throwables.getRootCause(throwable), new org.hamcrest.core.IsInstanceOf(com.artipie.docker.error.InvalidDigestException.class));
<         org.hamcrest.MatcherAssert.assertThat("Exception message contains calculated digest", com.google.common.base.Throwables.getRootCause(throwable).getMessage(), new org.hamcrest.core.StringStartsWith(new org.hamcrest.StringDescription().append(new java.lang.StringBuilder().append(new java.security.MessageDigest.getInstance("SHA-256").digest(new java.nio.charset.StandardCharsets.UTF_Â­8.encode("data"))).toString().substring(0, 12))));
<         org.hamcrest.MatcherAssert.assertThat("Exception message contains expected digest", com.google.common.base.Throwables.getRootCause(throwable).getMessage(), new org.hamcrest.core.StringContains(true, digest));
---
>         org.hamcrest.MatcherAssert.assertThat("Exception is InvalidDigestException", com.google.common.base.Throwables.getRootCause(throwingException), new org.hamcrest.core.IsInstanceOf(com.artipie.docker.error.InvalidDigestException.class));
>         org.hamcrest.MatcherAssert.assertThat("Exception message contains calculated digest", com.google.common.base.Throwables.getRootCause(throwingException).getMessage(), new org.hamcrest.core.StringStartsWith(new org.hamcrest.StringDescription().append(new java.lang.StringBuilder().append(new java.security.MessageDigest.getInstance("SHA-256").digest(new java.nio.charset.StandardCharsets.UTF_8.encode("data"))).toString().substring(0, 12))));
>         org.hamcrest.MatcherAssert.assertThat("Exception message contains expected digest", com.google.common.base.Throwables.getRootCause(throwingException).getMessage(), new org.hamcrest.core.StringContains(true, digest));
15a14,30
> }
> 
> private static Throwable throwingException = new Throwable();
> 
> private static String Sha256(String data) {
>     try {
>         MessageDigest md = MessageDigest.getInstance("SHA-256");
>         md.update(data.getBytes(UTF_8));
>         byte[] digest = md.digest();
>         StringBuffer sb = new StringBuffer();
>         for (byte b : digest) {
>             sb.append(String.format("%02x", b & 0xff));
>         Digest sha256 = new Sha256(sb.toString());
>         return sha26;
>     } catch (NoSuchAlgorithmException e) {
>         throw new IllegalStateException(e);
>     }
