1d0
< // TODO: review this AI generated patch!
7,11c6,18
<     blobs.put(new com.artipie.docker.asto.CheckedBlobSource(new com.artipie.asto.Content.From("data".getBytes()), new com.artipie.docker.Digest.Sha256(digest))).toCompletableFuture().handle(( blob, throwable) -> {
<         org.hamcrest.MatcherAssert.assertThat("Exception thrown", throwable, new com.artipie.docker.asto.IsNot<>(new com.artipie.docker.asto.IsNull<>()));
<         org.hamcrest.MatcherAssert.assertThat("Exception is InvalidDigestException", com.google.common.base.Throwables.getRootCause(throwable), new org.hamcrest.MatcherAssert.MatchesPattern(com.artipie.docker.error.InvalidDigestException.class.getName() + ": .*: expected='.*%s', calculated='.*%s'".formatted(digest, "3a6eb0790f39ac87c94f3856b2dd2c5d110e6811602261a9a923d3bb23adc8b7"))));
<         return java.util.concurrent.CompletableFuture.allOf();
<     }).join();
---
>     blobs.put(new com.artipie.docker.asto.CheckedBlobSource(new com.artipie.asto.Content.From("data".getBytes()), new com.artipie.docker.Digest.Sha256(digest)))
>         .thenAccept(blob -> {
>             try {
>                 org.hamcrest.MatcherAssert.assertThat("Exception thrown",
>                     com.artipie.docker.asto.IsNot.notNull(),
>                     new org.hamcrest.MatcherAssert.MatchesPattern(
>                         com.artipie.docker.error.InvalidDigestException.class.getName() +
>                         ": .*: expected='.*%s', calculated='.*%s'".formatted(digest, "3a6eb0790f39ac87c94f3856b2dd2c5d110e6811602261a9a923d3bb23adc8b7")));
>             } catch (Throwable throwable) {
>                 throw new RuntimeException(throwable);
>             }
>         })
>         .join();
