@org.junit.jupiter.api.Test
void failsOnDigestMismatch() {
    final com.artipie.asto.memory.InMemoryStorage storage = new com.artipie.asto.memory.InMemoryStorage();
    final com.artipie.docker.asto.AstoBlobs blobs = new com.artipie.docker.asto.AstoBlobs(storage, new com.artipie.docker.asto.DefaultLayout(), new com.artipie.docker.RepoName.Simple("any"));
    final java.lang.String digest = "123";
    blobs.put(new com.artipie.docker.asto.CheckedBlobSource(new com.artipie.asto.Content.From("data".getBytes()), new com.artipie.docker.Digest.Sha256(digest)))
        .thenAccept(blob -> {
            try {
                org.hamcrest.MatcherAssert.assertThat("Exception thrown",
                    com.artipie.docker.asto.IsNot.notNull(),
                    new org.hamcrest.MatcherAssert.MatchesPattern(
                        com.artipie.docker.error.InvalidDigestException.class.getName() +
                        ": .*: expected='.*%s', calculated='.*%s'".formatted(digest, "3a6eb0790f39ac87c94f3856b2dd2c5d110e6811602261a9a923d3bb23adc8b7")));
            } catch (Throwable throwable) {
                throw new RuntimeException(throwable);
            }
        })
        .join();
}