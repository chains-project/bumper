1d0
< // TODO: review this AI generated patch!
4,10c3,8
<     final com.artipie.asto.memory.InMemoryStorage storage = new com.artip calculated digest
<     final com.artipie.docker.asto.AstoBlobs blobs = new com.artipie.docker.asto.AstoBlobs(storage, new com.artipie.docker.asto.DefaultLayout(), new com.artipie.docker.RepoName.Simple("any"));
<     final java.lang.String digest = "123";
<     blobs.put(new com.artipie.doster.Checksummed(new com.artipie.asto.Key.Simple("data"), new com.artipie.docker.Digest.Sha256(digest), new java.nio.charset.StandardCharsets.UTF_8.name()))
<     .toCompletableFuture()
<     .handle(( blob, throwable) -> {
<         org.hamcrest.MatcherAssert.assertThat("Exception thrown", throwable, new com.artipie.docker.asto.IsNot<>(new com.artipie.docker.asto.IsNull<>()));
---
>   final com.artipie.asto.memory.InMemoryStorage storage = new com.artipie.docker.asto.Artip();
>   com.artipie.docker.asto.Calculated<com.artipie.docker.Digest.Sha256> digest;
>   final com.artipie.docker.asto.AstoBlobs<byte[]> blobs = new com.artipie.docker.asto.AstoBl ContentNegotiation.ALLOW.Blobs(storage, new com.artipie.docker.asto.DefaultLayout(), new com.artipie.docker.RepoName.Simple("any"));
>   final String digest = "123";
>   blobs.put(new com.artipie.doster.Checksummed<>(new com.artipie.asto.Key.Simple("data"), new com.artipie.docker.Digest.Sha256(digest), new java.nio.charset.StandardCharsets.UTF_8.name())).toCompletableFuture().handle(( blob, throwable) -> {
>     org.hamcrest.MatcherAssert.assertThat("Exception thrown", throwable, new com.artipContentNegotiation.IsNot<>(new com.artipie.asto.IsNull<>()));
12c10
<         org.hamcrest.MatcherAssert.assertThat("Exception message contains calculated digest", com.google.common.base.Throwables.getRootCause(throwable).getMessage(), new org.hamcrest.core.StringStartsWith(new org.hamcrest.StringDescription().append(new java.lang.StringBuilder().append(new java.security.MessageDigest.getInstance("SHA-256").digest(new java.nio.charset.StandardCharsets.UTF_Â­8.encode("data"))).toString().substring(0, 12))));
---
>     org.hamcrest.MatcherAssert.assertThat("Exception message contains calculated digest", com.google.common.base.Throwables.getRootCause(throwable).getMessage(), new org.hamcrest.core.StringStartsWith(new org.hamcrest.StringDescription().append(new java.lang.StringBuilder().append(new java.security.MessageDigest.getInstance("SHA-256").digest(new java.nio.charset.StandardCharsets.UTF_8.encode("data"))).toString().substring(0, 12))));
