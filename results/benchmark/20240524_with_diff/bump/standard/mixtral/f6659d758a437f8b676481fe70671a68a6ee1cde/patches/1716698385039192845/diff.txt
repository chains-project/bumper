1,20c1,8
< public <T extends MockBaseEntity> T createMockEntity(Class<T> clazz, String path) {
<         final LoaderOptions loadingConfig = new LoaderOptions();
<         loadingConfig.setTagInspector(new TrustedTagInspector());
< 
<         final Representer representer = new Representer(new DumperOptions());
<         final Tag zoneIdTag = new Tag("!ZoneId");
<         representer.addClassTag(ZoneId.class, zoneIdTag);
<         final Tag localDateTag = new Tag("!LocalDate");
<         representer.addClassTag(LocalDate.class, localDateTag);
< 
<         final Constructor constructor = new Constructor(clazz, loadingConfig) {{
<             this.addTypeDescription(new TypeDescription(ZoneId.class, "ZoneId"));
<             this.addTypeDescription(new TypeDescription(LocalDate.class, "LocalDate"));
< 
<             this.yamlConstructors.put(zoneIdTag, new JavaZoneIdConstruct());
<             this.yamlConstructors.put(localDateTag, new JavaLocalDateConstruct());
<         }};
< 
<         Yaml yaml = new Yaml(constructor, representer);
< 
---
> public <T extends com.premiumminds.billy.core.test.fixtures.MockBaseEntity> T createMockEntity(java.lang.Class<T> clazz, java.lang.String path) {
>     final org.yaml.snakeyaml.LoaderOptions loadingConfig = new org.yaml.snakeyaml.LoaderOptions();
>     loadingConfig.setPropertyModules(new java.util.ArrayList<org.yaml.snTypeDescription>(1) {{
>         add(new org.yaml.snakeyaml.TypeDescription(java.time.ZoneId.class, "ZoneId"));
>     }});
>     loadingConfig.setPropertyUtils(new org.yaml.snakeyaml.util.PropertyUtils() {
>         @Override
>     public <T> T getProperty(Object object, String name) {
22,23c10,11
<             return yaml.load(new BufferedReader(new FileReader(path)));
<         } catch (FileNotFoundException e) {
---
>             return (T) java.beans.Introspector.getBeanInfo(object.getClass()).getPropertyDescriptors()[0].getReadMethod().invoke(object);
>         } catch (Exception e) {
26a15,24
>     });
>     loadingConfig.setTag(new org.yaml.snakeyaml.nodes.Tag("!ZoneId", new org.yaml.snakeyaml.TypeDescription(java.time.ZoneId.class)));
>     loadingConfig.setDefaultErrorHandler(new org.yaml.snakeyaml.error.SilentErrorHandler());
>     final org.yaml.snakeyaml.Yaml yaml = new org.yaml.snakeyaml.Yaml(new org.yaml.snakeyaml.constructor.SafeConstructor(), new org.yaml.snakeyaml.representer.Representer());
>     try {
>         return (T) yaml.load(new java.io.BufferedReader(new java.io.FileReader(path)));
>     } catch (java.io.FileNotFoundException e) {
>         throw new java.lang.RuntimeException(e);
>  }
> }
\ No newline at end of file
