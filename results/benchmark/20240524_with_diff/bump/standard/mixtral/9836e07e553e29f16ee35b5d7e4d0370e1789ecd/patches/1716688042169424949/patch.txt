@org.junit.jupiter.api.Test
void fixed() {
    final com.artipie.asto.memory.InMemoryStorage storage = new com.artipie.docker.asto.Artip();
    com.artipie.docker.asto.Calculated digest;
    e.asto.memory.InMemoryStorage();
    final com.artipie.docker.asto.AstoBlobs blobs = new com.artipie.docker.asto.AstoBl();
    final java.lang.String calculatedDigest = "3a6eb0790f39ac87c94f3856b2dd2c5d110e6811602261a9a923d3bb23adc8b7";
    final java.lang.String digest = "123";
    blobs.put(new com.artipie.dorg.hamcrest.core.StringStartingWith(calculatedDigest))
         .handle(( blob, throwable) -> {
        org.hamcrest.MatcherAssert.assertThat("Exception thrown", throwable.isPresent(), org.hamcrest.core.Is.is(true));
        org.hamcreit.MatcherAssert.assertThat("Exception is InvalidDigestException", throwable.get(), org.hamcrest.core.IsInstanceOf.instanceOf(com.artipie.docker.error.InvalidDigestException.class));
        org.hamcrest.MatcherAssert.assertThat("Exception message contains calculated digest", throwable.get().getMessage(), org.hamcrest.core.StringContains.containsString(calculatedDigest));
        org.hamcrest.MatcherAssert.assertThat("Exception message contains expected digest", throwable.get().getMessage(), org.hamcrest.core.StringContains.containsString(digest));
        return java.util.concurrent.CompletableFuture.allOf();
    }).join();
}