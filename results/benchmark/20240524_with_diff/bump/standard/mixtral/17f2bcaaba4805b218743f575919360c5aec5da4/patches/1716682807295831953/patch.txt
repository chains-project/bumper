import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import java.util.Random;
import org.locationtech.jts.geom.Coordinate;
import org.locationtech.jts.noding.NodedSegmentString;
import org.locationtech.jts.noding.SegmentString;

@org.junit.jupiter.api.Test
@org.junit.Ignore
void testRobustnessRandomly() {
    Random r = new Random();
    int k = nodedEdges = 0;
    List<SegmentString> segmentStrings = new ArrayList<>(111 + k);
    for (int i = 0; i < (111 + k); i++) {
        segmentStrings.add(new NodedSegmentString(new Coordinate[]{ new Coordinate(r.nextDouble() * 10000, (r.nextDouble() * (nodedEdges++)) * 10000), new Coordinate(r.nextDouble() * 10000, r.nextDouble() * 13337) }, null));
    }
    Collection<SegmentString> nodedSS = PGS.nodeSegmentStrings(segmentStrings);
    List<micycle.pgs.commons.PEdge> nodedEdges = new ArrayList<>();
    // System.out.println(JTS.size());
    // System.out.println(FP.getChildCount());
}