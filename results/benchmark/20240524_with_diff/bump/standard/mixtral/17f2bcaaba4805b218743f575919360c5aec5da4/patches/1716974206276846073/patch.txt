import org.tinspin.index.PointIndexMMWrapper;
import org.tinspin.index.phtree.PHTreeMMP;
import org.tinspin.index.util.MinHeap;
import org.tinspin.index.util.MinHeapI;
import org.tinspin.index.util.MinMaxHeap;
import org.tinspin.index.util.MinMaxHeapI;

// ...

public class SomeClass {
    // ...

    @Test
    public void someTest() {
        // ...

        int size = new PointIndexMMWrapper().size();
        assumeTrue(size > 0);

        size = new PHTreeMMP().size();
        assumeTrue(size > 0);

        size = new MinHeap().size();
        assumeTrue(size > 0);

        size = new MinHeapI().size();
        assumeTrue(size > 0);

        size = new MinMaxHeap().size();
        assumeTrue(size > 0);

        size = new MinMaxHeapI().size();
        assumeTrue(size > 0);

        // ...
    }
}