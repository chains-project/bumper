4c4,5
<     final com.artipie.asto.memory.InMemoryStorage storage = new com.artip calculatedDigest = "3a6eb0790f39ac87c94f3856b2dd2c5d110e6811602261a9a923d3bb23adc8b7";
---
>     final com.artipie.asto.memory.InMemoryStorage storage = new com.artipie.docker.asto.artip.InMemoryStorage();
>     calculatedDigest = "3a6eb0790f39ac87c94f3856b2dd2c5d110e6811602261a9a923d3bb23adc8b7";
7,11c8,20
<     blobs.put(new com.artipie.docker.asto.CheckedBlobSource(new com.artipie.asto.Content.From("data".getBytes()), new com.artipie.dorg.hamcrest.core.IsInstanceOf(com.artipie.docker.error.InvalidDigestException.class));
<     org.hamcrest.MatcherAssert.assertThat("Exception message contains calculated digest", com.google.common.base.Throwables.getRootCause(throwable).getMessage(), org.hamcrest.core.StringStartsWith.startsWith(calculatedDigest));
<     org.hamcrest.MatcherAssert.assertThat("Exception message contains expected digest", com.google.common.base.Throwables.getRootCause(throwstringContains = new org.hamcrest.core.StringContains(calculatedDigest, true));
<     org.hamcrest.MatcherAssert.assertThat("Exception message contains expected digest", com.google.common.base.Throwables.getRootCause(throwable).getMessage(), stringContains);
<     return java.util.concurrent.CompletableFuture.allOf();
---
>     CompletableFuture<Void> result = new CompleableFuture<>();
>     try {
>         blobs.put(new com.artipie.docker.asto.CheckedBlobSource(new com.artipie.asto.Content.From("data".getBytes()), new com.google.common.base.Supplier<Throwable>() {
>             @Override
>             public Throwable get() {
>                 throw new com.artipie.docker.error.InvalidDigestException(calculatedDigest);
>             }
>         }));
>     } catch (com.artipie.asto.StorageException e) {
>         org.hamcrest.MatcherAssert.assertThat("Exception message contains calculated digest", org.hamcrest.core.StringStartsWith.startsWith(calculedDigest), org.hamcrest.core.StringStartsWith.startsWith(e.getMessage()));
>         org.hamcre InvalidDigestException;
>     }
>     return result;
