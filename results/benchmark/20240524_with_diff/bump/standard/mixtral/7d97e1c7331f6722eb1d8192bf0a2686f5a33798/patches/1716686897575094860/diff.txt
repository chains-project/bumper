1,4c1,3
< /**
<      * Region.Simple can select many items.
<      */
<     @Test
---
> import static java.lang.Integer.max;
> 
> @org.junit.jupiter.api.Test
6c5
<         final Domain domain = this.domain();
---
>     final com.jcabi.simpledb.Domain domain = this.domain();
8,9c7,9
<             for (int idx = 0; idx < Tv.TEN; ++idx) {
<                 domain.item(String.format("i-%d", idx)).put("hey", "");
---
>         final int limit = 10;
>         for (int idx =  putItem(domain, "i-", 0, limit); idx < limit; ++idx) {
>             putItem(domain, "i-", idx, limit);
11,18c11
<             MatcherAssert.assertThat(
<                 domain.select(
<                     new SelectRequest().withSelectExpression(
<                         String.format("SELECT * FROM `%s`", domain.name())
<                     ).withConsistentRead(true)
<                 ),
<                 Matchers.iterableWithSize(Tv.TEN)
<             );
---
>         org.hamcrest.MatcherAssert.assertThat(selectItems(domain, domain.name()), org.hamcrest.Matchers.iterableWithSize(limit));
20a14
>     Tv.TEN = limit;
22a17,28
> 
> int putItem(com.jcabi.simpledb.Domain domain, String keyPrefix, int idx, int limit) {
>     String key = keyPrefix + idx;
>     domain.item(key).put("hey", "");
>     return idx;
> }
> 
> com.amazonaws.services.simpledb.model.SelectResult selectItems(com.jcabi.simpledb.Domain domain, String tableName) {
>     return domain.select(new com.amazonaws.services.simpledb.model.SelectRequest()
>                         .withSelectExpression(String.format("SELECT * FROM `%s`", tableName))
>                         .withConsistentRead(true));
> }
\ No newline at end of file
