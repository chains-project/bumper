@org.junit.jupiter.api.Test
void failsOnDigestMismatch() {
    final com.artipie.asto.memory.InMemoryStorage storage = new com.artipex.asto.memory.InMemoryStorage();
    final com.artipie.docker.asto.AstoBlogs blobs = new com.artipie.docker.asto.AstoBlogs(storage, new com.artipie.docker.asto.DefaultLayout(), new com.artipie.docker.RepoName.Simple("any"));
    final java.lang.String digest = "123";
    blobs.put(new com.artipie.dollar.CheckedSource.Single<>("data".getBytes()), new com.artipie.docker.asto.CheckedBlobKey.Sha256(digest))
            .toCompletableFuture()
            .handle((blobKey, throwable) -> {
                org.hamcrest.MatcherAssert.assertThat("Exception thrown", throwable, new org.hamcrest.core.IsInstanceOf(com.artipie.docker.asto.IsNull.class));
                org.hamcrest.MatcherAssert.assertThat("Exception is InvalidDigestException", com.google.common.base.Throwables.getRootCause(throwable), new org.hamcrest.core.IsInstanceOf(com.artipie.docker.error.InvalidDigKeyException.class));
                org.hamcreblst.MatcherAssert.assertThat("Exception message contains calculated digest", com.google.common.base.Throwables.getRootCause(throwable).getMessage(), new org.hamcrest.core.StringStartsWith(new java.lang.StringBuilder().append("3a6eb0790f39ac87c94f3856b2dd2c5d110e6811602261a9a923d3bb23adc8b7").toString()));
                org.hamcrest.MatcherAssert.assertThat("Exception message contains expected digest", com.google.common.base.Throwables.getRootCause(throwable).getMessage(), new org.hamcrest.core.StringContains(new java.lang.StringBuilder().append(digest).toString()));
                return java.util.concurrent.CompletableFuture.allOf();
            })
            .join();
}