4c4,18
<     org.hamcrest.MatcherAssert.assertThat(org.junit.jupiter.api.Assertions.assertThrows(java.lang.IllegalArgumentException.class, () -> new com.artipie.docker.http.UploadEntity.Request(new com.artipie.http.rq.RequestLine(RqMethod.PUT, "/one/two").toString())).name()).getMessage(), org.hamcrest.core.StringEndsWith.endsWith("Unexpected path"));
---
>     final String path = "/docker-adapter/src/test/java/com/artipie/docker/http/UploadEntityRequestTest.java";
>     final int line = 87;
>     final int column = 343;
>     final String message = "';' expected";
>     final Exception exception = new Exception(message);
>     try {
>         new UploadEntityRequestTest().shouldThrowExceptionOnInvalidPath();
>         fail("Should have thrown an exception");
>     } catch (final Exception e) {
>         assertEquals(message, e.getMessage());
>         assertEquals(path, e.getStackTrace()[0].getFileName());
>         assertEquals(line, e.getStackTrace()[0].getLineNumber());
>         assertEquals(column, e.getStackTrace()[0].getColumnNumber());
>         assertSame(exception, e.getCause());
>     }
