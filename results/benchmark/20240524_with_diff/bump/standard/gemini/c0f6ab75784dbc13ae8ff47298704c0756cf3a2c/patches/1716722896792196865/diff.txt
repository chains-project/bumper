1,7c1,16
< private static AnalysisEngineConfiguration buildAnalysisEngineConfiguration() {
<         return AnalysisEngineConfiguration.builder()
<                 .addEnabledLanguages(globalConfig.getEnabledLanguages())
<                 .setClientPid(globalConfig.getClientPid())
<                 .setExtraProperties(globalConfig.extraProperties())
<                 .setWorkDir(globalConfig.getWorkDir())
<                 .setModulesProvider(globalConfig.getModulesProvider())
---
> private static org.sonarsource.sonarlint.core.analysis.api.AnalysisEngineConfiguration buildAnalysisEngineConfiguration() {
>     // Get the enabled languages from the LanguageSupportRepository.
>     java.util.Set<org.sonarsource.sonarlint.core.commons.Language> enabledLanguages = null;
>     if (sorald.sonar.SonarLintEngine.globalConfig.isStandalone()) {
>         enabledLanguages = org.sonarsource.sonarlint.core.languages.LanguageSupportRepository.getEnabledLanguagesInStandaloneMode();
>     } else {
>         enabledLanguages = org.sonarsource.sonarlint.core.languages.LanguageSupportRepository.getEnabledLanguagesInConnectedMode();
>     }
> 
>     // Build the AnalysisEngineConfiguration.
>     return org.sonarsource.sonarlint.core.analysis.api.AnalysisEngineConfiguration.builder()
>             .addEnabledLanguages(enabledLanguages)
>             .setClientPid(sorald.sonar.SonarLintEngine.globalConfig.getClientPid())
>             .setExtraProperties(sorald.sonar.SonarLintEngine.globalConfig.extraProperties())
>             .setWorkDir(sorald.sonar.SonarLintEngine.globalConfig.getWorkDir())
>             .setModulesProvider(sorald.sonar.SonarLintEngine.globalConfig.getModulesProvider())
