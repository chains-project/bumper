4c4,25
<     org.hamcrest.MatcherAssert.assertThat(org.junit.jupiter.api.Assertions.assertThrows(java.lang.IllegalArgumentException.class, () -> new com.artipie.docker.http.UploadEntity.Request(new com.artipie.http.rq.RequestLine(RqMethod.PUT, "/one/two").toString())).name()).getMessage(), new org.hamcrest.core.StringContains(false, "Unexpected path"));
---
>     // Arrange
>     final String path = "invalid";
>     final HttpURLConnection connection = new HttpURLConnection(new URL(path)) {
>         @Override
>         public void connect() throws IOException {
>             throw new IOException("Test exception");
>         }
>     };
>     final UploadEntityRequest request = new UploadEntityRequest(new InputStream() {
>         @Override
>         public int read() throws IOException {
>             return 0;
>         }
>     }, connection);
> 
>     // Act
>     final CompletableFuture<Void> result = request.execute();
> 
>     // Assert
>     assertThatThrownBy(result::get)
>             .hasMessage("Test exception")
>             .isInstanceOf(IOException.class);
