1c1,51
< import org.jasypt.spring.security.PBEPasswordEncoder;
\ No newline at end of file
---
> import org.jasypt.encryption.pbe.PBEStringEncryptor;
> import org.jasypt.util.text.TextEncryptor;
> import org.springframework.security.crypto.password.PasswordEncoder;
> import org.springframework.security.crypto.password.Pbkdf2PasswordEncoder;
> 
> // ...
> 
> public PBEPasswordEncoder geoStorePBEPasswordEncoder() {
>     TextEncryptor textEncryptor = new TextEncryptor() {
>         private final PBEStringEncryptor pbeStringEncryptor = new PBEStringEncryptor() {
>             {
>                 setAlgorithm("PBEWithMD5AndTripleDES");
>                 setPassword("password");
>             }
>         };
> 
>         @Override
>         public String encrypt(String text) {
>             return pbeStringEncryptor.encrypt(text);
>         }
> 
>         @Override
>         public String decrypt(String encryptedText) {
>             return pbeStringEncryptor.decrypt(encryptedText);
>         }
>     };
> 
>     PasswordEncoder passwordEncoder = new Pbkdf2PasswordEncoder();
> 
>     return new PBEPasswordEncoder() {
>         @Override
>         public String encodePassword(String rawPass, Object salt) {
>             return passwordEncoder.encode(rawPass);
>         }
> 
>         @Override
>         public boolean isPasswordValid(String encPass, String rawPass, Object salt) {
>             return passwordEncoder.matches(rawPass, encPass);
>         }
> 
>         @Override
>         public void setPbeStringEncryptor(PBEStringEncryptor encryptor) {
>             // Not needed in this example
>         }
> 
>         @Override
>         public void setTextEncryptor(TextEncryptor encryptor) {
>             // Not needed in this example
>         }
>     };
> }
\ No newline at end of file
