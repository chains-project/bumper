private boolean classToInclude(java.lang.String className) {
    // ... (same as before)

    // True if it is present in the available binaries
    for (java.lang.String dir : config.getBinJavaDir()) {
        org.apache.maven.plugin.surefire.util.DirectoryScanner directoryScanner = new org.apache.maven.plugin.surefire.util.DirectoryScanner(new java.io.File(dir), new org.apache.maven.surefire.api.testset.TestListResolver() {
            @Override
            public java.lang.String getWildcard() {
                return org.apache.maven.surefire.api.testset.TestListResolver.getWildcard();
            }
        });

        if (directoryScanner.scan().getClasses().contains(className)) {
            return true;
        }
    }
    for (java.lang.String dir : config.getBinTestDir()) {
        org.apache.maven.plugin.surefire.util.DirectoryScanner directoryScanner = new org.apache.maven.plugin.surefire.util.DirectoryScanner(new java.io.File(dir), new org.apache.maven.surefire.api.testset.TestListResolver() {
            @Override
            public java.lang.String getWildcard() {
                return org.apache.maven.surefire.api.testset.TestListResolver.getWildcard();
            }
        });

        if (directoryScanner.scan().getClasses().contains(className)) {
            return true;
        }
    }

    // ... (same as before)
}