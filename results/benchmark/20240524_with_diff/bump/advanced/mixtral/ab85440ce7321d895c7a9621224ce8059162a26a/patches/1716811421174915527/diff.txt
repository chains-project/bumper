1d0
< // TODO: review this AI generated patch!
7,11c6,31
<     blobs.put(new com.artipie.docker.asto.CheckedBlobSource(new com.artipie.asto.Content.From("data".getBytes()), new com.artipie.docker.Digest.Sha256(digest))).toCompletableFuture().handle(( blob, throwable) -> {
<         org.hamcrest.MatcherAssert.assertThat("Exception thrown", throwable, new com.artipie.docker.asto.IsNot<>(new com.artipie.docker.asto.IsNull<>()));
<         org.hamcrest.MatcherAssert.assertThat("Exception is InvalidDigestException", com.google.common.base.Throwables.getRootCause(throwable), new org.hamcrest.core.IsInstanceOf(com.artipie.docker.error.InvalidDigestException.class));
<         org.hamcrest.MatcherAssert.assertThat("Exception message contains calculated digest", com.google.common.base.Throwables.getRootCause(throwable).getMessage(), new org.hamcrest.core.StringStartsWith(new org.hamcrest.core.StringValue(com.artipie.docker.Digest.Sha256.NAME))));
<         org.hamcrest.MatcherAssert.assertThat("Exception message contains expected digest", com.google.common.base.Throwables.getRootCause(throwable).getMessage(), new org.hamcrest.core.StringContains(digest));
---
>     blobs.put(new com.artipie.docker.asto.CheckedBlobSource(new com.artipie.asto.Content.From("data".getBytes()), new com.artipie.docker.Digest.Sha256(digest)))
>         .toCompletableFuture()
>         .handle(
>             (blob, throwable) -> {
>               if (throwable != null) {
>                 org.hamcrest.MatcherAssert.assertThat(
>                     "Exception thrown",
>                     throwable,
>                     new com.artipie.docker.asto.IsNot<>(new com.artipie.docker.asto.IsNull<>()));
>                 org.hamcrest.MatcherAssert.assertThat(
>                     "Exception is InvalidDigestException",
>                     com.google.common.base.Throwables.getRootCause(throwable),
>                     new org.hamcrest.core.IsInstanceOf(
>                         com.artipie.docker.error.InvalidDigestException.class));
>                 org.hamcrest.MatcherAssert.assertThat(
>                     "Exception message contains calculated digest",
>                     com.google.common.base.Throwables.getRootCause(throwable).getMessage(),
>                     new org.hamcrest.core.StringStartsWith(
>                         new org.hamcrest.core.StringValue(com.artipie.docker.Digest.Sha256.NAME)));
>                 org.hamcrest.MatcherAssert.assertThat(
>                     "Exception message contains expected digest",
>                     com.google.common.base.Throwables.getRootCause(throwable).getMessage(),
>                     new org.hamcrest.core.StringContains(digest));
>               }
>               return blob;
>             });
13d32
<     }).join();
