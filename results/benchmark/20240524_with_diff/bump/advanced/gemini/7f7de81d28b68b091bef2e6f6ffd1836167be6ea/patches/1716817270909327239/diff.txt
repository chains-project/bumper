1,7d0
< /**
<      * Sets the private registry value of {@link DefaultMOServer} via reflection.
<      * FIXME
<      * If there is any possibility to avoid this, then replace!
<      *
<      * @param group {@link ManagedObject} to register.
<      */
10,15c3,18
<             final Field registry = server.getClass().getDeclaredField("registry");
<             registry.setAccessible(true);
<             final SortedMap<MOScope, ManagedObject> reg = server.getRegistry();
<             DefaultMOContextScope contextScope = new DefaultMOContextScope(new OctetString(""), group.getScope());
<             reg.put(contextScope, group);
<             registry.set(server, reg);
---
>         // Get the private registry field of DefaultMOServer using reflection
>         final Field registryField = server.getClass().getDeclaredField("registry");
>         registryField.setAccessible(true);
> 
>         // Get the current registry value
>         final SortedMap<MOScope, ManagedObject> currentRegistry = (SortedMap<MOScope, ManagedObject>) registryField.get(server);
> 
>         // Create a new context scope with the group's scope
>         final MOScope contextScope = new DefaultMOContextScope(new OctetString(""), group.getScope());
> 
>         // Put the group into the new registry with the context scope as the key
>         final SortedMap<MOScope, ManagedObject> newRegistry = new TreeMap<>(currentRegistry);
>         newRegistry.put(contextScope, group);
> 
>         // Set the new registry value back to the DefaultMOServer instance
>         registryField.set(server, newRegistry);
