import org.junit.Assert;
import org.junit.Test;

import java.util.Arrays;

public class PGS_MeshingTests {

    @Test
    public void testMeshing() {
        // Create a mesh with 10 vertices and 20 triangles.
        Mesh mesh = new Mesh(10, 20);

        // Add the vertices to the mesh.
        mesh.addVertex(new Vertex(0, 0, 0));
        mesh.addVertex(new Vertex(1, 0, 0));
        mesh.addVertex(new Vertex(0, 1, 0));
        mesh.addVertex(new Vertex(1, 1, 0));
        mesh.addVertex(new Vertex(0, 0, 1));
        mesh.addVertex(new Vertex(1, 0, 1));
        mesh.addVertex(new Vertex(0, 1, 1));
        mesh.addVertex(new Vertex(1, 1, 1));
        mesh.addVertex(new Vertex(0.5, 0, 0.5));
        mesh.addVertex(new Vertex(0.5, 1, 0.5));

        // Add the triangles to the mesh.
        mesh.addTriangle(new Triangle(0, 1, 4));
        mesh.addTriangle(new Triangle(1, 5, 4));
        mesh.addTriangle(new Triangle(5, 8, 4));
        mesh.addTriangle(new Triangle(8, 0, 4));
        mesh.addTriangle(new Triangle(1, 2, 5));
        mesh.addTriangle(new Triangle(2, 6, 5));
        mesh.addTriangle(new Triangle(6, 9, 5));
        mesh.addTriangle(new Triangle(9, 1, 5));
        mesh.addTriangle(new Triangle(2, 3, 6));
        mesh.addTriangle(new Triangle(3, 7, 6));
        mesh.addTriangle(new Triangle(7, 10, 6));
        mesh.addTriangle(new Triangle(10, 2, 6));
        mesh.addTriangle(new Triangle(3, 0, 7));
        mesh.addTriangle(new Triangle(0, 4, 7));
        mesh.addTriangle(new Triangle(4, 8, 7));
        mesh.addTriangle(new Triangle(8, 3, 7));
        mesh.addTriangle(new Triangle(9, 8, 10));
        mesh.addTriangle(new Triangle(8, 4, 10));
        mesh.addTriangle(new Triangle(4, 1, 10));
        mesh.addTriangle(new Triangle(1, 9, 10));

        // Create a meshing object.
        Meshing meshing = new Meshing(mesh);

        // Mesh the mesh.
        meshing.mesh();

        // Assert that the mesh has been meshed correctly.
        Assert.assertEquals(10, mesh.getVertices().size());
        Assert.assertEquals(20, mesh.getTriangles().size());
    }
}