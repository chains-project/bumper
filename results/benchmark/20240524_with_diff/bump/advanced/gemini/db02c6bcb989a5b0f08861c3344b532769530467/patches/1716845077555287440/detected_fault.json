{
    "py/object": "pipeline.types.detected_fault.DetectedFault",
    "identifier": 1390869998,
    "in_class_code": "/**\n * Tests for {@link UploadEntity.Request}.\n *\n * @since 0.2\n * @checkstyle ClassDataAbstractionCouplingCheck (2 lines)\n */\n@SuppressWarnings({ \"PMD.AvoidDuplicateLiterals\", \"PMD.TooManyMethods\" })\nclass UploadEntityRequestTest {\n    // TODO: review this AI generated patch!\n    @Test\n    void shouldThrowExceptionOnInvalidPath() {\n    }\n}",
    "qualified_in_class_code": "/**\n * Tests for {@link UploadEntity.Request}.\n *\n * @since 0.2\n * @checkstyle ClassDataAbstractionCouplingCheck (2 lines)\n */\n@java.lang.SuppressWarnings({ \"PMD.AvoidDuplicateLiterals\", \"PMD.TooManyMethods\" })\nclass UploadEntityRequestTest {\n    // TODO: review this AI generated patch!\n    @org.junit.jupiter.api.Test\n    void shouldThrowExceptionOnInvalidPath() {\n    }\n}",
    "plausible_dependency_identifier": null,
    "error_info": {
        "py/object": "pipeline.types.error_info.ErrorInfo",
        "additional_info": "",
        "error_message": "[ERROR] /docker-adapter/src/test/java/com/artipie/docker/http/UploadEntityRequestTest.java:[87,345] ';' expected",
        "client_file_path": "/docker-adapter/src/test/java/com/artipie/docker/http/UploadEntityRequestTest.java",
        "client_line_position": "87"
    },
    "client_end_line_number": 88,
    "client_line_number": 84,
    "method_code": "// TODO: review this AI generated patch!\n@org.junit.jupiter.api.Test\nvoid shouldThrowExceptionOnInvalidPath() {\n    org.hamcrest.MatcherAssert.assertThat(org.junit.jupiter.api.Assertions.assertThrows(java.lang.IllegalArgumentException.class, () -> new com.artipie.docker.http.UploadEntity.Request(new com.artipie.http.rq.RequestLine(RqMethod.PUT, \"/one/two\").toString())).name()).getMessage(), new org.hamcrest.core.StringContains(false, \"Unexpected path\"));\n}",
    "qualified_code": "// TODO: review this AI generated patch!\n@org.junit.jupiter.api.Test\nvoid shouldThrowExceptionOnInvalidPath() {\n}",
    "method_name": "shouldThrowExceptionOnInvalidPath"
}