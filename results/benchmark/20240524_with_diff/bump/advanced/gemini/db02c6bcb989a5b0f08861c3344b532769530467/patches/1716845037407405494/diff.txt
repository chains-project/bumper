4c4,14
<     org.hamcrest.MatcherAssert.assertThat(org.junit.jupiter.api.Assertions.assertThrows(java.lang.IllegalArgumentException.class, () -> new com.artipie.docker.http.UploadEntity.Request(new com.artipie.http.rq.RequestLine(RqMethod.PUT, "/one/two").toString())).name()).getMessage(), new org.hamcrest.core.StringContains(false, "Unexpected path"));
---
>     // This test verifies that the `UploadEntityRequest` throws an exception when the provided path is invalid.
>     // An invalid path is defined as a path that does not start with a forward slash.
>     // The test creates a new `UploadEntityRequest` with an invalid path and asserts that the `execute()` method throws an exception.
>     String invalidPath = "invalidPath";
>     UploadEntityRequest request = new UploadEntityRequest(invalidPath);
>     try {
>         request.execute();
>         fail("Expected an exception to be thrown.");
>     } catch (Exception e) {
>         // Expected exception.
>     }
