{
    "py/object": "pipeline.types.detected_fault.DetectedFault",
    "identifier": 294658058,
    "in_class_code": "public static class Execution extends ArtifactorySynchronousStepExecution<Void> {\n    protected static final long serialVersionUID = 1L;\n\n    private transient final CreateJFrogInstanceStep step;\n\n    @Inject\n    public Execution(CreateJFrogInstanceStep step, StepContext context) throws IOException, InterruptedException {\n        super(context);\n        this.step = step;\n    }\n\n    /**\n     * Validate step's inputs.\n     *\n     * @param server\n     * \t\t- The server to check\n     * @throws IOException\n     * \t\tif there is an illegal step configuration.\n     */\n    private void checkInputs(JFrogPlatformInstance server) throws IOException {\n        if (isAllBlank(server.getUrl(), server.getArtifactory().getUrl(), server.getDistribution().getUrl(), step.url, step.artifactoryUrl, step.distributionUrl)) {\n            throw new IOException(\"Server URL is missing\");\n        }\n        if (isNotBlank(step.credentialsId)) {\n            if (isNotBlank(step.username)) {\n                throw new IOException(\"'rtServer' step can't include both credentialsId and username\");\n            }\n            if (isNotBlank(step.password)) {\n                throw new IOException(\"'rtServer' step can't include both credentialsId and password\");\n            }\n        }\n    }\n}",
    "qualified_in_class_code": "public static class Execution extends org.jfrog.hudson.pipeline.ArtifactorySynchronousStepExecution<java.lang.Void> {\n    protected static final long serialVersionUID = 1L;\n\n    private transient final org.jfrog.hudson.pipeline.declarative.steps.CreateJFrogInstanceStep step;\n\n    @com.google.inject.Inject\n    public Execution(org.jfrog.hudson.pipeline.declarative.steps.CreateJFrogInstanceStep step, org.jenkinsci.plugins.workflow.steps.StepContext context) throws java.io.IOException, java.lang.InterruptedException {\n        super(context);\n        this.step = step;\n    }\n\n    /**\n     * Validate step's inputs.\n     *\n     * @param server\n     * \t\t- The server to check\n     * @throws IOException\n     * \t\tif there is an illegal step configuration.\n     */\n    private void checkInputs(org.jfrog.hudson.pipeline.common.types.JFrogPlatformInstance server) throws java.io.IOException {\n        if (isAllBlank(server.getUrl(), server.getArtifactory().getUrl(), server.getDistribution().getUrl(), step.url, step.artifactoryUrl, step.distributionUrl)) {\n            throw new java.io.IOException(\"Server URL is missing\");\n        }\n        if (org.apache.commons.lang3.StringUtils.isNotBlank(step.credentialsId)) {\n            if (org.apache.commons.lang3.StringUtils.isNotBlank(step.username)) {\n                throw new java.io.IOException(\"'rtServer' step can't include both credentialsId and username\");\n            }\n            if (org.apache.commons.lang3.StringUtils.isNotBlank(step.password)) {\n                throw new java.io.IOException(\"'rtServer' step can't include both credentialsId and password\");\n            }\n        }\n    }\n}",
    "plausible_dependency_identifier": null,
    "error_info": {
        "py/object": "pipeline.types.error_info.ErrorInfo",
        "additional_info": "  symbol:   method isAllBlank(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)\n  location: class org.jfrog.hudson.pipeline.declarative.steps.CreateJFrogInstanceStep.Execution\n",
        "error_message": "[ERROR] /artifactory-plugin/src/main/java/org/jfrog/hudson/pipeline/declarative/steps/CreateJFrogInstanceStep.java:[141,17] cannot find symbol",
        "client_file_path": "/artifactory-plugin/src/main/java/org/jfrog/hudson/pipeline/declarative/steps/CreateJFrogInstanceStep.java",
        "client_line_position": "141"
    },
    "client_end_line_number": 153,
    "client_line_number": 134,
    "method_code": "/**\n         * Validate step's inputs.\n         *\n         * @param server - The server to check\n         * @throws IOException if there is an illegal step configuration.\n         */\n        private void checkInputs(JFrogPlatformInstance server) throws IOException {\n            if (isAllBlank(server.getUrl(), server.getArtifactory().getUrl(), server.getDistribution().getUrl(),\n                    step.url, step.artifactoryUrl, step.distributionUrl)) {\n                throw new IOException(\"Server URL is missing\");\n            }\n            if (isNotBlank(step.credentialsId)) {\n                if (isNotBlank(step.username)) {\n                    throw new IOException(\"'rtServer' step can't include both credentialsId and username\");\n                }\n                if (isNotBlank(step.password)) {\n                    throw new IOException(\"'rtServer' step can't include both credentialsId and password\");\n                }\n            }\n        }",
    "qualified_code": "/**\n * Validate step's inputs.\n *\n * @param server\n * \t\t- The server to check\n * @throws IOException\n * \t\tif there is an illegal step configuration.\n */\nprivate void checkInputs(org.jfrog.hudson.pipeline.common.types.JFrogPlatformInstance server) throws java.io.IOException {\n    if (isAllBlank(server.getUrl(), server.getArtifactory().getUrl(), server.getDistribution().getUrl(), step.url, step.artifactoryUrl, step.distributionUrl)) {\n        throw new java.io.IOException(\"Server URL is missing\");\n    }\n    if (org.apache.commons.lang3.StringUtils.isNotBlank(step.credentialsId)) {\n        if (org.apache.commons.lang3.StringUtils.isNotBlank(step.username)) {\n            throw new java.io.IOException(\"'rtServer' step can't include both credentialsId and username\");\n        }\n        if (org.apache.commons.lang3.StringUtils.isNotBlank(step.password)) {\n            throw new java.io.IOException(\"'rtServer' step can't include both credentialsId and password\");\n        }\n    }\n}",
    "method_name": "checkInputs"
}