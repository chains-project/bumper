import org.tinspin.index.PointIndexMMWrapper;
import org.tinspin.index.phtree.PHTreeMMP;
import org.tinspin.index.util.MinHeap;
import org.tinspin.index.util.MinMaxHeap;

// ...

public class FastPolygonizerTests {
  // ...

  @Test
  public void testPolygonize() {
    Polygonizer polygonizer = new Polygonizer();
    // ...
  }

  // ...

  public int getSize(Object obj) {
    if (obj instanceof PointIndexMMWrapper) {
      return ((PointIndexMMWrapper) obj).size();
    } else if (obj instanceof PHTreeMMP) {
      return ((PHTreeMMP) obj).size();
    } else if (obj instanceof MinHeap) {
      return ((MinHeap) obj).size();
    } else if (obj instanceof MinMaxHeap) {
      return ((MinMaxHeap) obj).size();
    } else {
      throw new IllegalArgumentException("Unsupported object type");
    }
  }
}