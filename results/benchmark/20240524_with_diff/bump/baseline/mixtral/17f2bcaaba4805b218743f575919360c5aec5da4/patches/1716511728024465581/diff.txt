1c1,28
< import micycle.pgs.commons.PEdge;
\ No newline at end of file
---
> import org.tinspin.index.PointIndexMMWrapper;
> import org.tinspin.index.phtree.PHTreeMMP;
> import org.tinspin.index.util.MinHeap;
> import org.tinspin.index.util.MinHeapI;
> import org.tinspin.index.util.MinMaxHeap;
> import org.tinspin.index.util.MinMaxHeapI;
> 
> int edgeSize = 0;
> 
> if (myEdge instanceof PEdge) {
>     PointIndexMMWrapper index = ((PEdge) myEdge).getIndex();
>     edgeSize = index.size();
> } else if (myEdge instanceof PHTreeMMP.Edge) {
>     PHTreeMMP tree = ((PHTreeMMP.Edge) myEdge).getTree();
>     edgeSize = tree.size();
> } else if (myEdge instanceof MinHeap.Entry) {
>     MinHeap heap = ((MinHeap.Entry) myEdge).getHeap();
>     edgeSize = heap.size();
> } else if (myEdge instanceof MinHeapI.Entry) {
>     MinHeapI heap = ((MinHeapI.Entry) myEdge).getHeap();
>     edgeSize = heap.size();
> } else if (myEdge instanceof MinMaxHeap.Entry) {
>     MinMaxHeap heap = ((MinMaxHeap.Entry) myEdge).getHeap();
>     edgeSize = heap.size();
> } else if (myEdge instanceof MinMaxHeapI.Entry) {
>     MinMaxHeapI heap = ((MinMaxHeapI.Entry) myEdge).getHeap();
>     edgeSize = heap.size();
> }
\ No newline at end of file
