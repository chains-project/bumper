1c1,44
< import org.apache.maven.artifact.resolver.ArtifactResolverException;
\ No newline at end of file
---
> import org.apache.maven.artifact.repository.ArtifactRepository;
> import org.apache.maven.artifact.resolver.ArtifactResolver;
> import org.apache.maven.plugin.AbstractMojo;
> import org.apache.maven.project.MavenProject;
> import org.codehaus.plexus.components.io.resources.PlexusIoResource;
> import org.codehaus.plexus.components.io.resources.PlexusIoResourceFilterWriter;
> 
> import java.io.File;
> import java.io.IOException;
> import java.util.Collection;
> import java.util.HashSet;
> import java.util.Set;
> 
> public class UnPackThemeMojo extends AbstractMojo {
> 
>     // ... other fields and methods ...
> 
>     @Override
>     public void execute() throws ArtifactResolverException, IOException {
>         // ... other code ...
> 
>         Set<PlexusIoResource> resources = new HashSet<>();
> 
>         for (ArtifactRepository repository : getRepositories()) {
>             ArtifactResolver resolver = repositorySystem.getArtifactResolver();
>             Artifact artifact = new DefaultArtifact(groupId, artifactId, version, ArtifactType.toType("zip"), null);
>             Collection<ArtifactResult> artifactResults = resolver.resolveArtifacts(session, asList(artifact), remoteRepositories, localRepository);
>             ArtifactResult artifactResult = artifactResults.iterator().next();
>             File artifactFile = artifactResult.getArtifact().getFile();
> 
>             resources.add(new PlexusIoResource(artifactFile));
>         }
> 
>         // ... other code ...
> 
>         try (PlexusIoResourceFilterWriter writer = new PlexusIoResourceFilterWriter(new File(destinationDirectory, "themes.css"))) {
>             for (PlexusIoResource resource : resources) {
>                 try (InputStream inputStream = resource.getInputStream()) {
>                     // ... other code ...
>                 }
>             }
>         }
>     }
> }
\ No newline at end of file
