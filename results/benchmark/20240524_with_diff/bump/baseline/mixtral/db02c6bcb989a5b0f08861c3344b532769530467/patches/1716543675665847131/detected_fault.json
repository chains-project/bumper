{
    "py/object": "pipeline.types.detected_fault.DetectedFault",
    "identifier": 854587510,
    "in_class_code": "/**\n * Tests for {@link DockerSlice}.\n * Upload PUT endpoint.\n *\n * @since 0.2\n * @checkstyle ClassDataAbstractionCouplingCheck (2 lines)\n */\n@SuppressWarnings(\"PMD.AvoidDuplicateLiterals\")\nclass UploadEntityPostTest {\n    /**\n     * Docker instance used in tests.\n     */\n    private Docker docker;\n\n    /**\n     * Slice being tested.\n     */\n    private DockerSlice slice;\n\n    private static ResponseMatcher isUploadStarted() {\n        return new ResponseMatcher(RsStatus.ACCEPTED, new IsHeader(\"Location\", new StringStartsWith(false, \"/v2/test/blobs/uploads/\")), new IsHeader(\"Range\", \"0-0\"), new IsHeader(\"Content-Length\", \"0\"), new IsHeader(\"Docker-Upload-UUID\", new IsNot<>(Matchers.emptyString())));\n    }\n}",
    "qualified_in_class_code": "/**\n * Tests for {@link DockerSlice}.\n * Upload PUT endpoint.\n *\n * @since 0.2\n * @checkstyle ClassDataAbstractionCouplingCheck (2 lines)\n */\n@java.lang.SuppressWarnings(\"PMD.AvoidDuplicateLiterals\")\nclass UploadEntityPostTest {\n    /**\n     * Docker instance used in tests.\n     */\n    private com.artipie.docker.Docker docker;\n\n    /**\n     * Slice being tested.\n     */\n    private com.artipie.docker.http.DockerSlice slice;\n\n    private static com.artipie.http.hm.ResponseMatcher isUploadStarted() {\n        return new com.artipie.http.hm.ResponseMatcher(com.artipie.http.rs.RsStatus.ACCEPTED, new com.artipie.http.hm.IsHeader(\"Location\", new org.hamcrest.core.StringStartsWith(false, \"/v2/test/blobs/uploads/\")), new com.artipie.http.hm.IsHeader(\"Range\", \"0-0\"), new com.artipie.http.hm.IsHeader(\"Content-Length\", \"0\"), new com.artipie.http.hm.IsHeader(\"Docker-Upload-UUID\", new org.hamcrest.core.IsNot<>(org.hamcrest.Matchers.emptyString())));\n    }\n}",
    "plausible_dependency_identifier": null,
    "error_info": {
        "py/object": "pipeline.types.error_info.ErrorInfo",
        "additional_info": "  required: java.lang.String\n  found: boolean,java.lang.String\n  reason: actual and formal argument lists differ in length\n",
        "error_message": "[ERROR] /docker-adapter/src/test/java/com/artipie/docker/http/UploadEntityPostTest.java:[113,17] constructor StringStartsWith in class org.hamcrest.core.StringStartsWith cannot be applied to given types;",
        "client_file_path": "/docker-adapter/src/test/java/com/artipie/docker/http/UploadEntityPostTest.java",
        "client_line_position": "113"
    },
    "client_end_line_number": 119,
    "client_line_number": 108,
    "method_code": "private static ResponseMatcher isUploadStarted() {\n        return new ResponseMatcher(\n            RsStatus.ACCEPTED,\n            new IsHeader(\n                \"Location\",\n                new StringStartsWith(false, \"/v2/test/blobs/uploads/\")\n            ),\n            new IsHeader(\"Range\", \"0-0\"),\n            new IsHeader(\"Content-Length\", \"0\"),\n            new IsHeader(\"Docker-Upload-UUID\", new IsNot<>(Matchers.emptyString()))\n        );\n    }",
    "qualified_code": "private static com.artipie.http.hm.ResponseMatcher isUploadStarted() {\n    return new com.artipie.http.hm.ResponseMatcher(com.artipie.http.rs.RsStatus.ACCEPTED, new com.artipie.http.hm.IsHeader(\"Location\", new org.hamcrest.core.StringStartsWith(false, \"/v2/test/blobs/uploads/\")), new com.artipie.http.hm.IsHeader(\"Range\", \"0-0\"), new com.artipie.http.hm.IsHeader(\"Content-Length\", \"0\"), new com.artipie.http.hm.IsHeader(\"Docker-Upload-UUID\", new org.hamcrest.core.IsNot<>(org.hamcrest.Matchers.emptyString())));\n}",
    "method_name": "isUploadStarted"
}