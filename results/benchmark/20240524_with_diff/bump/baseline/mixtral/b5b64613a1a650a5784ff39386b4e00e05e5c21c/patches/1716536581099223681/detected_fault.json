{
    "py/object": "pipeline.types.detected_fault.DetectedFault",
    "identifier": 294658058,
    "in_class_code": "/**\n * We don't use additional context fields in this step execution,\n * so we extend SynchronousStepExecution directly and not ArtifactorySynchronousStepExecution\n */\npublic static class Execution extends SynchronousStepExecution<JFrogPlatformInstance> {\n    private static final long serialVersionUID = 1L;\n\n    private transient CreateJFrogPlatformInstanceStep step;\n\n    @Inject\n    public Execution(CreateJFrogPlatformInstanceStep step, StepContext context) {\n        super(context);\n        this.step = step;\n    }\n\n    @Override\n    protected JFrogPlatformInstance run() throws Exception {\n        if (isAllBlank(step.url, step.artifactoryUrl, step.distributionUrl)) {\n            throw new IllegalArgumentException(\"At least one of the following is mandatory: 'url', 'artifactoryUrl', 'distributionUrl'\");\n        }\n        String urlWithoutSlash = removeEnd(step.url, \"/\");\n        String artifactoryUrl = defaultIfBlank(step.artifactoryUrl, (urlWithoutSlash + \"/\") + \"artifactory\");\n        String distributionUrl = defaultIfBlank(step.distributionUrl, (urlWithoutSlash + \"/\") + \"distribution\");\n        ArtifactoryServer artifactoryServer;\n        DistributionServer distributionServer;\n        if (!isEmpty(step.credentialsId)) {\n            artifactoryServer = new ArtifactoryServer(artifactoryUrl, step.credentialsId);\n            distributionServer = new DistributionServer(distributionUrl, step.credentialsId);\n        } else {\n            artifactoryServer = new ArtifactoryServer(artifactoryUrl, step.username, step.password);\n            distributionServer = new DistributionServer(distributionUrl, step.username, step.password);\n        }\n        artifactoryServer.setPlatformUrl(urlWithoutSlash);\n        return new JFrogPlatformInstance(artifactoryServer, distributionServer, step.url, \"\");\n    }\n}",
    "qualified_in_class_code": "/**\n * We don't use additional context fields in this step execution,\n * so we extend SynchronousStepExecution directly and not ArtifactorySynchronousStepExecution\n */\npublic static class Execution extends org.jenkinsci.plugins.workflow.steps.SynchronousStepExecution<org.jfrog.hudson.pipeline.common.types.JFrogPlatformInstance> {\n    private static final long serialVersionUID = 1L;\n\n    private transient org.jfrog.hudson.pipeline.scripted.steps.CreateJFrogPlatformInstanceStep step;\n\n    @com.google.inject.Inject\n    public Execution(org.jfrog.hudson.pipeline.scripted.steps.CreateJFrogPlatformInstanceStep step, org.jenkinsci.plugins.workflow.steps.StepContext context) {\n        super(context);\n        this.step = step;\n    }\n\n    @java.lang.Override\n    protected org.jfrog.hudson.pipeline.common.types.JFrogPlatformInstance run() throws java.lang.Exception {\n        if (org.apache.commons.lang3.StringUtils.isAllBlank(step.url, step.artifactoryUrl, step.distributionUrl)) {\n            throw new java.lang.IllegalArgumentException(\"At least one of the following is mandatory: 'url', 'artifactoryUrl', 'distributionUrl'\");\n        }\n        java.lang.String urlWithoutSlash = org.apache.commons.lang3.StringUtils.removeEnd(step.url, \"/\");\n        java.lang.String artifactoryUrl = org.apache.commons.lang3.StringUtils.defaultIfBlank(step.artifactoryUrl, (urlWithoutSlash + \"/\") + \"artifactory\");\n        java.lang.String distributionUrl = org.apache.commons.lang3.StringUtils.defaultIfBlank(step.distributionUrl, (urlWithoutSlash + \"/\") + \"distribution\");\n        org.jfrog.hudson.pipeline.common.types.ArtifactoryServer artifactoryServer;\n        org.jfrog.hudson.pipeline.common.types.DistributionServer distributionServer;\n        if (!org.apache.commons.lang3.StringUtils.isEmpty(step.credentialsId)) {\n            artifactoryServer = new org.jfrog.hudson.pipeline.common.types.ArtifactoryServer(artifactoryUrl, step.credentialsId);\n            distributionServer = new org.jfrog.hudson.pipeline.common.types.DistributionServer(distributionUrl, step.credentialsId);\n        } else {\n            artifactoryServer = new org.jfrog.hudson.pipeline.common.types.ArtifactoryServer(artifactoryUrl, step.username, step.password);\n            distributionServer = new org.jfrog.hudson.pipeline.common.types.DistributionServer(distributionUrl, step.username, step.password);\n        }\n        artifactoryServer.setPlatformUrl(urlWithoutSlash);\n        return new org.jfrog.hudson.pipeline.common.types.JFrogPlatformInstance(artifactoryServer, distributionServer, step.url, \"\");\n    }\n}",
    "plausible_dependency_identifier": null,
    "error_info": {
        "py/object": "pipeline.types.error_info.ErrorInfo",
        "additional_info": "  symbol:   method isAllBlank(java.lang.String,java.lang.String,java.lang.String)\n  location: class org.jfrog.hudson.pipeline.scripted.steps.CreateJFrogPlatformInstanceStep.Execution\n",
        "error_message": "[ERROR] /artifactory-plugin/src/main/java/org/jfrog/hudson/pipeline/scripted/steps/CreateJFrogPlatformInstanceStep.java:[73,17] cannot find symbol",
        "client_file_path": "/artifactory-plugin/src/main/java/org/jfrog/hudson/pipeline/scripted/steps/CreateJFrogPlatformInstanceStep.java",
        "client_line_position": "73"
    },
    "client_end_line_number": 91,
    "client_line_number": 71,
    "method_code": "@Override\n        protected JFrogPlatformInstance run() throws Exception {\n            if (isAllBlank(step.url, step.artifactoryUrl, step.distributionUrl)) {\n                throw new IllegalArgumentException(\"At least one of the following is mandatory: 'url', 'artifactoryUrl', 'distributionUrl'\");\n            }\n            String urlWithoutSlash = removeEnd(step.url, \"/\");\n            String artifactoryUrl = defaultIfBlank(step.artifactoryUrl, urlWithoutSlash + \"/\" + \"artifactory\");\n            String distributionUrl = defaultIfBlank(step.distributionUrl, urlWithoutSlash + \"/\" + \"distribution\");\n\n            ArtifactoryServer artifactoryServer;\n            DistributionServer distributionServer;\n            if (!isEmpty(step.credentialsId)) {\n                artifactoryServer = new ArtifactoryServer(artifactoryUrl, step.credentialsId);\n                distributionServer = new DistributionServer(distributionUrl, step.credentialsId);\n            } else {\n                artifactoryServer = new ArtifactoryServer(artifactoryUrl, step.username, step.password);\n                distributionServer = new DistributionServer(distributionUrl, step.username, step.password);\n            }\n            artifactoryServer.setPlatformUrl(urlWithoutSlash);\n            return new JFrogPlatformInstance(artifactoryServer, distributionServer, step.url, \"\");\n        }",
    "qualified_code": "@java.lang.Override\nprotected org.jfrog.hudson.pipeline.common.types.JFrogPlatformInstance run() throws java.lang.Exception {\n    if (org.apache.commons.lang3.StringUtils.isAllBlank(step.url, step.artifactoryUrl, step.distributionUrl)) {\n        throw new java.lang.IllegalArgumentException(\"At least one of the following is mandatory: 'url', 'artifactoryUrl', 'distributionUrl'\");\n    }\n    java.lang.String urlWithoutSlash = org.apache.commons.lang3.StringUtils.removeEnd(step.url, \"/\");\n    java.lang.String artifactoryUrl = org.apache.commons.lang3.StringUtils.defaultIfBlank(step.artifactoryUrl, (urlWithoutSlash + \"/\") + \"artifactory\");\n    java.lang.String distributionUrl = org.apache.commons.lang3.StringUtils.defaultIfBlank(step.distributionUrl, (urlWithoutSlash + \"/\") + \"distribution\");\n    org.jfrog.hudson.pipeline.common.types.ArtifactoryServer artifactoryServer;\n    org.jfrog.hudson.pipeline.common.types.DistributionServer distributionServer;\n    if (!org.apache.commons.lang3.StringUtils.isEmpty(step.credentialsId)) {\n        artifactoryServer = new org.jfrog.hudson.pipeline.common.types.ArtifactoryServer(artifactoryUrl, step.credentialsId);\n        distributionServer = new org.jfrog.hudson.pipeline.common.types.DistributionServer(distributionUrl, step.credentialsId);\n    } else {\n        artifactoryServer = new org.jfrog.hudson.pipeline.common.types.ArtifactoryServer(artifactoryUrl, step.username, step.password);\n        distributionServer = new org.jfrog.hudson.pipeline.common.types.DistributionServer(distributionUrl, step.username, step.password);\n    }\n    artifactoryServer.setPlatformUrl(urlWithoutSlash);\n    return new org.jfrog.hudson.pipeline.common.types.JFrogPlatformInstance(artifactoryServer, distributionServer, step.url, \"\");\n}",
    "method_name": "run"
}