1,10d0
< /**
<          * Computes if a given class is to be included in the post-coverage computation
<          *
<          * If we have include-exclude patterns for Jacoco:
<          * - We include the class if it matches the include patterns and does not match the excludes patterns
<          * Else:
<          * - We include the class if it is available in the binary directories
<          * @param className
<          * @return true if the class should be included in the coverage result, false otherwise
<          */
11a2
>     WildcardMatcher matcher = new WildcardMatcher("");
14c5
<             WildcardMatcher matcher = new WildcardMatcher(pattern);
---
>         matcher.setPattern(pattern);
21c12
<             WildcardMatcher matcher = new WildcardMatcher(pattern);
---
>         matcher.setPattern(pattern);
27a19
>     File baseDir = new File(config.getBaseDirectory());
29c21
<             DirectoryScanner directoryScanner = new DirectoryScanner(new File(dir), TestListResolver.getWildcard());
---
>         DirectoryScanner directoryScanner = new DirectoryScanner(new File(baseDir, dir), TestListResolver.getWildcard());
35c27
<             DirectoryScanner directoryScanner = new DirectoryScanner(new File(dir), TestListResolver.getWildcard());
---
>         DirectoryScanner directoryScanner = new DirectoryScanner(new File(baseDir, dir), TestListResolver.getWildcard());
