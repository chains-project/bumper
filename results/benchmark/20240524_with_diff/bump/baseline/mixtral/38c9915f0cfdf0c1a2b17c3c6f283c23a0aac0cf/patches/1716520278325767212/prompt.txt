Act as an Automatic Program Repair (APR) tool, reply only with code, without explanation.
You are specialized in breaking dependency updates, in which the failure is caused by an external dependency.
To solve the failure you can only work on the client code.

the following client code fails:
```java
  import org.cactoos.text.TrimmedText;
```

with the following error message:
[ERROR] /java-api/src/main/java/io/zold/api/RtTransaction.java:[42,24] cannot find symbol
  symbol:   class TrimmedText
  location: package org.cactoos.text


the new library version includes the following changes, where `--` indicates a removal and `++` indicates an addition:
-- public Text$NoNulls org.cactoos.Text$NoNulls(org.cactoos.Text)
-- public java.lang.String org.cactoos.Text$NoNulls.asString()
++ public BytesOf org.cactoos.bytes.BytesOf(org.cactoos.Text)
++ public BytesOf org.cactoos.bytes.BytesOf(org.cactoos.Text,java.lang.CharSequence)
++ public BytesOf org.cactoos.bytes.BytesOf(org.cactoos.Text,java.nio.charset.Charset)
-- public HexBytes org.cactoos.bytes.HexBytes(org.cactoos.Text)
++ public HexOf org.cactoos.bytes.HexOf(org.cactoos.Text)
-- public BytesOf org.cactoos.io.BytesOf(org.cactoos.Text)
-- public BytesOf org.cactoos.io.BytesOf(org.cactoos.Text,java.lang.CharSequence)
-- public BytesOf org.cactoos.io.BytesOf(org.cactoos.Text,java.nio.charset.Charset)
++ public TempFile org.cactoos.io.TempFile(org.cactoos.Text,org.cactoos.Text)
++ public TempFolder org.cactoos.io.TempFolder(org.cactoos.Text)
++ public IterableOfBytes org.cactoos.iterable.IterableOfBytes(org.cactoos.Text)
++ public IterableOfChars org.cactoos.iterable.IterableOfChars(org.cactoos.Text)
++ public IteratorOfBytes org.cactoos.iterator.IteratorOfBytes(org.cactoos.Text)
++ public IteratorOfChars org.cactoos.iterator.IteratorOfChars(org.cactoos.Text)
++ public NumberOf org.cactoos.number.NumberOf(org.cactoos.Text)
++ public LengthOf org.cactoos.scalar.LengthOf(org.cactoos.Text)
-- public NumberOf org.cactoos.scalar.NumberOf(org.cactoos.Text)
++ public Abbreviated org.cactoos.text.Abbreviated(org.cactoos.Text)
++ public Abbreviated org.cactoos.text.Abbreviated(org.cactoos.Text,int)
-- public AbbreviatedText org.cactoos.text.AbbreviatedText(java.lang.String)
-- public AbbreviatedText org.cactoos.text.AbbreviatedText(java.lang.String,int)
-- public AbbreviatedText org.cactoos.text.AbbreviatedText(org.cactoos.Text)
-- public AbbreviatedText org.cactoos.text.AbbreviatedText(org.cactoos.Text,int)
-- public java.lang.String org.cactoos.text.AbbreviatedText.asString()
++ public Base64Decoded org.cactoos.text.Base64Decoded(org.cactoos.Text)
++ public Base64Encoded org.cactoos.text.Base64Encoded(org.cactoos.Text)
-- public Base64Text org.cactoos.text.Base64Text(java.lang.String)
-- public Base64Text org.cactoos.text.Base64Text(org.cactoos.Text)
-- public java.lang.String org.cactoos.text.Base64Text.asString()
++ public Capitalized org.cactoos.text.Capitalized(org.cactoos.Text)
-- public java.lang.String org.cactoos.text.ComparableText.asString()
++ public transient Concatenated org.cactoos.text.Concatenated(org.cactoos.Text[])
++ public Contains org.cactoos.text.Contains(java.lang.CharSequence,org.cactoos.Text)
++ public Contains org.cactoos.text.Contains(org.cactoos.Text,java.lang.String)
++ public Contains org.cactoos.text.Contains(org.cactoos.Text,org.cactoos.Text)
++ public EndsWith org.cactoos.text.EndsWith(org.cactoos.Text,java.lang.CharSequence)
++ public EndsWith org.cactoos.text.EndsWith(org.cactoos.Text,org.cactoos.Text)
++ public FormattedText org.cactoos.text.FormattedText(java.lang.CharSequence,java.util.Collection)
++ public FormattedText org.cactoos.text.FormattedText(java.lang.CharSequence,java.util.Locale,java.util.Collection)
-- public FormattedText org.cactoos.text.FormattedText(java.lang.String,java.util.Collection)
-- public FormattedText org.cactoos.text.FormattedText(java.lang.String,java.util.Locale,java.util.Collection)
-- public java.lang.String org.cactoos.text.FormattedText.asString()
++ public IoCheckedText org.cactoos.text.IoCheckedText(java.lang.CharSequence)
++ public IoCheckedText org.cactoos.text.IoCheckedText(org.cactoos.Text)
++ public IoCheckedText org.cactoos.text.IoCheckedText(org.cactoos.Text,org.cactoos.Func)
++ public java.lang.String org.cactoos.text.IoCheckedText.asString()
++ public bool org.cactoos.text.IoCheckedText.equals(java.lang.Object)
++ public int org.cactoos.text.IoCheckedText.hashCode()
++ public java.lang.String org.cactoos.text.IoCheckedText.toString()
++ public IsEmpty org.cactoos.text.IsEmpty(org.cactoos.Text)
++ public transient Joined org.cactoos.text.Joined(java.lang.CharSequence,org.cactoos.Text[])
++ public Joined org.cactoos.text.Joined(org.cactoos.Text,java.lang.Iterable)
++ public transient Joined org.cactoos.text.Joined(org.cactoos.Text,org.cactoos.Text[])
-- public JoinedText org.cactoos.text.JoinedText(java.lang.String,java.lang.Iterable)
-- public transient JoinedText org.cactoos.text.JoinedText(java.lang.String,java.lang.String[])
-- public JoinedText org.cactoos.text.JoinedText(org.cactoos.Text,java.lang.Iterable)
-- public transient JoinedText org.cactoos.text.JoinedText(org.cactoos.Text,org.cactoos.Text[])
-- public LowerText org.cactoos.text.LowerText(java.lang.String)
-- public LowerText org.cactoos.text.LowerText(org.cactoos.Text)
-- public LowerText org.cactoos.text.LowerText(org.cactoos.Text,java.util.Locale)
++ public Lowered org.cactoos.text.Lowered(org.cactoos.Text)
++ public Lowered org.cactoos.text.Lowered(org.cactoos.Text,java.util.Locale)
++ public Mapped org.cactoos.text.Mapped(org.cactoos.Func,org.cactoos.Text)
++ public NoNulls org.cactoos.text.NoNulls(org.cactoos.Text)
++ public Normalized org.cactoos.text.Normalized(org.cactoos.Text)
-- public NormalizedText org.cactoos.text.NormalizedText(java.lang.String)
-- public NormalizedText org.cactoos.text.NormalizedText(org.cactoos.Text)
++ public PaddedStart org.cactoos.text.PaddedStart(org.cactoos.Text,int,char)
-- public PaddedStartText org.cactoos.text.PaddedStartText(org.cactoos.Text,int,char)
++ public PrefixOf org.cactoos.text.PrefixOf(org.cactoos.Text,java.lang.CharSequence)
-- public RandomText org.cactoos.text.RandomText()
-- public transient RandomText org.cactoos.text.RandomText(java.lang.Character[])
-- public RandomText org.cactoos.text.RandomText(java.lang.Integer)
-- public transient RandomText org.cactoos.text.RandomText(java.lang.Integer,java.lang.Character[])
-- public RandomText org.cactoos.text.RandomText(java.util.List)
-- public RandomText org.cactoos.text.RandomText(java.util.List,org.cactoos.Scalar)
-- public RandomText org.cactoos.text.RandomText(java.util.List,org.cactoos.Scalar,java.util.Random)
-- public RandomText org.cactoos.text.RandomText(org.cactoos.Scalar)
-- public transient RandomText org.cactoos.text.RandomText(org.cactoos.Scalar,java.lang.Character[])
-- public java.lang.String org.cactoos.text.RandomText.asString()
++ public Repeated org.cactoos.text.Repeated(org.cactoos.Text,int)
-- public RepeatedText org.cactoos.text.RepeatedText(java.lang.String,int)
-- public RepeatedText org.cactoos.text.RepeatedText(org.cactoos.Text,int)
++ public Replaced org.cactoos.text.Replaced(org.cactoos.Text,java.lang.CharSequence,java.lang.CharSequence)
++ public Replaced org.cactoos.text.Replaced(org.cactoos.Text,org.cactoos.Scalar,org.cactoos.Func)
-- public ReplacedText org.cactoos.text.ReplacedText(org.cactoos.Text,java.lang.String,java.lang.String)
-- public ReplacedText org.cactoos.text.ReplacedText(org.cactoos.Text,org.cactoos.Scalar,org.cactoos.Func)
++ public Reversed org.cactoos.text.Reversed(org.cactoos.Text)
-- public ReversedText org.cactoos.text.ReversedText(org.cactoos.Text)
++ public Rotated org.cactoos.text.Rotated(org.cactoos.Text,int)
-- public RotatedText org.cactoos.text.RotatedText(org.cactoos.Text,int)
++ public Split org.cactoos.text.Split(java.lang.CharSequence,org.cactoos.Text)
++ public Split org.cactoos.text.Split(java.lang.CharSequence,org.cactoos.Text,int)
++ public Split org.cactoos.text.Split(org.cactoos.Text,java.lang.CharSequence)
++ public Split org.cactoos.text.Split(org.cactoos.Text,java.lang.CharSequence,int)
++ public Split org.cactoos.text.Split(org.cactoos.Text,org.cactoos.Text)
++ public Split org.cactoos.text.Split(org.cactoos.Text,org.cactoos.Text,int)
-- public SplitText org.cactoos.text.SplitText(java.lang.String,java.lang.String)
-- public SplitText org.cactoos.text.SplitText(java.lang.String,org.cactoos.Text)
-- public SplitText org.cactoos.text.SplitText(org.cactoos.Text,java.lang.String)
-- public SplitText org.cactoos.text.SplitText(org.cactoos.Text,org.cactoos.Text)
-- public SplitText org.cactoos.text.SplitText(org.cactoos.text.UncheckedText,org.cactoos.text.UncheckedText)
-- public java.util.Iterator org.cactoos.text.SplitText.iterator()
++ public StartsWith org.cactoos.text.StartsWith(org.cactoos.Text,org.cactoos.Text)
++ public Sticky org.cactoos.text.Sticky(org.cactoos.Text)
++ public Strict org.cactoos.text.Strict(java.util.regex.Pattern,org.cactoos.Text)
++ public Strict org.cactoos.text.Strict(org.cactoos.Func,org.cactoos.Text)
++ public Sub org.cactoos.text.Sub(org.cactoos.Text,int)
++ public Sub org.cactoos.text.Sub(org.cactoos.Text,int,int)
++ public Sub org.cactoos.text.Sub(org.cactoos.Text,int,org.cactoos.Func)
++ public Sub org.cactoos.text.Sub(org.cactoos.Text,int,org.cactoos.Scalar)
++ public Sub org.cactoos.text.Sub(org.cactoos.Text,org.cactoos.Func)
++ public Sub org.cactoos.text.Sub(org.cactoos.Text,org.cactoos.Func,org.cactoos.Func)
++ public Sub org.cactoos.text.Sub(org.cactoos.Text,org.cactoos.Scalar)
++ public Sub org.cactoos.text.Sub(org.cactoos.Text,org.cactoos.Scalar,org.cactoos.Func)
++ public Sub org.cactoos.text.Sub(org.cactoos.Text,org.cactoos.Scalar,org.cactoos.Scalar)
-- public SubText org.cactoos.text.SubText(java.lang.String,int)
-- public SubText org.cactoos.text.SubText(java.lang.String,int,int)
-- public SubText org.cactoos.text.SubText(org.cactoos.Text,int)
-- public SubText org.cactoos.text.SubText(org.cactoos.Text,int,int)
-- public SubText org.cactoos.text.SubText(org.cactoos.Text,org.cactoos.Scalar,org.cactoos.Scalar)
-- public SubText org.cactoos.text.SubText(org.cactoos.Text,org.cactoos.scalar.UncheckedScalar,org.cactoos.scalar.UncheckedScalar)
++ public SuffixOf org.cactoos.text.SuffixOf(org.cactoos.Text,java.lang.CharSequence)
++ public SwappedCase org.cactoos.text.SwappedCase(org.cactoos.Text)
-- public SwappedCaseText org.cactoos.text.SwappedCaseText(org.cactoos.Text)
-- public SyncText org.cactoos.text.SyncText(org.cactoos.Text)
-- public SyncText org.cactoos.text.SyncText(org.cactoos.Text,java.lang.Object)
-- public java.lang.String org.cactoos.text.SyncText.asString()
++ public Synced org.cactoos.text.Synced(org.cactoos.Text)
++ public Synced org.cactoos.text.Synced(org.cactoos.Text,java.lang.Object)
-- public TextBase64 org.cactoos.text.TextBase64(java.lang.String)
-- public TextBase64 org.cactoos.text.TextBase64(org.cactoos.Text)
-- public TextEnvelope org.cactoos.text.TextEnvelope(org.cactoos.Scalar)
-- public final java.lang.String org.cactoos.text.TextEnvelope.asString()
++ public final java.lang.String org.cactoos.text.TextEnvelope.asString()
-- public TextOf org.cactoos.text.TextOf(java.lang.String,java.nio.charset.Charset)
++ public TextOf org.cactoos.text.TextOf(java.util.Iterator)
++ public TextOfDateTime org.cactoos.text.TextOfDateTime(java.lang.String,java.time.LocalDate)
++ public TextOfDateTime org.cactoos.text.TextOfDateTime(java.lang.String,java.time.LocalDate,java.util.Locale)
++ public TextOfDateTime org.cactoos.text.TextOfDateTime(java.lang.String,java.time.LocalDateTime)
++ public TextOfDateTime org.cactoos.text.TextOfDateTime(java.lang.String,java.time.LocalDateTime,java.util.Locale)
++ public TextOfDateTime org.cactoos.text.TextOfDateTime(java.lang.String,java.time.OffsetDateTime)
++ public TextOfDateTime org.cactoos.text.TextOfDateTime(java.lang.String,java.time.OffsetDateTime,java.util.Locale)
++ public TextOfDateTime org.cactoos.text.TextOfDateTime(java.lang.String,java.time.ZonedDateTime)
++ public TextOfDateTime org.cactoos.text.TextOfDateTime(java.lang.String,java.time.ZonedDateTime,java.util.Locale)
++ public TextOfDateTime org.cactoos.text.TextOfDateTime(java.lang.String,java.util.Date)
++ public TextOfDateTime org.cactoos.text.TextOfDateTime(java.lang.String,java.util.Date,java.util.Locale)
++ public TextOfDateTime org.cactoos.text.TextOfDateTime(java.time.LocalDate)
++ public TextOfDateTime org.cactoos.text.TextOfDateTime(java.time.LocalDateTime)
++ public TextOfDateTime org.cactoos.text.TextOfDateTime(java.time.OffsetDateTime)
++ public TextOfDateTime org.cactoos.text.TextOfDateTime(java.time.ZonedDateTime)
++ public TextOfDateTime org.cactoos.text.TextOfDateTime(java.time.format.DateTimeFormatter,java.time.LocalDate)
++ public TextOfDateTime org.cactoos.text.TextOfDateTime(java.time.format.DateTimeFormatter,java.time.LocalDateTime)
++ public TextOfDateTime org.cactoos.text.TextOfDateTime(java.time.format.DateTimeFormatter,java.time.OffsetDateTime)
++ public TextOfDateTime org.cactoos.text.TextOfDateTime(java.time.format.DateTimeFormatter,java.time.ZonedDateTime)
++ public TextOfDateTime org.cactoos.text.TextOfDateTime(java.time.format.DateTimeFormatter,java.util.Date)
++ public TextOfDateTime org.cactoos.text.TextOfDateTime(java.util.Date)
++ public TextOfScalar org.cactoos.text.TextOfScalar(org.cactoos.Scalar)
++ public java.lang.String org.cactoos.text.TextOfScalar.asString()
++ public bool org.cactoos.text.TextOfScalar.equals(java.lang.Object)
++ public int org.cactoos.text.TextOfScalar.hashCode()
++ public java.lang.String org.cactoos.text.TextOfScalar.toString()
++ public TextOfString org.cactoos.text.TextOfString(java.lang.String)
++ public java.lang.String org.cactoos.text.TextOfString.asString()
++ public bool org.cactoos.text.TextOfString.equals(java.lang.Object)
++ public int org.cactoos.text.TextOfString.hashCode()
++ public java.lang.String org.cactoos.text.TextOfString.toString()
++ public Trimmed org.cactoos.text.Trimmed(org.cactoos.Text)
++ public TrimmedLeft org.cactoos.text.TrimmedLeft(org.cactoos.Text)
-- public TrimmedLeftText org.cactoos.text.TrimmedLeftText(org.cactoos.Text)
-- public java.lang.String org.cactoos.text.TrimmedLeftText.asString()
++ public TrimmedRight org.cactoos.text.TrimmedRight(org.cactoos.Text)
-- public TrimmedRightText org.cactoos.text.TrimmedRightText(org.cactoos.Text)
-- public java.lang.String org.cactoos.text.TrimmedRightText.asString()
-- public TrimmedText org.cactoos.text.TrimmedText(org.cactoos.Text)
-- public java.lang.String org.cactoos.text.TrimmedText.asString()
++ public UncheckedText org.cactoos.text.UncheckedText(java.lang.CharSequence)
-- public UncheckedText org.cactoos.text.UncheckedText(java.lang.String)
++ public bool org.cactoos.text.UncheckedText.equals(java.lang.Object)
++ public int org.cactoos.text.UncheckedText.hashCode()
++ public java.lang.String org.cactoos.text.UncheckedText.toString()
++ public Upper org.cactoos.text.Upper(org.cactoos.Text)
++ public Upper org.cactoos.text.Upper(org.cactoos.Text,java.util.Locale)
-- public UpperText org.cactoos.text.UpperText(java.lang.String)
-- public UpperText org.cactoos.text.UpperText(org.cactoos.Text)
-- public UpperText org.cactoos.text.UpperText(org.cactoos.Text,java.util.Locale)
-- public java.lang.String org.cactoos.text.UpperText.asString()
-- public DateAsText org.cactoos.time.DateAsText()
-- public DateAsText org.cactoos.time.DateAsText(java.util.Date)
-- public DateAsText org.cactoos.time.DateAsText(java.util.Date,java.lang.String)
-- public DateAsText org.cactoos.time.DateAsText(java.util.Date,java.lang.String,java.util.Locale)
-- public DateAsText org.cactoos.time.DateAsText(java.util.Date,java.time.format.DateTimeFormatter)
-- public DateAsText org.cactoos.time.DateAsText(long)
-- public DateAsText org.cactoos.time.DateAsText(long,java.lang.String)
-- public DateAsText org.cactoos.time.DateAsText(long,java.lang.String,java.util.Locale)
-- public java.lang.String org.cactoos.time.DateAsText.asString()
-- public LocalDateAsText org.cactoos.time.LocalDateAsText(java.time.LocalDate)
-- public LocalDateAsText org.cactoos.time.LocalDateAsText(java.time.LocalDate,java.lang.String)
-- public LocalDateAsText org.cactoos.time.LocalDateAsText(java.time.LocalDate,java.lang.String,java.util.Locale)
-- public LocalDateAsText org.cactoos.time.LocalDateAsText(java.time.LocalDate,java.time.format.DateTimeFormatter)
-- public java.lang.String org.cactoos.time.LocalDateAsText.asString()
-- public LocalDateTimeAsText org.cactoos.time.LocalDateTimeAsText(java.time.LocalDateTime)
-- public LocalDateTimeAsText org.cactoos.time.LocalDateTimeAsText(java.time.LocalDateTime,java.lang.String)
-- public LocalDateTimeAsText org.cactoos.time.LocalDateTimeAsText(java.time.LocalDateTime,java.lang.String,java.util.Locale)
-- public LocalDateTimeAsText org.cactoos.time.LocalDateTimeAsText(java.time.LocalDateTime,java.time.format.DateTimeFormatter)
-- public java.lang.String org.cactoos.time.LocalDateTimeAsText.asString()
-- public OffsetDateTimeAsText org.cactoos.time.OffsetDateTimeAsText(java.time.OffsetDateTime)
-- public OffsetDateTimeAsText org.cactoos.time.OffsetDateTimeAsText(java.time.OffsetDateTime,java.lang.String)
-- public OffsetDateTimeAsText org.cactoos.time.OffsetDateTimeAsText(java.time.OffsetDateTime,java.lang.String,java.util.Locale)
-- public OffsetDateTimeAsText org.cactoos.time.OffsetDateTimeAsText(java.time.OffsetDateTime,java.time.format.DateTimeFormatter)
-- public java.lang.String org.cactoos.time.OffsetDateTimeAsText.asString()
-- public ZonedDateTimeAsText org.cactoos.time.ZonedDateTimeAsText(java.time.ZonedDateTime)
-- public ZonedDateTimeAsText org.cactoos.time.ZonedDateTimeAsText(java.time.ZonedDateTime,java.lang.String)
-- public ZonedDateTimeAsText org.cactoos.time.ZonedDateTimeAsText(java.time.ZonedDateTime,java.lang.String,java.util.Locale)
-- public ZonedDateTimeAsText org.cactoos.time.ZonedDateTimeAsText(java.time.ZonedDateTime,java.time.format.DateTimeFormatter)
-- public java.lang.String org.cactoos.time.ZonedDateTimeAsText.asString()

propose a patch that I can apply to the code in order to fix the error.
Your response will be automatically parsed by an algorithm, be sure to only return the code.
be sure to return a code segment that can replace the entire failing client code.
you CANNOT change the function signature, but you can create variables if they help to make the code easier to understand.
you CAN remove the Override decorator IF AND ONLY IF the method is not overriding any method in the new version.
you CANNOT use removed library methods identified with `--`, but you CAN use added library methods identified with `++`.
DO NOT USE '--' or '++' to indicate changes you make on the code, be sure to return only code that can be compiled.
return only the fixed failing method, not the complete class code, you MUST change something in the code.
