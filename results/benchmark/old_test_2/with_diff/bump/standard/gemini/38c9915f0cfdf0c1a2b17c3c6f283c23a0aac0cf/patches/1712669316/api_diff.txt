-- public BiFunc$NoNulls org.cactoos.BiFunc$NoNulls(org.cactoos.BiFunc)
-- public java.lang.Object org.cactoos.BiFunc$NoNulls.apply(java.lang.Object,java.lang.Object)
-- public BiProc$NoNulls org.cactoos.BiProc$NoNulls(org.cactoos.BiProc)
-- public void org.cactoos.BiProc$NoNulls.exec(java.lang.Object,java.lang.Object)
-- public Bytes$NoNulls org.cactoos.Bytes$NoNulls(org.cactoos.Bytes)
-- public [B org.cactoos.Bytes$NoNulls.asBytes()
++ public Fallback$From org.cactoos.Fallback$From(java.lang.Class,org.cactoos.Func)
++ public Fallback$From org.cactoos.Fallback$From(java.lang.Iterable,org.cactoos.Func)
++ public java.lang.Object org.cactoos.Fallback$From.apply(java.lang.Throwable)
++ public int org.cactoos.Fallback$From.support(java.lang.Throwable)
++ public Fallback$None org.cactoos.Fallback$None()
++ public java.lang.Object org.cactoos.Fallback$None.apply(java.lang.Throwable)
++ public int org.cactoos.Fallback$None.support(java.lang.Throwable)
++ public abstract int org.cactoos.Fallback.support(java.lang.Throwable)
-- public Func$NoNulls org.cactoos.Func$NoNulls(org.cactoos.Func)
-- public java.lang.Object org.cactoos.Func$NoNulls.apply(java.lang.Object)
-- public Input$NoNulls org.cactoos.Input$NoNulls(org.cactoos.Input)
-- public java.io.InputStream org.cactoos.Input$NoNulls.stream()
-- public Output$NoNulls org.cactoos.Output$NoNulls(org.cactoos.Output)
-- public java.io.OutputStream org.cactoos.Output$NoNulls.stream()
-- public Proc$NoNulls org.cactoos.Proc$NoNulls(org.cactoos.Proc)
-- public void org.cactoos.Proc$NoNulls.exec(java.lang.Object)
-- public Scalar$NoNulls org.cactoos.Scalar$NoNulls(org.cactoos.Scalar)
-- public java.lang.Object org.cactoos.Scalar$NoNulls.value()
-- public Text$NoNulls org.cactoos.Text$NoNulls(org.cactoos.Text)
-- public java.lang.String org.cactoos.Text$NoNulls.asString()
++ public transient BytesOf org.cactoos.bytes.BytesOf(byte[])
++ public transient BytesOf org.cactoos.bytes.BytesOf(char[])
++ public BytesOf org.cactoos.bytes.BytesOf(char[],java.lang.CharSequence)
++ public BytesOf org.cactoos.bytes.BytesOf(char[],java.nio.charset.Charset)
++ public BytesOf org.cactoos.bytes.BytesOf(java.io.File)
++ public BytesOf org.cactoos.bytes.BytesOf(java.io.InputStream)
++ public BytesOf org.cactoos.bytes.BytesOf(java.io.Reader)
++ public BytesOf org.cactoos.bytes.BytesOf(java.io.Reader,int)
++ public BytesOf org.cactoos.bytes.BytesOf(java.io.Reader,java.lang.CharSequence)
++ public BytesOf org.cactoos.bytes.BytesOf(java.io.Reader,java.lang.CharSequence,int)
++ public BytesOf org.cactoos.bytes.BytesOf(java.io.Reader,java.nio.charset.Charset)
++ public BytesOf org.cactoos.bytes.BytesOf(java.io.Reader,java.nio.charset.Charset,int)
++ public BytesOf org.cactoos.bytes.BytesOf(java.lang.CharSequence)
++ public BytesOf org.cactoos.bytes.BytesOf(java.lang.CharSequence,java.lang.CharSequence)
++ public BytesOf org.cactoos.bytes.BytesOf(java.lang.CharSequence,java.nio.charset.Charset)
++ public BytesOf org.cactoos.bytes.BytesOf(java.lang.Iterable)
++ public transient BytesOf org.cactoos.bytes.BytesOf(java.lang.StackTraceElement[])
++ public BytesOf org.cactoos.bytes.BytesOf(java.lang.StackTraceElement[],java.lang.CharSequence)
++ public BytesOf org.cactoos.bytes.BytesOf(java.lang.StackTraceElement[],java.nio.charset.Charset)
++ public BytesOf org.cactoos.bytes.BytesOf(java.lang.Throwable)
++ public BytesOf org.cactoos.bytes.BytesOf(java.lang.Throwable,java.lang.CharSequence)
++ public BytesOf org.cactoos.bytes.BytesOf(java.lang.Throwable,java.nio.charset.Charset)
++ public BytesOf org.cactoos.bytes.BytesOf(java.nio.file.Path)
++ public BytesOf org.cactoos.bytes.BytesOf(java.util.Collection)
++ public BytesOf org.cactoos.bytes.BytesOf(java.util.Iterator)
++ public BytesOf org.cactoos.bytes.BytesOf(org.cactoos.Input)
++ public BytesOf org.cactoos.bytes.BytesOf(org.cactoos.Input,int)
++ public BytesOf org.cactoos.bytes.BytesOf(org.cactoos.Text)
++ public BytesOf org.cactoos.bytes.BytesOf(org.cactoos.Text,java.lang.CharSequence)
++ public BytesOf org.cactoos.bytes.BytesOf(org.cactoos.Text,java.nio.charset.Charset)
++ public [B org.cactoos.bytes.BytesOf.asBytes()
++ public CheckedBytes org.cactoos.bytes.CheckedBytes(org.cactoos.Bytes,org.cactoos.Func)
++ public [B org.cactoos.bytes.CheckedBytes.asBytes()
++ public DigestEnvelope org.cactoos.bytes.DigestEnvelope(org.cactoos.Input,int,java.lang.String)
++ public DigestEnvelope org.cactoos.bytes.DigestEnvelope(org.cactoos.Input,java.lang.String)
++ public [B org.cactoos.bytes.DigestEnvelope.asBytes()
++ public EmptyBytes org.cactoos.bytes.EmptyBytes()
++ public [B org.cactoos.bytes.EmptyBytes.asBytes()
-- public HexBytes org.cactoos.bytes.HexBytes(org.cactoos.Text)
-- public [B org.cactoos.bytes.HexBytes.asBytes()
++ public HexOf org.cactoos.bytes.HexOf(org.cactoos.Text)
++ public [B org.cactoos.bytes.HexOf.asBytes()
++ public [B org.cactoos.bytes.InputAsBytes.asBytes()
++ public IoCheckedBytes org.cactoos.bytes.IoCheckedBytes(org.cactoos.Bytes)
++ public IoCheckedBytes org.cactoos.bytes.IoCheckedBytes(org.cactoos.Bytes,org.cactoos.Fallback)
++ public [B org.cactoos.bytes.IoCheckedBytes.asBytes()
++ public Md5DigestOf org.cactoos.bytes.Md5DigestOf(org.cactoos.Input)
++ public Md5DigestOf org.cactoos.bytes.Md5DigestOf(org.cactoos.Input,int)
++ public NoNulls org.cactoos.bytes.NoNulls(org.cactoos.Bytes)
++ public [B org.cactoos.bytes.NoNulls.asBytes()
++ public Sha1DigestOf org.cactoos.bytes.Sha1DigestOf(org.cactoos.Input)
++ public Sha1DigestOf org.cactoos.bytes.Sha1DigestOf(org.cactoos.Input,int)
++ public Sha256DigestOf org.cactoos.bytes.Sha256DigestOf(org.cactoos.Input)
++ public Sha256DigestOf org.cactoos.bytes.Sha256DigestOf(org.cactoos.Input,int)
++ public UncheckedBytes org.cactoos.bytes.UncheckedBytes(org.cactoos.Bytes)
++ public UncheckedBytes org.cactoos.bytes.UncheckedBytes(org.cactoos.Bytes,org.cactoos.Fallback)
++ public [B org.cactoos.bytes.UncheckedBytes.asBytes()
++ public CollectionEnvelope org.cactoos.collection.CollectionEnvelope(java.util.Collection)
-- public CollectionEnvelope org.cactoos.collection.CollectionEnvelope(org.cactoos.Scalar)
-- public final bool org.cactoos.collection.CollectionEnvelope.equals(java.lang.Object)
-- public final int org.cactoos.collection.CollectionEnvelope.hashCode()
-- public final java.util.Iterator org.cactoos.collection.CollectionEnvelope.iterator()
-- public java.lang.String org.cactoos.collection.CollectionEnvelope.toString()
-- public CollectionNoNulls org.cactoos.collection.CollectionNoNulls(java.util.Collection)
-- public bool org.cactoos.collection.CollectionNoNulls.add(java.lang.Object)
-- public bool org.cactoos.collection.CollectionNoNulls.addAll(java.util.Collection)
-- public void org.cactoos.collection.CollectionNoNulls.clear()
-- public bool org.cactoos.collection.CollectionNoNulls.contains(java.lang.Object)
-- public bool org.cactoos.collection.CollectionNoNulls.containsAll(java.util.Collection)
-- public bool org.cactoos.collection.CollectionNoNulls.isEmpty()
-- public java.util.Iterator org.cactoos.collection.CollectionNoNulls.iterator()
-- public bool org.cactoos.collection.CollectionNoNulls.remove(java.lang.Object)
-- public bool org.cactoos.collection.CollectionNoNulls.removeAll(java.util.Collection)
-- public bool org.cactoos.collection.CollectionNoNulls.retainAll(java.util.Collection)
-- public int org.cactoos.collection.CollectionNoNulls.size()
-- public java.lang.Object org.cactoos.collection.CollectionNoNulls.toArray()
-- public java.lang.Object org.cactoos.collection.CollectionNoNulls.toArray(java.lang.Object[])
-- public CollectionOf org.cactoos.collection.CollectionOf(java.lang.Iterable)
-- public transient CollectionOf org.cactoos.collection.CollectionOf(java.lang.Object[])
-- public CollectionOf org.cactoos.collection.CollectionOf(java.util.Iterator)
-- public Filtered org.cactoos.collection.Filtered(org.cactoos.Func,java.lang.Iterable)
-- public transient Filtered org.cactoos.collection.Filtered(org.cactoos.Func,java.lang.Object[])
-- public Filtered org.cactoos.collection.Filtered(org.cactoos.Func,java.util.Iterator)
-- public HeadOf org.cactoos.collection.HeadOf(int,java.lang.Iterable)
-- public transient HeadOf org.cactoos.collection.HeadOf(int,java.lang.Object[])
-- public HeadOf org.cactoos.collection.HeadOf(int,java.util.Collection)
++ public Immutable org.cactoos.collection.Immutable(java.util.Collection)
++ public bool org.cactoos.collection.Immutable.add(java.lang.Object)
++ public bool org.cactoos.collection.Immutable.addAll(java.util.Collection)
++ public void org.cactoos.collection.Immutable.clear()
++ public bool org.cactoos.collection.Immutable.contains(java.lang.Object)
++ public bool org.cactoos.collection.Immutable.containsAll(java.util.Collection)
++ public bool org.cactoos.collection.Immutable.equals(java.lang.Object)
++ public int org.cactoos.collection.Immutable.hashCode()
++ public bool org.cactoos.collection.Immutable.isEmpty()
++ public java.util.Iterator org.cactoos.collection.Immutable.iterator()
++ public bool org.cactoos.collection.Immutable.remove(java.lang.Object)
++ public bool org.cactoos.collection.Immutable.removeAll(java.util.Collection)
++ public bool org.cactoos.collection.Immutable.retainAll(java.util.Collection)
++ public int org.cactoos.collection.Immutable.size()
++ public java.lang.Object org.cactoos.collection.Immutable.toArray()
++ public java.lang.Object org.cactoos.collection.Immutable.toArray(java.lang.Object[])
++ public java.lang.String org.cactoos.collection.Immutable.toString()
-- public Joined org.cactoos.collection.Joined(java.lang.Iterable)
-- public transient Joined org.cactoos.collection.Joined(java.lang.Iterable[])
-- public Mapped org.cactoos.collection.Mapped(org.cactoos.Func,java.lang.Iterable)
-- public transient Mapped org.cactoos.collection.Mapped(org.cactoos.Func,java.lang.Object[])
-- public Mapped org.cactoos.collection.Mapped(org.cactoos.Func,java.util.Collection)
-- public Mapped org.cactoos.collection.Mapped(org.cactoos.Func,java.util.Iterator)
-- public java.lang.String org.cactoos.collection.Mapped.toString()
++ public NoNulls org.cactoos.collection.NoNulls(java.util.Collection)
++ public bool org.cactoos.collection.NoNulls.add(java.lang.Object)
++ public bool org.cactoos.collection.NoNulls.addAll(java.util.Collection)
++ public void org.cactoos.collection.NoNulls.clear()
++ public bool org.cactoos.collection.NoNulls.contains(java.lang.Object)
++ public bool org.cactoos.collection.NoNulls.containsAll(java.util.Collection)
++ public bool org.cactoos.collection.NoNulls.equals(java.lang.Object)
++ public int org.cactoos.collection.NoNulls.hashCode()
++ public bool org.cactoos.collection.NoNulls.isEmpty()
++ public java.util.Iterator org.cactoos.collection.NoNulls.iterator()
++ public bool org.cactoos.collection.NoNulls.remove(java.lang.Object)
++ public bool org.cactoos.collection.NoNulls.removeAll(java.util.Collection)
++ public bool org.cactoos.collection.NoNulls.retainAll(java.util.Collection)
++ public int org.cactoos.collection.NoNulls.size()
++ public java.lang.Object org.cactoos.collection.NoNulls.toArray()
++ public java.lang.Object org.cactoos.collection.NoNulls.toArray(java.lang.Object[])
++ public java.lang.String org.cactoos.collection.NoNulls.toString()
-- public Reversed org.cactoos.collection.Reversed(java.lang.Iterable)
-- public transient Reversed org.cactoos.collection.Reversed(java.lang.Object[])
-- public Reversed org.cactoos.collection.Reversed(java.util.Collection)
-- public Shuffled org.cactoos.collection.Shuffled(java.lang.Iterable)
-- public transient Shuffled org.cactoos.collection.Shuffled(java.lang.Object[])
-- public Shuffled org.cactoos.collection.Shuffled(java.util.Collection)
-- public transient Skipped org.cactoos.collection.Skipped(int,java.lang.Object[])
-- public Skipped org.cactoos.collection.Skipped(java.lang.Iterable,int)
-- public Skipped org.cactoos.collection.Skipped(java.util.Collection,int)
-- public SolidCollection org.cactoos.collection.SolidCollection(java.lang.Iterable)
-- public transient SolidCollection org.cactoos.collection.SolidCollection(java.lang.Object[])
-- public SolidCollection org.cactoos.collection.SolidCollection(java.util.Collection)
-- public SolidCollection org.cactoos.collection.SolidCollection(java.util.Iterator)
-- public Sorted org.cactoos.collection.Sorted(java.lang.Iterable)
-- public transient Sorted org.cactoos.collection.Sorted(java.lang.Object[])
-- public Sorted org.cactoos.collection.Sorted(java.util.Comparator,java.lang.Iterable)
-- public transient Sorted org.cactoos.collection.Sorted(java.util.Comparator,java.lang.Object[])
-- public Sorted org.cactoos.collection.Sorted(java.util.Comparator,java.util.Collection)
-- public Sorted org.cactoos.collection.Sorted(java.util.Comparator,java.util.Iterator)
-- public StickyCollection org.cactoos.collection.StickyCollection(java.lang.Iterable)
-- public transient StickyCollection org.cactoos.collection.StickyCollection(java.lang.Object[])
-- public StickyCollection org.cactoos.collection.StickyCollection(java.util.Collection)
-- public StickyCollection org.cactoos.collection.StickyCollection(java.util.Iterator)
-- public SyncCollection org.cactoos.collection.SyncCollection(java.lang.Iterable)
-- public transient SyncCollection org.cactoos.collection.SyncCollection(java.lang.Object[])
-- public SyncCollection org.cactoos.collection.SyncCollection(java.util.Collection)
-- public SyncCollection org.cactoos.collection.SyncCollection(java.util.Iterator)
-- public TailOf org.cactoos.collection.TailOf(int,java.lang.Iterable)
-- public transient TailOf org.cactoos.collection.TailOf(int,java.lang.Object[])
-- public TailOf org.cactoos.collection.TailOf(int,java.util.Collection)
++ public Threads org.cactoos.experimental.Threads(int,java.lang.Iterable)
++ public Threads org.cactoos.experimental.Threads(int,java.time.Duration,java.lang.Iterable)
++ public transient Threads org.cactoos.experimental.Threads(int,java.time.Duration,org.cactoos.Scalar[])
++ public transient Threads org.cactoos.experimental.Threads(int,org.cactoos.Scalar[])
++ public Threads org.cactoos.experimental.Threads(java.util.concurrent.ExecutorService,java.lang.Iterable)
++ public Threads org.cactoos.experimental.Threads(java.util.concurrent.ExecutorService,java.time.Duration,java.lang.Iterable)
++ public transient Threads org.cactoos.experimental.Threads(java.util.concurrent.ExecutorService,java.time.Duration,org.cactoos.Scalar[])
++ public transient Threads org.cactoos.experimental.Threads(java.util.concurrent.ExecutorService,org.cactoos.Scalar[])
++ public Async org.cactoos.func.Async(org.cactoos.Func)
++ public Async org.cactoos.func.Async(org.cactoos.Func,java.util.concurrent.ExecutorService)
++ public Async org.cactoos.func.Async(org.cactoos.Func,java.util.concurrent.ThreadFactory)
++ public java.util.concurrent.Future org.cactoos.func.Async.apply(java.lang.Object)
++ public void org.cactoos.func.Async.exec(java.lang.Object)
-- public AsyncFunc org.cactoos.func.AsyncFunc(org.cactoos.Func)
-- public AsyncFunc org.cactoos.func.AsyncFunc(org.cactoos.Func,java.util.concurrent.ExecutorService)
-- public AsyncFunc org.cactoos.func.AsyncFunc(org.cactoos.Func,java.util.concurrent.ThreadFactory)
-- public AsyncFunc org.cactoos.func.AsyncFunc(org.cactoos.Proc)
-- public AsyncFunc org.cactoos.func.AsyncFunc(org.cactoos.Proc,java.util.concurrent.ExecutorService)
-- public AsyncFunc org.cactoos.func.AsyncFunc(org.cactoos.Proc,java.util.concurrent.ThreadFactory)
-- public java.util.concurrent.Future org.cactoos.func.AsyncFunc.apply(java.lang.Object)
-- public void org.cactoos.func.AsyncFunc.exec(java.lang.Object)
++ public BiFuncEnveloppe org.cactoos.func.BiFuncEnveloppe(org.cactoos.BiFunc)
++ public final java.lang.Object org.cactoos.func.BiFuncEnveloppe.apply(java.lang.Object,java.lang.Object)
++ public BiFuncNoNulls org.cactoos.func.BiFuncNoNulls(org.cactoos.BiFunc)
++ public java.lang.Object org.cactoos.func.BiFuncNoNulls.apply(java.lang.Object,java.lang.Object)
-- public BiFuncOf org.cactoos.func.BiFuncOf(java.lang.Object)
-- public BiFuncOf org.cactoos.func.BiFuncOf(java.lang.Runnable,java.lang.Object)
-- public BiFuncOf org.cactoos.func.BiFuncOf(java.util.concurrent.Callable)
-- public java.lang.Object org.cactoos.func.BiFuncOf.apply(java.lang.Object,java.lang.Object)
-- public CallableOf org.cactoos.func.CallableOf(java.lang.Runnable,java.lang.Object)
-- public CallableOf org.cactoos.func.CallableOf(org.cactoos.Func)
-- public CallableOf org.cactoos.func.CallableOf(org.cactoos.Func,java.lang.Object)
-- public CallableOf org.cactoos.func.CallableOf(org.cactoos.Proc,java.lang.Object)
-- public java.lang.Object org.cactoos.func.CallableOf.call()
++ public Chained org.cactoos.func.Chained(org.cactoos.Func,java.lang.Iterable,org.cactoos.Func)
++ public Chained org.cactoos.func.Chained(org.cactoos.Func,org.cactoos.Func)
++ public java.lang.Object org.cactoos.func.Chained.apply(java.lang.Object)
-- public ChainedFunc org.cactoos.func.ChainedFunc(org.cactoos.Func,java.lang.Iterable,org.cactoos.Func)
-- public ChainedFunc org.cactoos.func.ChainedFunc(org.cactoos.Func,org.cactoos.Func)
-- public java.lang.Object org.cactoos.func.ChainedFunc.apply(java.lang.Object)
-- public CheckedBiProc org.cactoos.func.CheckedBiProc(org.cactoos.BiProc,org.cactoos.Func)
-- public void org.cactoos.func.CheckedBiProc.exec(java.lang.Object,java.lang.Object)
-- public CheckedProc org.cactoos.func.CheckedProc(org.cactoos.Proc,org.cactoos.Func)
-- public void org.cactoos.func.CheckedProc.exec(java.lang.Object)
++ public Flattened org.cactoos.func.Flattened(org.cactoos.Func)
++ public FuncEnvelope org.cactoos.func.FuncEnvelope(org.cactoos.Func)
++ public final java.lang.Object org.cactoos.func.FuncEnvelope.apply(java.lang.Object)
++ public FuncNoNulls org.cactoos.func.FuncNoNulls(org.cactoos.Func)
++ public java.lang.Object org.cactoos.func.FuncNoNulls.apply(java.lang.Object)
-- public FuncOf org.cactoos.func.FuncOf(java.lang.Object)
-- public FuncOf org.cactoos.func.FuncOf(java.lang.Runnable,java.lang.Object)
-- public FuncOf org.cactoos.func.FuncOf(java.util.concurrent.Callable)
-- public FuncWithFallback org.cactoos.func.FuncWithFallback(org.cactoos.Func,java.lang.Iterable,org.cactoos.Func)
++ public transient FuncWithFallback org.cactoos.func.FuncWithFallback(org.cactoos.Func,org.cactoos.Fallback[])
-- public FuncWithFallback org.cactoos.func.FuncWithFallback(org.cactoos.Func,org.cactoos.scalar.FallbackFrom)
-- public FuncWithFallback org.cactoos.func.FuncWithFallback(org.cactoos.Func,org.cactoos.scalar.FallbackFrom,org.cactoos.Func)
-- public IoCheckedBiProc org.cactoos.func.IoCheckedBiProc(org.cactoos.BiProc)
-- public void org.cactoos.func.IoCheckedBiProc.exec(java.lang.Object,java.lang.Object)
-- public IoCheckedProc org.cactoos.func.IoCheckedProc(org.cactoos.Proc)
-- public void org.cactoos.func.IoCheckedProc.exec(java.lang.Object)
-- public ProcOf org.cactoos.func.ProcOf(java.lang.Runnable)
-- public ProcOf org.cactoos.func.ProcOf(java.util.concurrent.Callable)
-- public ProcOf org.cactoos.func.ProcOf(org.cactoos.Func)
-- public void org.cactoos.func.ProcOf.exec(java.lang.Object)
++ public Repeated org.cactoos.func.Repeated(org.cactoos.Func,int)
++ public java.lang.Object org.cactoos.func.Repeated.apply(java.lang.Object)
-- public RepeatedFunc org.cactoos.func.RepeatedFunc(org.cactoos.Func,int)
-- public RepeatedFunc org.cactoos.func.RepeatedFunc(org.cactoos.Proc,int)
-- public java.lang.Object org.cactoos.func.RepeatedFunc.apply(java.lang.Object)
++ public Retry org.cactoos.func.Retry(org.cactoos.Func)
++ public Retry org.cactoos.func.Retry(org.cactoos.Func,int)
++ public Retry org.cactoos.func.Retry(org.cactoos.Func,int,java.time.Duration)
++ public Retry org.cactoos.func.Retry(org.cactoos.Func,org.cactoos.Func)
++ public Retry org.cactoos.func.Retry(org.cactoos.Func,org.cactoos.Func,java.time.Duration)
++ public java.lang.Object org.cactoos.func.Retry.apply(java.lang.Object)
-- public RetryFunc org.cactoos.func.RetryFunc(org.cactoos.Func)
-- public RetryFunc org.cactoos.func.RetryFunc(org.cactoos.Func,int)
-- public RetryFunc org.cactoos.func.RetryFunc(org.cactoos.Func,org.cactoos.Func)
-- public RetryFunc org.cactoos.func.RetryFunc(org.cactoos.Proc)
-- public RetryFunc org.cactoos.func.RetryFunc(org.cactoos.Proc,int)
-- public RetryFunc org.cactoos.func.RetryFunc(org.cactoos.Proc,org.cactoos.Func)
-- public java.lang.Object org.cactoos.func.RetryFunc.apply(java.lang.Object)
-- public RunnableOf org.cactoos.func.RunnableOf(java.util.concurrent.Callable)
-- public RunnableOf org.cactoos.func.RunnableOf(org.cactoos.Func)
-- public RunnableOf org.cactoos.func.RunnableOf(org.cactoos.Func,java.lang.Object)
-- public RunnableOf org.cactoos.func.RunnableOf(org.cactoos.Proc)
-- public RunnableOf org.cactoos.func.RunnableOf(org.cactoos.Proc,java.lang.Object)
-- public void org.cactoos.func.RunnableOf.run()
-- public java.lang.Object org.cactoos.func.SolidBiFunc.apply(java.lang.Object,java.lang.Object)
-- public SyncFunc org.cactoos.func.SyncFunc(java.lang.Runnable,java.lang.Object)
-- public SyncFunc org.cactoos.func.SyncFunc(java.util.concurrent.Callable)
-- public SyncFunc org.cactoos.func.SyncFunc(org.cactoos.Proc,java.lang.Object)
++ public Timed org.cactoos.func.Timed(long,org.cactoos.Func)
++ public Timed org.cactoos.func.Timed(org.cactoos.Func,long)
++ public java.lang.Object org.cactoos.func.Timed.apply(java.lang.Object)
-- public TimedFunc org.cactoos.func.TimedFunc(long,org.cactoos.Func)
-- public TimedFunc org.cactoos.func.TimedFunc(org.cactoos.Func,long)
-- public TimedFunc org.cactoos.func.TimedFunc(org.cactoos.Proc,long)
-- public java.lang.Object org.cactoos.func.TimedFunc.apply(java.lang.Object)
-- public UncheckedBiProc org.cactoos.func.UncheckedBiProc(org.cactoos.BiProc)
-- public void org.cactoos.func.UncheckedBiProc.exec(java.lang.Object,java.lang.Object)
-- public UncheckedProc org.cactoos.func.UncheckedProc(org.cactoos.Proc)
-- public void org.cactoos.func.UncheckedProc.exec(java.lang.Object)
++ public AppendTo org.cactoos.io.AppendTo(java.io.File)
++ public AppendTo org.cactoos.io.AppendTo(java.nio.file.Path)
++ public java.io.OutputStream org.cactoos.io.AppendTo.stream()
-- public transient BytesOf org.cactoos.io.BytesOf(byte[])
-- public transient BytesOf org.cactoos.io.BytesOf(char[])
-- public BytesOf org.cactoos.io.BytesOf(char[],java.lang.CharSequence)
-- public BytesOf org.cactoos.io.BytesOf(char[],java.nio.charset.Charset)
-- public BytesOf org.cactoos.io.BytesOf(java.io.File)
-- public BytesOf org.cactoos.io.BytesOf(java.io.InputStream)
-- public BytesOf org.cactoos.io.BytesOf(java.io.Reader)
-- public BytesOf org.cactoos.io.BytesOf(java.io.Reader,int)
-- public BytesOf org.cactoos.io.BytesOf(java.io.Reader,java.lang.CharSequence)
-- public BytesOf org.cactoos.io.BytesOf(java.io.Reader,java.lang.CharSequence,int)
-- public BytesOf org.cactoos.io.BytesOf(java.io.Reader,java.nio.charset.Charset)
-- public BytesOf org.cactoos.io.BytesOf(java.io.Reader,java.nio.charset.Charset,int)
-- public BytesOf org.cactoos.io.BytesOf(java.lang.CharSequence)
-- public BytesOf org.cactoos.io.BytesOf(java.lang.CharSequence,java.lang.CharSequence)
-- public BytesOf org.cactoos.io.BytesOf(java.lang.CharSequence,java.nio.charset.Charset)
-- public transient BytesOf org.cactoos.io.BytesOf(java.lang.StackTraceElement[])
-- public BytesOf org.cactoos.io.BytesOf(java.lang.StackTraceElement[],java.lang.CharSequence)
-- public BytesOf org.cactoos.io.BytesOf(java.lang.StackTraceElement[],java.nio.charset.Charset)
-- public BytesOf org.cactoos.io.BytesOf(java.lang.Throwable)
-- public BytesOf org.cactoos.io.BytesOf(java.lang.Throwable,java.lang.CharSequence)
-- public BytesOf org.cactoos.io.BytesOf(java.lang.Throwable,java.nio.charset.Charset)
-- public BytesOf org.cactoos.io.BytesOf(java.nio.file.Path)
-- public BytesOf org.cactoos.io.BytesOf(org.cactoos.Input)
-- public BytesOf org.cactoos.io.BytesOf(org.cactoos.Input,int)
-- public BytesOf org.cactoos.io.BytesOf(org.cactoos.Text)
-- public BytesOf org.cactoos.io.BytesOf(org.cactoos.Text,java.lang.CharSequence)
-- public BytesOf org.cactoos.io.BytesOf(org.cactoos.Text,java.nio.charset.Charset)
-- public [B org.cactoos.io.BytesOf.asBytes()
-- public CheckedBytes org.cactoos.io.CheckedBytes(org.cactoos.Bytes,org.cactoos.Func)
-- public [B org.cactoos.io.CheckedBytes.asBytes()
++ public CloseShieldInput org.cactoos.io.CloseShieldInput(org.cactoos.Input)
++ public java.io.InputStream org.cactoos.io.CloseShieldInput.stream()
++ public CloseShieldInputStream org.cactoos.io.CloseShieldInputStream(java.io.InputStream)
++ public int org.cactoos.io.CloseShieldInputStream.available()
++ public void org.cactoos.io.CloseShieldInputStream.close()
++ public void org.cactoos.io.CloseShieldInputStream.mark(int)
++ public bool org.cactoos.io.CloseShieldInputStream.markSupported()
++ public int org.cactoos.io.CloseShieldInputStream.read()
++ public int org.cactoos.io.CloseShieldInputStream.read(byte[])
++ public int org.cactoos.io.CloseShieldInputStream.read(byte[],int,int)
++ public void org.cactoos.io.CloseShieldInputStream.reset()
++ public J org.cactoos.io.CloseShieldInputStream.skip(long)
++ public CloseShieldOutput org.cactoos.io.CloseShieldOutput(org.cactoos.Output)
++ public java.io.OutputStream org.cactoos.io.CloseShieldOutput.stream()
++ public CloseShieldOutputStream org.cactoos.io.CloseShieldOutputStream(java.io.OutputStream)
++ public void org.cactoos.io.CloseShieldOutputStream.close()
++ public void org.cactoos.io.CloseShieldOutputStream.flush()
++ public void org.cactoos.io.CloseShieldOutputStream.write(byte[])
++ public void org.cactoos.io.CloseShieldOutputStream.write(byte[],int,int)
++ public void org.cactoos.io.CloseShieldOutputStream.write(int)
-- public DigestEnvelope org.cactoos.io.DigestEnvelope(org.cactoos.Input,int,java.lang.String)
-- public DigestEnvelope org.cactoos.io.DigestEnvelope(org.cactoos.Input,java.lang.String)
-- public [B org.cactoos.io.DigestEnvelope.asBytes()
-- public EmptyBytes org.cactoos.io.EmptyBytes()
-- public [B org.cactoos.io.EmptyBytes.asBytes()
-- public HeadInput org.cactoos.io.HeadInput(org.cactoos.Input,int)
-- public java.io.InputStream org.cactoos.io.HeadInput.stream()
++ public HeadOf org.cactoos.io.HeadOf(org.cactoos.Input,int)
++ public java.io.InputStream org.cactoos.io.HeadOf.stream()
++ public InputNoNulls org.cactoos.io.InputNoNulls(org.cactoos.Input)
++ public java.io.InputStream org.cactoos.io.InputNoNulls.stream()
++ public Joined org.cactoos.io.Joined(java.lang.Iterable)
++ public transient Joined org.cactoos.io.Joined(org.cactoos.Input,org.cactoos.Input[])
++ public java.io.InputStream org.cactoos.io.Joined.stream()
-- public LengthOf org.cactoos.io.LengthOf(org.cactoos.Input)
-- public LengthOf org.cactoos.io.LengthOf(org.cactoos.Input,int)
-- public Md5DigestOf org.cactoos.io.Md5DigestOf(org.cactoos.Input)
-- public Md5DigestOf org.cactoos.io.Md5DigestOf(org.cactoos.Input,int)
++ public OutputNoNulls org.cactoos.io.OutputNoNulls(org.cactoos.Output)
++ public java.io.OutputStream org.cactoos.io.OutputNoNulls.stream()
++ public ResourceOf org.cactoos.io.ResourceOf(java.lang.CharSequence,java.lang.Class)
++ public ResourceOf org.cactoos.io.ResourceOf(java.lang.CharSequence,org.cactoos.Func,java.lang.Class)
-- public Sha1DigestOf org.cactoos.io.Sha1DigestOf(org.cactoos.Input)
-- public Sha1DigestOf org.cactoos.io.Sha1DigestOf(org.cactoos.Input,int)
-- public Sha256DigestOf org.cactoos.io.Sha256DigestOf(org.cactoos.Input)
-- public Sha256DigestOf org.cactoos.io.Sha256DigestOf(org.cactoos.Input,int)
++ public Stderr org.cactoos.io.Stderr()
++ public java.io.OutputStream org.cactoos.io.Stderr.stream()
-- public StderrOutput org.cactoos.io.StderrOutput()
-- public java.io.OutputStream org.cactoos.io.StderrOutput.stream()
++ public Stdin org.cactoos.io.Stdin()
++ public java.io.InputStream org.cactoos.io.Stdin.stream()
-- public StdinInput org.cactoos.io.StdinInput()
-- public java.io.InputStream org.cactoos.io.StdinInput.stream()
++ public Stdout org.cactoos.io.Stdout()
++ public java.io.OutputStream org.cactoos.io.Stdout.stream()
-- public StdoutOutput org.cactoos.io.StdoutOutput()
-- public java.io.OutputStream org.cactoos.io.StdoutOutput.stream()
++ public Sticky org.cactoos.io.Sticky(org.cactoos.Input)
++ public java.io.InputStream org.cactoos.io.Sticky.stream()
-- public StickyInput org.cactoos.io.StickyInput(org.cactoos.Input)
-- public java.io.InputStream org.cactoos.io.StickyInput.stream()
-- public TailInput org.cactoos.io.TailInput(org.cactoos.Input,int)
-- public TailInput org.cactoos.io.TailInput(org.cactoos.Input,int,int)
-- public java.io.InputStream org.cactoos.io.TailInput.stream()
++ public TailOf org.cactoos.io.TailOf(org.cactoos.Input,int)
++ public TailOf org.cactoos.io.TailOf(org.cactoos.Input,int,int)
++ public java.io.InputStream org.cactoos.io.TailOf.stream()
++ public TempFile org.cactoos.io.TempFile(org.cactoos.Text,org.cactoos.Text)
++ public TempFolder org.cactoos.io.TempFolder()
++ public TempFolder org.cactoos.io.TempFolder(java.lang.String)
++ public TempFolder org.cactoos.io.TempFolder(org.cactoos.Text)
++ public void org.cactoos.io.TempFolder.close()
++ public java.nio.file.Path org.cactoos.io.TempFolder.value()
-- public UncheckedBytes org.cactoos.io.UncheckedBytes(org.cactoos.Bytes)
-- public UncheckedBytes org.cactoos.io.UncheckedBytes(org.cactoos.Bytes,org.cactoos.Func)
-- public [B org.cactoos.io.UncheckedBytes.asBytes()
-- public Cycled org.cactoos.iterable.Cycled(java.util.Iterator)
++ public Filtered org.cactoos.iterable.Filtered(java.lang.Iterable,org.cactoos.Func)
-- public Filtered org.cactoos.iterable.Filtered(org.cactoos.Func,java.util.Iterator)
++ public IterableEnvelope org.cactoos.iterable.IterableEnvelope(java.lang.Iterable)
-- public IterableEnvelope org.cactoos.iterable.IterableEnvelope(org.cactoos.Scalar)
++ public final bool org.cactoos.iterable.IterableEnvelope.equals(java.lang.Object)
++ public final int org.cactoos.iterable.IterableEnvelope.hashCode()
++ public final java.lang.String org.cactoos.iterable.IterableEnvelope.toString()
-- public IterableNoNulls org.cactoos.iterable.IterableNoNulls(java.lang.Iterable)
-- public java.util.Iterator org.cactoos.iterable.IterableNoNulls.iterator()
-- public IterableOf org.cactoos.iterable.IterableOf(java.util.List)
++ public bool org.cactoos.iterable.IterableOf.equals(java.lang.Object)
++ public int org.cactoos.iterable.IterableOf.hashCode()
++ public java.util.Iterator org.cactoos.iterable.IterableOf.iterator()
++ public java.lang.String org.cactoos.iterable.IterableOf.toString()
++ public IterableOfBytes org.cactoos.iterable.IterableOfBytes(java.lang.String)
++ public IterableOfBytes org.cactoos.iterable.IterableOfBytes(org.cactoos.Bytes)
++ public IterableOfBytes org.cactoos.iterable.IterableOfBytes(org.cactoos.Text)
++ public IterableOfChars org.cactoos.iterable.IterableOfChars(java.lang.String)
++ public IterableOfChars org.cactoos.iterable.IterableOfChars(org.cactoos.Text)
-- public Joined org.cactoos.iterable.Joined(java.util.Iterator)
-- public LengthOf org.cactoos.iterable.LengthOf(java.lang.Iterable)
-- public Mapped org.cactoos.iterable.Mapped(org.cactoos.Func,java.util.Iterator)
-- public java.lang.String org.cactoos.iterable.Mapped.toString()
++ public MappedWithIndex org.cactoos.iterable.MappedWithIndex(org.cactoos.BiFunc,java.lang.Iterable)
++ public transient MappedWithIndex org.cactoos.iterable.MappedWithIndex(org.cactoos.BiFunc,java.lang.Object[])
++ public Matched org.cactoos.iterable.Matched(java.lang.Iterable,java.lang.Iterable)
++ public Matched org.cactoos.iterable.Matched(org.cactoos.BiFunc,java.lang.Iterable,java.lang.Iterable)
++ public NoNulls org.cactoos.iterable.NoNulls(java.lang.Iterable)
++ public java.util.Iterator org.cactoos.iterable.NoNulls.iterator()
++ public Paged org.cactoos.iterable.Paged(java.lang.Iterable,org.cactoos.Func)
-- public Repeated org.cactoos.iterable.Repeated(int,org.cactoos.scalar.UncheckedScalar)
-- public Reversed org.cactoos.iterable.Reversed(org.cactoos.collection.Reversed)
-- public Shuffled org.cactoos.iterable.Shuffled(java.util.Iterator)
++ public Shuffled org.cactoos.iterable.Shuffled(java.util.Random,java.lang.Iterable)
++ public Skipped org.cactoos.iterable.Skipped(int,java.lang.Iterable)
-- public Skipped org.cactoos.iterable.Skipped(java.lang.Iterable,int)
++ public Sliced org.cactoos.iterable.Sliced(int,int,java.lang.Iterable)
++ public transient Sliced org.cactoos.iterable.Sliced(int,int,java.lang.Object[])
++ public Solid org.cactoos.iterable.Solid(java.lang.Iterable)
++ public transient Solid org.cactoos.iterable.Solid(java.lang.Object[])
-- public SolidIterable org.cactoos.iterable.SolidIterable(java.lang.Iterable)
-- public transient SolidIterable org.cactoos.iterable.SolidIterable(java.lang.Object[])
++ public Sticky org.cactoos.iterable.Sticky(java.lang.Iterable)
++ public transient Sticky org.cactoos.iterable.Sticky(java.lang.Object[])
-- public StickyIterable org.cactoos.iterable.StickyIterable(java.lang.Iterable)
-- public transient StickyIterable org.cactoos.iterable.StickyIterable(java.lang.Object[])
-- public SyncIterable org.cactoos.iterable.SyncIterable(java.lang.Iterable)
-- public SyncIterable org.cactoos.iterable.SyncIterable(java.lang.Iterable,java.lang.Object)
-- public transient SyncIterable org.cactoos.iterable.SyncIterable(java.lang.Object[])
-- public java.util.Iterator org.cactoos.iterable.SyncIterable.iterator()
++ public Synced org.cactoos.iterable.Synced(java.lang.Iterable)
++ public Synced org.cactoos.iterable.Synced(java.lang.Object,java.lang.Iterable)
++ public transient Synced org.cactoos.iterable.Synced(java.lang.Object[])
++ public java.util.Iterator org.cactoos.iterable.Synced.iterator()
-- public Endless org.cactoos.iterator.Endless(org.cactoos.scalar.UncheckedScalar)
++ public Filtered org.cactoos.iterator.Filtered(java.util.Iterator,org.cactoos.Func)
-- public bool org.cactoos.iterator.HeadOf.hasNext()
-- public java.lang.Object org.cactoos.iterator.HeadOf.next()
++ public java.lang.String org.cactoos.iterator.Immutable.toString()
++ public IteratorEnvelope org.cactoos.iterator.IteratorEnvelope(java.util.Iterator)
++ public final bool org.cactoos.iterator.IteratorEnvelope.equals(java.lang.Object)
++ public final void org.cactoos.iterator.IteratorEnvelope.forEachRemaining(java.util.function.Consumer)
++ public final bool org.cactoos.iterator.IteratorEnvelope.hasNext()
++ public final int org.cactoos.iterator.IteratorEnvelope.hashCode()
++ public final java.lang.Object org.cactoos.iterator.IteratorEnvelope.next()
++ public final void org.cactoos.iterator.IteratorEnvelope.remove()
++ public final java.lang.String org.cactoos.iterator.IteratorEnvelope.toString()
-- public IteratorNoNulls org.cactoos.iterator.IteratorNoNulls(java.util.Iterator)
-- public bool org.cactoos.iterator.IteratorNoNulls.hasNext()
-- public java.lang.Object org.cactoos.iterator.IteratorNoNulls.next()
-- public void org.cactoos.iterator.IteratorNoNulls.remove()
++ public IteratorOfBytes org.cactoos.iterator.IteratorOfBytes(java.lang.String)
++ public IteratorOfBytes org.cactoos.iterator.IteratorOfBytes(org.cactoos.Bytes)
++ public IteratorOfBytes org.cactoos.iterator.IteratorOfBytes(org.cactoos.Text)
++ public IteratorOfChars org.cactoos.iterator.IteratorOfChars(java.lang.String)
++ public IteratorOfChars org.cactoos.iterator.IteratorOfChars(org.cactoos.Text)
++ public Joined org.cactoos.iterator.Joined(java.lang.Object,java.util.Iterator)
++ public Joined org.cactoos.iterator.Joined(java.util.Iterator,java.lang.Object)
-- public LengthOf org.cactoos.iterator.LengthOf(java.util.Iterator)
-- public bool org.cactoos.iterator.Mapped.hasNext()
-- public java.lang.Object org.cactoos.iterator.Mapped.next()
-- public void org.cactoos.iterator.Mapped.remove()
++ public MappedWithIndex org.cactoos.iterator.MappedWithIndex(org.cactoos.BiFunc,java.util.Iterator)
++ public Matched org.cactoos.iterator.Matched(org.cactoos.BiFunc,java.util.Iterator,java.util.Iterator)
++ public bool org.cactoos.iterator.Matched.hasNext()
++ public java.lang.Object org.cactoos.iterator.Matched.next()
++ public NoNulls org.cactoos.iterator.NoNulls(java.util.Iterator)
++ public bool org.cactoos.iterator.NoNulls.hasNext()
++ public java.lang.Object org.cactoos.iterator.NoNulls.next()
++ public void org.cactoos.iterator.NoNulls.remove()
++ public Paged org.cactoos.iterator.Paged(java.util.Iterator,org.cactoos.Func)
++ public bool org.cactoos.iterator.Paged.hasNext()
++ public java.lang.Object org.cactoos.iterator.Paged.next()
++ public RangeOf org.cactoos.iterator.RangeOf(java.lang.Comparable,java.lang.Comparable,org.cactoos.Func)
++ public bool org.cactoos.iterator.RangeOf.hasNext()
++ public java.lang.Comparable org.cactoos.iterator.RangeOf.next()
-- public Repeated org.cactoos.iterator.Repeated(int,org.cactoos.scalar.UncheckedScalar)
++ public transient Reversed org.cactoos.iterator.Reversed(java.lang.Object[])
++ public Reversed org.cactoos.iterator.Reversed(java.util.Iterator)
++ public bool org.cactoos.iterator.Reversed.hasNext()
++ public java.lang.Object org.cactoos.iterator.Reversed.next()
++ public Shuffled org.cactoos.iterator.Shuffled(java.util.Random,java.util.Iterator)
++ public Skipped org.cactoos.iterator.Skipped(int,java.util.Iterator)
-- public Skipped org.cactoos.iterator.Skipped(java.util.Iterator,int)
++ public Sliced org.cactoos.iterator.Sliced(int,int,java.util.Iterator)
++ public Sliced org.cactoos.iterator.Sliced(int,java.util.Iterator)
++ public bool org.cactoos.iterator.Sliced.hasNext()
++ public java.lang.Object org.cactoos.iterator.Sliced.next()
-- public SyncIterator org.cactoos.iterator.SyncIterator(java.util.Iterator)
-- public SyncIterator org.cactoos.iterator.SyncIterator(java.util.Iterator,java.util.concurrent.locks.ReadWriteLock)
-- public bool org.cactoos.iterator.SyncIterator.hasNext()
-- public java.lang.Object org.cactoos.iterator.SyncIterator.next()
++ public Synced org.cactoos.iterator.Synced(java.util.Iterator)
++ public Synced org.cactoos.iterator.Synced(java.util.concurrent.locks.ReadWriteLock,java.util.Iterator)
++ public bool org.cactoos.iterator.Synced.hasNext()
++ public java.lang.Object org.cactoos.iterator.Synced.next()
-- public bool org.cactoos.iterator.TailOf.hasNext()
-- public java.lang.Object org.cactoos.iterator.TailOf.next()
++ public Immutable org.cactoos.list.Immutable(java.util.List)
++ public void org.cactoos.list.Immutable.add(int,java.lang.Object)
++ public bool org.cactoos.list.Immutable.add(java.lang.Object)
++ public bool org.cactoos.list.Immutable.addAll(int,java.util.Collection)
++ public bool org.cactoos.list.Immutable.addAll(java.util.Collection)
++ public void org.cactoos.list.Immutable.clear()
++ public bool org.cactoos.list.Immutable.contains(java.lang.Object)
++ public bool org.cactoos.list.Immutable.containsAll(java.util.Collection)
++ public bool org.cactoos.list.Immutable.equals(java.lang.Object)
++ public java.lang.Object org.cactoos.list.Immutable.get(int)
++ public int org.cactoos.list.Immutable.hashCode()
++ public int org.cactoos.list.Immutable.indexOf(java.lang.Object)
++ public bool org.cactoos.list.Immutable.isEmpty()
++ public java.util.Iterator org.cactoos.list.Immutable.iterator()
++ public int org.cactoos.list.Immutable.lastIndexOf(java.lang.Object)
++ public java.util.ListIterator org.cactoos.list.Immutable.listIterator()
++ public java.util.ListIterator org.cactoos.list.Immutable.listIterator(int)
++ public java.lang.Object org.cactoos.list.Immutable.remove(int)
++ public bool org.cactoos.list.Immutable.remove(java.lang.Object)
++ public bool org.cactoos.list.Immutable.removeAll(java.util.Collection)
++ public bool org.cactoos.list.Immutable.retainAll(java.util.Collection)
++ public java.lang.Object org.cactoos.list.Immutable.set(int,java.lang.Object)
++ public int org.cactoos.list.Immutable.size()
++ public java.util.List org.cactoos.list.Immutable.subList(int,int)
++ public java.lang.Object org.cactoos.list.Immutable.toArray()
++ public java.lang.Object org.cactoos.list.Immutable.toArray(java.lang.Object[])
++ public java.lang.String org.cactoos.list.Immutable.toString()
++ public ImmutableListIterator org.cactoos.list.ImmutableListIterator(java.util.ListIterator)
++ public void org.cactoos.list.ImmutableListIterator.add(java.lang.Object)
++ public bool org.cactoos.list.ImmutableListIterator.hasNext()
++ public bool org.cactoos.list.ImmutableListIterator.hasPrevious()
++ public java.lang.Object org.cactoos.list.ImmutableListIterator.next()
++ public int org.cactoos.list.ImmutableListIterator.nextIndex()
++ public java.lang.Object org.cactoos.list.ImmutableListIterator.previous()
++ public int org.cactoos.list.ImmutableListIterator.previousIndex()
++ public void org.cactoos.list.ImmutableListIterator.remove()
++ public void org.cactoos.list.ImmutableListIterator.set(java.lang.Object)
++ public JoinedListIterator org.cactoos.list.JoinedListIterator(java.lang.Object,java.util.ListIterator)
++ public JoinedListIterator org.cactoos.list.JoinedListIterator(java.util.List)
++ public JoinedListIterator org.cactoos.list.JoinedListIterator(java.util.ListIterator,java.lang.Object)
++ public transient JoinedListIterator org.cactoos.list.JoinedListIterator(java.util.ListIterator[])
++ public void org.cactoos.list.JoinedListIterator.add(java.lang.Object)
++ public bool org.cactoos.list.JoinedListIterator.hasNext()
++ public bool org.cactoos.list.JoinedListIterator.hasPrevious()
++ public java.lang.Object org.cactoos.list.JoinedListIterator.next()
++ public int org.cactoos.list.JoinedListIterator.nextIndex()
++ public java.lang.Object org.cactoos.list.JoinedListIterator.previous()
++ public int org.cactoos.list.JoinedListIterator.previousIndex()
++ public void org.cactoos.list.JoinedListIterator.remove()
++ public void org.cactoos.list.JoinedListIterator.set(java.lang.Object)
++ public ListEnvelope org.cactoos.list.ListEnvelope(java.util.List)
-- public java.lang.String org.cactoos.list.ListEnvelope.toString()
-- public ListIterator org.cactoos.list.ListIterator(java.util.List)
-- public ListIterator org.cactoos.list.ListIterator(java.util.List,int)
-- public ListIterator org.cactoos.list.ListIterator(java.util.ListIterator)
-- public ListIterator org.cactoos.list.ListIterator(org.cactoos.Scalar)
-- public void org.cactoos.list.ListIterator.add(java.lang.Object)
-- public bool org.cactoos.list.ListIterator.hasNext()
-- public bool org.cactoos.list.ListIterator.hasPrevious()
-- public java.lang.Object org.cactoos.list.ListIterator.next()
-- public int org.cactoos.list.ListIterator.nextIndex()
-- public java.lang.Object org.cactoos.list.ListIterator.previous()
-- public int org.cactoos.list.ListIterator.previousIndex()
-- public void org.cactoos.list.ListIterator.remove()
-- public void org.cactoos.list.ListIterator.set(java.lang.Object)
++ public ListIteratorEnvelope org.cactoos.list.ListIteratorEnvelope(java.util.ListIterator)
++ public final void org.cactoos.list.ListIteratorEnvelope.add(java.lang.Object)
++ public final bool org.cactoos.list.ListIteratorEnvelope.hasNext()
++ public final bool org.cactoos.list.ListIteratorEnvelope.hasPrevious()
++ public final java.lang.Object org.cactoos.list.ListIteratorEnvelope.next()
++ public final int org.cactoos.list.ListIteratorEnvelope.nextIndex()
++ public final java.lang.Object org.cactoos.list.ListIteratorEnvelope.previous()
++ public final int org.cactoos.list.ListIteratorEnvelope.previousIndex()
++ public final void org.cactoos.list.ListIteratorEnvelope.remove()
++ public final void org.cactoos.list.ListIteratorEnvelope.set(java.lang.Object)
++ public ListIteratorNoNulls org.cactoos.list.ListIteratorNoNulls(java.util.ListIterator)
++ public void org.cactoos.list.ListIteratorNoNulls.add(java.lang.Object)
++ public bool org.cactoos.list.ListIteratorNoNulls.hasNext()
++ public bool org.cactoos.list.ListIteratorNoNulls.hasPrevious()
++ public java.lang.Object org.cactoos.list.ListIteratorNoNulls.next()
++ public int org.cactoos.list.ListIteratorNoNulls.nextIndex()
++ public java.lang.Object org.cactoos.list.ListIteratorNoNulls.previous()
++ public int org.cactoos.list.ListIteratorNoNulls.previousIndex()
++ public void org.cactoos.list.ListIteratorNoNulls.remove()
++ public void org.cactoos.list.ListIteratorNoNulls.set(java.lang.Object)
-- public void org.cactoos.list.ListNoNulls.add(int,java.lang.Object)
-- public bool org.cactoos.list.ListNoNulls.add(java.lang.Object)
-- public bool org.cactoos.list.ListNoNulls.addAll(int,java.util.Collection)
-- public bool org.cactoos.list.ListNoNulls.addAll(java.util.Collection)
-- public void org.cactoos.list.ListNoNulls.clear()
-- public bool org.cactoos.list.ListNoNulls.contains(java.lang.Object)
-- public bool org.cactoos.list.ListNoNulls.containsAll(java.util.Collection)
-- public java.lang.Object org.cactoos.list.ListNoNulls.get(int)
-- public int org.cactoos.list.ListNoNulls.indexOf(java.lang.Object)
-- public bool org.cactoos.list.ListNoNulls.isEmpty()
-- public java.util.Iterator org.cactoos.list.ListNoNulls.iterator()
-- public int org.cactoos.list.ListNoNulls.lastIndexOf(java.lang.Object)
-- public java.util.ListIterator org.cactoos.list.ListNoNulls.listIterator()
-- public java.util.ListIterator org.cactoos.list.ListNoNulls.listIterator(int)
-- public java.lang.Object org.cactoos.list.ListNoNulls.remove(int)
-- public bool org.cactoos.list.ListNoNulls.remove(java.lang.Object)
-- public bool org.cactoos.list.ListNoNulls.removeAll(java.util.Collection)
-- public bool org.cactoos.list.ListNoNulls.retainAll(java.util.Collection)
-- public java.lang.Object org.cactoos.list.ListNoNulls.set(int,java.lang.Object)
-- public int org.cactoos.list.ListNoNulls.size()
-- public java.util.List org.cactoos.list.ListNoNulls.subList(int,int)
-- public java.lang.Object org.cactoos.list.ListNoNulls.toArray()
-- public java.lang.Object org.cactoos.list.ListNoNulls.toArray(java.lang.Object[])
-- public Mapped org.cactoos.list.Mapped(org.cactoos.Func,java.lang.Iterable)
-- public Mapped org.cactoos.list.Mapped(org.cactoos.Func,java.util.Iterator)
-- public java.lang.String org.cactoos.list.Mapped.toString()
++ public void org.cactoos.list.NoNulls.add(int,java.lang.Object)
++ public bool org.cactoos.list.NoNulls.add(java.lang.Object)
++ public bool org.cactoos.list.NoNulls.addAll(int,java.util.Collection)
++ public bool org.cactoos.list.NoNulls.addAll(java.util.Collection)
++ public void org.cactoos.list.NoNulls.clear()
++ public bool org.cactoos.list.NoNulls.contains(java.lang.Object)
++ public bool org.cactoos.list.NoNulls.containsAll(java.util.Collection)
++ public java.lang.Object org.cactoos.list.NoNulls.get(int)
++ public int org.cactoos.list.NoNulls.indexOf(java.lang.Object)
++ public bool org.cactoos.list.NoNulls.isEmpty()
++ public java.util.Iterator org.cactoos.list.NoNulls.iterator()
++ public int org.cactoos.list.NoNulls.lastIndexOf(java.lang.Object)
++ public java.util.ListIterator org.cactoos.list.NoNulls.listIterator()
++ public java.util.ListIterator org.cactoos.list.NoNulls.listIterator(int)
++ public java.lang.Object org.cactoos.list.NoNulls.remove(int)
++ public bool org.cactoos.list.NoNulls.remove(java.lang.Object)
++ public bool org.cactoos.list.NoNulls.removeAll(java.util.Collection)
++ public bool org.cactoos.list.NoNulls.retainAll(java.util.Collection)
++ public java.lang.Object org.cactoos.list.NoNulls.set(int,java.lang.Object)
++ public int org.cactoos.list.NoNulls.size()
++ public java.util.List org.cactoos.list.NoNulls.subList(int,int)
++ public java.lang.Object org.cactoos.list.NoNulls.toArray()
++ public java.lang.Object org.cactoos.list.NoNulls.toArray(java.lang.Object[])
-- public Shuffled org.cactoos.list.Shuffled(java.lang.Iterable)
-- public transient Shuffled org.cactoos.list.Shuffled(java.lang.Object[])
-- public Shuffled org.cactoos.list.Shuffled(java.util.Collection)
-- public Shuffled org.cactoos.list.Shuffled(java.util.Iterator)
-- public SolidList org.cactoos.list.SolidList(java.lang.Iterable)
-- public transient SolidList org.cactoos.list.SolidList(java.lang.Object[])
-- public SolidList org.cactoos.list.SolidList(java.util.Collection)
-- public SolidList org.cactoos.list.SolidList(java.util.Iterator)
-- public Sorted org.cactoos.list.Sorted(java.lang.Iterable)
-- public transient Sorted org.cactoos.list.Sorted(java.lang.Object[])
-- public transient Sorted org.cactoos.list.Sorted(java.util.Comparator,java.lang.Object[])
-- public Sorted org.cactoos.list.Sorted(java.util.Comparator,java.util.Collection)
-- public Sorted org.cactoos.list.Sorted(java.util.Iterator)
-- public StickyList org.cactoos.list.StickyList(java.lang.Iterable)
-- public transient StickyList org.cactoos.list.StickyList(java.lang.Object[])
-- public StickyList org.cactoos.list.StickyList(java.util.Collection)
-- public StickyList org.cactoos.list.StickyList(java.util.Iterator)
-- public SyncList org.cactoos.list.SyncList(java.lang.Iterable)
-- public transient SyncList org.cactoos.list.SyncList(java.lang.Object[])
-- public SyncList org.cactoos.list.SyncList(java.util.Collection)
-- public SyncList org.cactoos.list.SyncList(java.util.Iterator)
++ public Synced org.cactoos.list.Synced(java.util.List)
++ public MapEnvelope org.cactoos.map.MapEnvelope(java.util.Map)
-- public MapEnvelope org.cactoos.map.MapEnvelope(org.cactoos.Scalar)
-- public MapNoNulls org.cactoos.map.MapNoNulls(java.util.Map)
-- public final void org.cactoos.map.MapNoNulls.clear()
-- public final bool org.cactoos.map.MapNoNulls.containsKey(java.lang.Object)
-- public final bool org.cactoos.map.MapNoNulls.containsValue(java.lang.Object)
-- public final java.util.Set org.cactoos.map.MapNoNulls.entrySet()
-- public final java.lang.Object org.cactoos.map.MapNoNulls.get(java.lang.Object)
-- public final bool org.cactoos.map.MapNoNulls.isEmpty()
-- public final java.util.Set org.cactoos.map.MapNoNulls.keySet()
-- public final java.lang.Object org.cactoos.map.MapNoNulls.put(java.lang.Object,java.lang.Object)
-- public final void org.cactoos.map.MapNoNulls.putAll(java.util.Map)
-- public final java.lang.Object org.cactoos.map.MapNoNulls.remove(java.lang.Object)
-- public final int org.cactoos.map.MapNoNulls.size()
-- public final java.util.Collection org.cactoos.map.MapNoNulls.values()
++ public MapOf org.cactoos.map.MapOf(java.lang.Object,java.lang.Object)
++ public MapOf org.cactoos.map.MapOf(java.util.Map,java.lang.Object,java.lang.Object)
++ public Merged org.cactoos.map.Merged(java.lang.Iterable)
++ public transient Merged org.cactoos.map.Merged(java.util.Map[])
++ public NoNulls org.cactoos.map.NoNulls(java.util.Map)
++ public final void org.cactoos.map.NoNulls.clear()
++ public final bool org.cactoos.map.NoNulls.containsKey(java.lang.Object)
++ public final bool org.cactoos.map.NoNulls.containsValue(java.lang.Object)
++ public final java.util.Set org.cactoos.map.NoNulls.entrySet()
++ public final java.lang.Object org.cactoos.map.NoNulls.get(java.lang.Object)
++ public final bool org.cactoos.map.NoNulls.isEmpty()
++ public final java.util.Set org.cactoos.map.NoNulls.keySet()
++ public final java.lang.Object org.cactoos.map.NoNulls.put(java.lang.Object,java.lang.Object)
++ public final void org.cactoos.map.NoNulls.putAll(java.util.Map)
++ public final java.lang.Object org.cactoos.map.NoNulls.remove(java.lang.Object)
++ public final int org.cactoos.map.NoNulls.size()
++ public final java.util.Collection org.cactoos.map.NoNulls.values()
-- public SolidMap org.cactoos.map.SolidMap(java.lang.Iterable)
-- public SolidMap org.cactoos.map.SolidMap(java.util.Iterator)
-- public transient SolidMap org.cactoos.map.SolidMap(java.util.Map$Entry[])
-- public SolidMap org.cactoos.map.SolidMap(java.util.Map)
-- public SolidMap org.cactoos.map.SolidMap(java.util.Map,java.lang.Iterable)
-- public transient SolidMap org.cactoos.map.SolidMap(java.util.Map,java.util.Map$Entry[])
-- public SolidMap org.cactoos.map.SolidMap(org.cactoos.Func,java.lang.Iterable)
-- public transient SolidMap org.cactoos.map.SolidMap(org.cactoos.Func,java.lang.Object[])
-- public SolidMap org.cactoos.map.SolidMap(org.cactoos.Func,java.util.Map,java.lang.Iterable)
-- public SolidMap org.cactoos.map.SolidMap(org.cactoos.Func,org.cactoos.Func,java.lang.Iterable)
-- public SolidMap org.cactoos.map.SolidMap(org.cactoos.Func,org.cactoos.Func,java.util.Map,java.lang.Iterable)
-- public StickyMap org.cactoos.map.StickyMap(java.lang.Iterable)
-- public StickyMap org.cactoos.map.StickyMap(java.util.Iterator)
-- public transient StickyMap org.cactoos.map.StickyMap(java.util.Map$Entry[])
-- public StickyMap org.cactoos.map.StickyMap(java.util.Map)
-- public StickyMap org.cactoos.map.StickyMap(java.util.Map,java.lang.Iterable)
-- public transient StickyMap org.cactoos.map.StickyMap(java.util.Map,java.util.Map$Entry[])
-- public StickyMap org.cactoos.map.StickyMap(org.cactoos.Func,java.lang.Iterable)
-- public transient StickyMap org.cactoos.map.StickyMap(org.cactoos.Func,java.lang.Object[])
-- public StickyMap org.cactoos.map.StickyMap(org.cactoos.Func,java.util.Map,java.lang.Iterable)
-- public StickyMap org.cactoos.map.StickyMap(org.cactoos.Func,org.cactoos.Func,java.lang.Iterable)
-- public StickyMap org.cactoos.map.StickyMap(org.cactoos.Func,org.cactoos.Func,java.util.Map,java.lang.Iterable)
-- public SyncMap org.cactoos.map.SyncMap(java.lang.Iterable)
-- public SyncMap org.cactoos.map.SyncMap(java.lang.Iterable,org.cactoos.Func,org.cactoos.Func)
-- public SyncMap org.cactoos.map.SyncMap(java.util.Iterator)
-- public transient SyncMap org.cactoos.map.SyncMap(java.util.Map$Entry[])
-- public SyncMap org.cactoos.map.SyncMap(java.util.Map)
-- public SyncMap org.cactoos.map.SyncMap(java.util.Map,java.lang.Iterable)
-- public transient SyncMap org.cactoos.map.SyncMap(java.util.Map,java.util.Map$Entry[])
-- public SyncMap org.cactoos.map.SyncMap(org.cactoos.Func,java.lang.Iterable)
-- public transient SyncMap org.cactoos.map.SyncMap(org.cactoos.Func,java.lang.Object[])
-- public SyncMap org.cactoos.map.SyncMap(org.cactoos.Func,java.util.Map,java.lang.Iterable)
-- public SyncMap org.cactoos.map.SyncMap(org.cactoos.Func,org.cactoos.Func,java.util.Map,java.lang.Iterable)
++ public Synced org.cactoos.map.Synced(java.lang.Iterable)
++ public Synced org.cactoos.map.Synced(java.lang.Iterable,org.cactoos.Func,org.cactoos.Func)
++ public transient Synced org.cactoos.map.Synced(java.util.Map$Entry[])
++ public Synced org.cactoos.map.Synced(java.util.Map)
++ public Synced org.cactoos.map.Synced(java.util.Map,java.lang.Iterable)
++ public transient Synced org.cactoos.map.Synced(java.util.Map,java.util.Map$Entry[])
++ public Synced org.cactoos.map.Synced(org.cactoos.Func,java.lang.Iterable)
++ public transient Synced org.cactoos.map.Synced(org.cactoos.Func,java.lang.Object[])
++ public Synced org.cactoos.map.Synced(org.cactoos.Func,java.util.Map,java.lang.Iterable)
++ public Synced org.cactoos.map.Synced(org.cactoos.Func,org.cactoos.Func,java.util.Map,java.lang.Iterable)
++ public AvgOf org.cactoos.number.AvgOf(java.lang.Iterable)
++ public transient AvgOf org.cactoos.number.AvgOf(java.lang.Number[])
++ public ComparableNumber org.cactoos.number.ComparableNumber(java.lang.Number)
++ public int org.cactoos.number.ComparableNumber.compareTo(java.lang.Number)
++ public DivisionOf org.cactoos.number.DivisionOf(java.lang.Number,java.lang.Number)
++ public DivisionOf org.cactoos.number.DivisionOf(java.math.BigDecimal,java.math.BigDecimal)
++ public MaxOf org.cactoos.number.MaxOf(java.lang.Iterable)
++ public transient MaxOf org.cactoos.number.MaxOf(java.lang.Number[])
++ public MinOf org.cactoos.number.MinOf(java.lang.Iterable)
++ public transient MinOf org.cactoos.number.MinOf(java.lang.Number[])
++ public MultiplicationOf org.cactoos.number.MultiplicationOf(java.lang.Iterable)
++ public transient MultiplicationOf org.cactoos.number.MultiplicationOf(java.lang.Number,java.lang.Number[])
++ public NumberEnvelope org.cactoos.number.NumberEnvelope(java.lang.Number)
++ public final B org.cactoos.number.NumberEnvelope.byteValue()
++ public final D org.cactoos.number.NumberEnvelope.doubleValue()
++ public final bool org.cactoos.number.NumberEnvelope.equals(java.lang.Object)
++ public final F org.cactoos.number.NumberEnvelope.floatValue()
++ public final int org.cactoos.number.NumberEnvelope.hashCode()
++ public final int org.cactoos.number.NumberEnvelope.intValue()
++ public final J org.cactoos.number.NumberEnvelope.longValue()
++ public final S org.cactoos.number.NumberEnvelope.shortValue()
++ public final java.lang.String org.cactoos.number.NumberEnvelope.toString()
++ public NumberOf org.cactoos.number.NumberOf(java.lang.String)
++ public NumberOf org.cactoos.number.NumberOf(org.cactoos.Text)
++ public NumberOfScalars org.cactoos.number.NumberOfScalars(org.cactoos.Scalar)
++ public NumberOfScalars org.cactoos.number.NumberOfScalars(org.cactoos.Scalar,org.cactoos.Scalar,org.cactoos.Scalar,org.cactoos.Scalar)
++ public D org.cactoos.number.NumberOfScalars.doubleValue()
++ public bool org.cactoos.number.NumberOfScalars.equals(java.lang.Object)
++ public F org.cactoos.number.NumberOfScalars.floatValue()
++ public int org.cactoos.number.NumberOfScalars.hashCode()
++ public int org.cactoos.number.NumberOfScalars.intValue()
++ public J org.cactoos.number.NumberOfScalars.longValue()
++ public java.lang.String org.cactoos.number.NumberOfScalars.toString()
++ public SumOf org.cactoos.number.SumOf(java.lang.Iterable)
++ public transient SumOf org.cactoos.number.SumOf(java.lang.Number[])
++ public BiProcEnvelope org.cactoos.proc.BiProcEnvelope(org.cactoos.BiProc)
++ public final void org.cactoos.proc.BiProcEnvelope.exec(java.lang.Object,java.lang.Object)
++ public BiProcNoNulls org.cactoos.proc.BiProcNoNulls(org.cactoos.BiProc)
++ public void org.cactoos.proc.BiProcNoNulls.exec(java.lang.Object,java.lang.Object)
++ public BiProcOf org.cactoos.proc.BiProcOf(org.cactoos.BiFunc)
++ public BiProcOf org.cactoos.proc.BiProcOf(org.cactoos.BiProc)
++ public BiProcOf org.cactoos.proc.BiProcOf(org.cactoos.Func)
++ public BiProcOf org.cactoos.proc.BiProcOf(org.cactoos.Proc)
++ public BiProcOf org.cactoos.proc.BiProcOf(org.cactoos.Proc,org.cactoos.Proc)
++ public CallableOf org.cactoos.proc.CallableOf(java.lang.Runnable)
++ public CallableOf org.cactoos.proc.CallableOf(java.util.concurrent.Callable)
++ public CallableOf org.cactoos.proc.CallableOf(org.cactoos.Proc,java.lang.Object)
++ public CallableOf org.cactoos.proc.CallableOf(org.cactoos.Scalar)
++ public java.lang.Object org.cactoos.proc.CallableOf.call()
++ public CheckedBiProc org.cactoos.proc.CheckedBiProc(org.cactoos.BiProc,org.cactoos.Func)
++ public void org.cactoos.proc.CheckedBiProc.exec(java.lang.Object,java.lang.Object)
++ public CheckedProc org.cactoos.proc.CheckedProc(org.cactoos.Proc,org.cactoos.Func)
++ public void org.cactoos.proc.CheckedProc.exec(java.lang.Object)
++ public ForEach org.cactoos.proc.ForEach(org.cactoos.Proc)
++ public void org.cactoos.proc.ForEach.exec(java.lang.Iterable)
++ public ForEachInThreads org.cactoos.proc.ForEachInThreads(org.cactoos.Proc)
++ public void org.cactoos.proc.ForEachInThreads.exec(java.lang.Iterable)
++ public ForEachWithIndex org.cactoos.proc.ForEachWithIndex(org.cactoos.BiProc)
++ public void org.cactoos.proc.ForEachWithIndex.exec(java.lang.Iterable)
++ public IoCheckedBiProc org.cactoos.proc.IoCheckedBiProc(org.cactoos.BiProc)
++ public void org.cactoos.proc.IoCheckedBiProc.exec(java.lang.Object,java.lang.Object)
++ public IoCheckedProc org.cactoos.proc.IoCheckedProc(org.cactoos.Proc)
++ public void org.cactoos.proc.IoCheckedProc.exec(java.lang.Object)
++ public ProcEnvelope org.cactoos.proc.ProcEnvelope(org.cactoos.Proc)
++ public final void org.cactoos.proc.ProcEnvelope.exec(java.lang.Object)
++ public ProcNoNulls org.cactoos.proc.ProcNoNulls(org.cactoos.Proc)
++ public void org.cactoos.proc.ProcNoNulls.exec(java.lang.Object)
++ public ProcOf org.cactoos.proc.ProcOf(org.cactoos.Func)
++ public ProcOf org.cactoos.proc.ProcOf(org.cactoos.Proc)
++ public RepeatedProc org.cactoos.proc.RepeatedProc(org.cactoos.Proc,int)
++ public void org.cactoos.proc.RepeatedProc.exec(java.lang.Object)
++ public RunnableEnvelope org.cactoos.proc.RunnableEnvelope(java.lang.Runnable)
++ public final void org.cactoos.proc.RunnableEnvelope.run()
++ public RunnableOf org.cactoos.proc.RunnableOf(java.lang.Runnable)
++ public RunnableOf org.cactoos.proc.RunnableOf(java.util.concurrent.Callable)
++ public RunnableOf org.cactoos.proc.RunnableOf(org.cactoos.Proc,java.lang.Object)
++ public RunnableOf org.cactoos.proc.RunnableOf(org.cactoos.Scalar)
++ public UncheckedBiProc org.cactoos.proc.UncheckedBiProc(org.cactoos.BiProc)
++ public void org.cactoos.proc.UncheckedBiProc.exec(java.lang.Object,java.lang.Object)
++ public UncheckedProc org.cactoos.proc.UncheckedProc(org.cactoos.Proc)
++ public void org.cactoos.proc.UncheckedProc.exec(java.lang.Object)
++ public And org.cactoos.scalar.And(java.lang.Object,java.lang.Iterable)
-- public And org.cactoos.scalar.And(java.util.Iterator)
-- public And org.cactoos.scalar.And(org.cactoos.Func,java.util.Iterator)
-- public And org.cactoos.scalar.And(org.cactoos.Proc,java.lang.Iterable)
-- public transient And org.cactoos.scalar.And(org.cactoos.Proc,java.lang.Object[])
-- public And org.cactoos.scalar.And(org.cactoos.Proc,java.util.Iterator)
-- public AndInThreads org.cactoos.scalar.AndInThreads(org.cactoos.Proc,java.lang.Iterable)
-- public transient AndInThreads org.cactoos.scalar.AndInThreads(org.cactoos.Proc,java.lang.Object[])
-- public AndWithIndex org.cactoos.scalar.AndWithIndex(java.util.Iterator)
-- public transient AvgOf org.cactoos.scalar.AvgOf(java.lang.Double[])
-- public transient AvgOf org.cactoos.scalar.AvgOf(java.lang.Float[])
-- public transient AvgOf org.cactoos.scalar.AvgOf(java.lang.Integer[])
-- public AvgOf org.cactoos.scalar.AvgOf(java.lang.Iterable)
-- public transient AvgOf org.cactoos.scalar.AvgOf(java.lang.Long[])
-- public transient AvgOf org.cactoos.scalar.AvgOf(org.cactoos.Scalar[])
++ public Binary org.cactoos.scalar.Binary(org.cactoos.Scalar,java.lang.Runnable)
++ public java.lang.Boolean org.cactoos.scalar.Binary.value()
++ public CallableEnvelope org.cactoos.scalar.CallableEnvelope(java.util.concurrent.Callable)
++ public final java.lang.Object org.cactoos.scalar.CallableEnvelope.call()
++ public CallableOf org.cactoos.scalar.CallableOf(org.cactoos.Scalar)
++ public Checked org.cactoos.scalar.Checked(org.cactoos.Scalar,org.cactoos.Func)
++ public java.lang.Object org.cactoos.scalar.Checked.value()
-- public CheckedScalar org.cactoos.scalar.CheckedScalar(org.cactoos.Scalar,org.cactoos.Func)
-- public java.lang.Object org.cactoos.scalar.CheckedScalar.value()
++ public Equals org.cactoos.scalar.Equals(java.lang.Comparable,java.lang.Object)
++ public EqualsNullable org.cactoos.scalar.EqualsNullable(java.lang.Object,java.lang.Object)
++ public EqualsNullable org.cactoos.scalar.EqualsNullable(java.lang.Object,org.cactoos.Scalar)
++ public EqualsNullable org.cactoos.scalar.EqualsNullable(org.cactoos.Scalar,java.lang.Object)
++ public EqualsNullable org.cactoos.scalar.EqualsNullable(org.cactoos.Scalar,org.cactoos.Scalar)
++ public java.lang.Boolean org.cactoos.scalar.EqualsNullable.value()
-- public FallbackFrom org.cactoos.scalar.FallbackFrom(java.lang.Class,org.cactoos.Func)
-- public FallbackFrom org.cactoos.scalar.FallbackFrom(java.lang.Iterable,org.cactoos.Func)
-- public java.lang.Object org.cactoos.scalar.FallbackFrom.apply(java.lang.Throwable)
-- public java.lang.Integer org.cactoos.scalar.FallbackFrom.support(java.lang.Class)
++ public FirstOf org.cactoos.scalar.FirstOf(java.lang.Iterable,java.lang.Object)
++ public FirstOf org.cactoos.scalar.FirstOf(java.lang.Iterable,org.cactoos.Scalar)
++ public Flattened org.cactoos.scalar.Flattened(org.cactoos.Scalar)
++ public HashCode org.cactoos.scalar.HashCode(int,int,java.lang.Iterable)
++ public transient HashCode org.cactoos.scalar.HashCode(int,int,java.lang.Object[])
++ public HashCode org.cactoos.scalar.HashCode(java.lang.Iterable)
++ public transient HashCode org.cactoos.scalar.HashCode(java.lang.Object[])
++ public java.lang.Integer org.cactoos.scalar.HashCode.value()
-- public java.lang.Comparable org.cactoos.scalar.HighestOf.value()
++ public IoChecked org.cactoos.scalar.IoChecked(org.cactoos.Scalar)
++ public java.lang.Object org.cactoos.scalar.IoChecked.value()
-- public IoCheckedScalar org.cactoos.scalar.IoCheckedScalar(org.cactoos.Scalar)
-- public java.lang.Object org.cactoos.scalar.IoCheckedScalar.value()
++ public ItemAt org.cactoos.scalar.ItemAt(int,java.lang.Object,java.lang.Iterable)
-- public ItemAt org.cactoos.scalar.ItemAt(int,java.util.Iterator)
++ public ItemAt org.cactoos.scalar.ItemAt(int,org.cactoos.Func,java.lang.Iterable)
-- public ItemAt org.cactoos.scalar.ItemAt(java.lang.Iterable)
-- public ItemAt org.cactoos.scalar.ItemAt(java.lang.Iterable,int,org.cactoos.Func)
-- public ItemAt org.cactoos.scalar.ItemAt(java.lang.Iterable,org.cactoos.Func)
-- public ItemAt org.cactoos.scalar.ItemAt(java.lang.Object,java.lang.Iterable)
-- public ItemAt org.cactoos.scalar.ItemAt(java.util.Iterator)
-- public ItemAt org.cactoos.scalar.ItemAt(java.util.Iterator,int)
-- public ItemAt org.cactoos.scalar.ItemAt(java.util.Iterator,int,org.cactoos.Func)
-- public ItemAt org.cactoos.scalar.ItemAt(java.util.Iterator,java.lang.Object)
-- public ItemAt org.cactoos.scalar.ItemAt(java.util.Iterator,org.cactoos.Func)
++ public LengthOf org.cactoos.scalar.LengthOf(java.lang.Iterable)
++ public LengthOf org.cactoos.scalar.LengthOf(org.cactoos.Input)
++ public LengthOf org.cactoos.scalar.LengthOf(org.cactoos.Input,int)
++ public LengthOf org.cactoos.scalar.LengthOf(org.cactoos.Text)
-- public java.lang.Comparable org.cactoos.scalar.LowestOf.value()
++ public Mapped org.cactoos.scalar.Mapped(org.cactoos.Func,org.cactoos.Scalar)
-- public transient MaxOf org.cactoos.scalar.MaxOf(java.lang.Double[])
-- public transient MaxOf org.cactoos.scalar.MaxOf(java.lang.Float[])
-- public transient MaxOf org.cactoos.scalar.MaxOf(java.lang.Integer[])
-- public MaxOf org.cactoos.scalar.MaxOf(java.lang.Iterable)
-- public transient MaxOf org.cactoos.scalar.MaxOf(java.lang.Long[])
-- public transient MinOf org.cactoos.scalar.MinOf(java.lang.Double[])
-- public transient MinOf org.cactoos.scalar.MinOf(java.lang.Float[])
-- public transient MinOf org.cactoos.scalar.MinOf(java.lang.Integer[])
-- public MinOf org.cactoos.scalar.MinOf(java.lang.Iterable)
-- public transient MinOf org.cactoos.scalar.MinOf(java.lang.Long[])
++ public NoNulls org.cactoos.scalar.NoNulls(org.cactoos.Scalar)
++ public java.lang.Object org.cactoos.scalar.NoNulls.value()
-- public NumberEnvelope org.cactoos.scalar.NumberEnvelope(org.cactoos.Scalar)
-- public NumberEnvelope org.cactoos.scalar.NumberEnvelope(org.cactoos.Scalar,org.cactoos.Scalar,org.cactoos.Scalar,org.cactoos.Scalar)
-- public final D org.cactoos.scalar.NumberEnvelope.doubleValue()
-- public final F org.cactoos.scalar.NumberEnvelope.floatValue()
-- public final int org.cactoos.scalar.NumberEnvelope.intValue()
-- public final J org.cactoos.scalar.NumberEnvelope.longValue()
-- public final java.lang.Double org.cactoos.scalar.NumberEnvelope.value()
-- public NumberOf org.cactoos.scalar.NumberOf(java.lang.String)
-- public NumberOf org.cactoos.scalar.NumberOf(org.cactoos.Text)
-- public D org.cactoos.scalar.NumberOf.doubleValue()
-- public F org.cactoos.scalar.NumberOf.floatValue()
-- public int org.cactoos.scalar.NumberOf.intValue()
-- public J org.cactoos.scalar.NumberOf.longValue()
-- public java.lang.Number org.cactoos.scalar.NumberOf.value()
-- public Or org.cactoos.scalar.Or(java.util.Iterator)
-- public Or org.cactoos.scalar.Or(org.cactoos.Func,java.util.Iterator)
-- public Or org.cactoos.scalar.Or(org.cactoos.Proc,java.util.Iterator)
++ public Reduced org.cactoos.scalar.Reduced(java.lang.Iterable,org.cactoos.BiFunc)
++ public Repeated org.cactoos.scalar.Repeated(org.cactoos.Scalar,int)
++ public java.lang.Object org.cactoos.scalar.Repeated.value()
++ public Retry org.cactoos.scalar.Retry(org.cactoos.Scalar)
++ public Retry org.cactoos.scalar.Retry(org.cactoos.Scalar,int)
++ public Retry org.cactoos.scalar.Retry(org.cactoos.Scalar,int,java.time.Duration)
++ public Retry org.cactoos.scalar.Retry(org.cactoos.Scalar,java.time.Duration)
++ public Retry org.cactoos.scalar.Retry(org.cactoos.Scalar,org.cactoos.Func)
++ public Retry org.cactoos.scalar.Retry(org.cactoos.Scalar,org.cactoos.Func,java.time.Duration)
++ public java.lang.Object org.cactoos.scalar.Retry.value()
-- public RetryScalar org.cactoos.scalar.RetryScalar(org.cactoos.Scalar)
-- public RetryScalar org.cactoos.scalar.RetryScalar(org.cactoos.Scalar,int)
-- public RetryScalar org.cactoos.scalar.RetryScalar(org.cactoos.Scalar,org.cactoos.Func)
-- public java.lang.Object org.cactoos.scalar.RetryScalar.value()
++ public ScalarEnvelope org.cactoos.scalar.ScalarEnvelope(org.cactoos.Scalar)
++ public final java.lang.Object org.cactoos.scalar.ScalarEnvelope.value()
++ public ScalarOf org.cactoos.scalar.ScalarOf(java.lang.Runnable,java.lang.Object)
++ public ScalarOf org.cactoos.scalar.ScalarOf(java.util.concurrent.Callable)
++ public ScalarOf org.cactoos.scalar.ScalarOf(org.cactoos.Func,java.lang.Object)
++ public ScalarOf org.cactoos.scalar.ScalarOf(org.cactoos.Proc,java.lang.Object,java.lang.Object)
++ public ScalarOfSupplier org.cactoos.scalar.ScalarOfSupplier(java.util.function.Supplier)
++ public ScalarWithFallback org.cactoos.scalar.ScalarWithFallback(org.cactoos.Scalar,java.lang.Iterable)
-- public ScalarWithFallback org.cactoos.scalar.ScalarWithFallback(org.cactoos.Scalar,java.lang.Iterable,org.cactoos.Func)
++ public transient ScalarWithFallback org.cactoos.scalar.ScalarWithFallback(org.cactoos.Scalar,org.cactoos.Fallback[])
++ public Solid org.cactoos.scalar.Solid(org.cactoos.Scalar)
++ public java.lang.Object org.cactoos.scalar.Solid.value()
-- public SolidScalar org.cactoos.scalar.SolidScalar(org.cactoos.Scalar)
-- public java.lang.Object org.cactoos.scalar.SolidScalar.value()
++ public Sticky org.cactoos.scalar.Sticky(org.cactoos.Scalar)
++ public java.lang.Object org.cactoos.scalar.Sticky.value()
-- public StickyScalar org.cactoos.scalar.StickyScalar(org.cactoos.Scalar)
-- public java.lang.Object org.cactoos.scalar.StickyScalar.value()
-- public transient SumOf org.cactoos.scalar.SumOf(java.lang.Double[])
-- public transient SumOf org.cactoos.scalar.SumOf(java.lang.Float[])
-- public transient SumOf org.cactoos.scalar.SumOf(java.lang.Integer[])
-- public SumOf org.cactoos.scalar.SumOf(java.lang.Iterable)
-- public transient SumOf org.cactoos.scalar.SumOf(java.lang.Long[])
-- public transient SumOfDoubleScalar org.cactoos.scalar.SumOfDoubleScalar(org.cactoos.Scalar[])
-- public java.lang.Double org.cactoos.scalar.SumOfDoubleScalar.value()
-- public transient SumOfFloatScalar org.cactoos.scalar.SumOfFloatScalar(org.cactoos.Scalar[])
-- public java.lang.Float org.cactoos.scalar.SumOfFloatScalar.value()
-- public transient SumOfIntScalar org.cactoos.scalar.SumOfIntScalar(org.cactoos.Scalar[])
-- public java.lang.Integer org.cactoos.scalar.SumOfIntScalar.value()
-- public transient SumOfLongScalar org.cactoos.scalar.SumOfLongScalar(org.cactoos.Scalar[])
-- public java.lang.Long org.cactoos.scalar.SumOfLongScalar.value()
-- public SyncScalar org.cactoos.scalar.SyncScalar(org.cactoos.Scalar)
-- public SyncScalar org.cactoos.scalar.SyncScalar(org.cactoos.Scalar,java.lang.Object)
-- public java.lang.Object org.cactoos.scalar.SyncScalar.value()
++ public Synced org.cactoos.scalar.Synced(org.cactoos.Scalar)
++ public Synced org.cactoos.scalar.Synced(org.cactoos.Scalar,java.lang.Object)
++ public java.lang.Object org.cactoos.scalar.Synced.value()
++ public Ternary org.cactoos.scalar.Ternary(boolean,org.cactoos.Scalar,org.cactoos.Scalar)
++ public Ternary org.cactoos.scalar.Ternary(org.cactoos.Scalar,org.cactoos.Func,org.cactoos.Func,org.cactoos.Func)
-- public java.lang.Object org.cactoos.scalar.Ternary.value()
++ public Unchecked org.cactoos.scalar.Unchecked(org.cactoos.Scalar)
++ public java.lang.Object org.cactoos.scalar.Unchecked.value()
-- public UncheckedScalar org.cactoos.scalar.UncheckedScalar(org.cactoos.Scalar)
-- public java.lang.Object org.cactoos.scalar.UncheckedScalar.value()
++ public Xor org.cactoos.scalar.Xor(java.lang.Iterable)
++ public transient Xor org.cactoos.scalar.Xor(org.cactoos.Scalar[])
++ public SetEnvelope org.cactoos.set.SetEnvelope(java.util.Set)
++ public SetOf org.cactoos.set.SetOf(java.lang.Iterable)
++ public transient SetOf org.cactoos.set.SetOf(java.lang.Object[])
++ public Sorted org.cactoos.set.Sorted(java.util.Comparator,java.lang.Iterable)
++ public transient Sorted org.cactoos.set.Sorted(java.util.Comparator,java.lang.Object[])
++ protected SortedSetEnvelope org.cactoos.set.SortedSetEnvelope(java.util.SortedSet)
++ public final java.util.Comparator org.cactoos.set.SortedSetEnvelope.comparator()
++ public final java.lang.Object org.cactoos.set.SortedSetEnvelope.first()
++ public final java.util.SortedSet org.cactoos.set.SortedSetEnvelope.headSet(java.lang.Object)
++ public final java.lang.Object org.cactoos.set.SortedSetEnvelope.last()
++ public final java.util.SortedSet org.cactoos.set.SortedSetEnvelope.subSet(java.lang.Object,java.lang.Object)
++ public final java.util.SortedSet org.cactoos.set.SortedSetEnvelope.tailSet(java.lang.Object)
++ public Abbreviated org.cactoos.text.Abbreviated(java.lang.CharSequence)
++ public Abbreviated org.cactoos.text.Abbreviated(java.lang.CharSequence,int)
++ public Abbreviated org.cactoos.text.Abbreviated(org.cactoos.Text)
++ public Abbreviated org.cactoos.text.Abbreviated(org.cactoos.Text,int)
-- public AbbreviatedText org.cactoos.text.AbbreviatedText(java.lang.String)
-- public AbbreviatedText org.cactoos.text.AbbreviatedText(java.lang.String,int)
-- public AbbreviatedText org.cactoos.text.AbbreviatedText(org.cactoos.Text)
-- public AbbreviatedText org.cactoos.text.AbbreviatedText(org.cactoos.Text,int)
-- public java.lang.String org.cactoos.text.AbbreviatedText.asString()
++ public Base64Decoded org.cactoos.text.Base64Decoded(java.lang.CharSequence)
++ public Base64Decoded org.cactoos.text.Base64Decoded(org.cactoos.Text)
++ public Base64Encoded org.cactoos.text.Base64Encoded(java.lang.CharSequence)
++ public Base64Encoded org.cactoos.text.Base64Encoded(org.cactoos.Text)
-- public Base64Text org.cactoos.text.Base64Text(java.lang.String)
-- public Base64Text org.cactoos.text.Base64Text(org.cactoos.Text)
-- public java.lang.String org.cactoos.text.Base64Text.asString()
++ public Capitalized org.cactoos.text.Capitalized(java.lang.CharSequence)
++ public Capitalized org.cactoos.text.Capitalized(org.cactoos.Text)
-- public java.lang.String org.cactoos.text.ComparableText.asString()
++ public transient Concatenated org.cactoos.text.Concatenated(java.lang.CharSequence[])
++ public Concatenated org.cactoos.text.Concatenated(java.lang.Iterable)
++ public transient Concatenated org.cactoos.text.Concatenated(org.cactoos.Text[])
++ public Contains org.cactoos.text.Contains(java.lang.CharSequence,java.lang.CharSequence)
++ public Contains org.cactoos.text.Contains(java.lang.CharSequence,org.cactoos.Text)
++ public Contains org.cactoos.text.Contains(org.cactoos.Text,java.lang.String)
++ public Contains org.cactoos.text.Contains(org.cactoos.Text,org.cactoos.Text)
++ public java.lang.Boolean org.cactoos.text.Contains.value()
++ public EndsWith org.cactoos.text.EndsWith(org.cactoos.Text,java.lang.CharSequence)
++ public EndsWith org.cactoos.text.EndsWith(org.cactoos.Text,org.cactoos.Text)
++ public java.lang.Boolean org.cactoos.text.EndsWith.value()
++ public Flattened org.cactoos.text.Flattened(org.cactoos.Scalar)
++ public FormattedText org.cactoos.text.FormattedText(java.lang.CharSequence,java.util.Collection)
++ public FormattedText org.cactoos.text.FormattedText(java.lang.CharSequence,java.util.Locale,java.util.Collection)
-- public FormattedText org.cactoos.text.FormattedText(java.lang.String,java.util.Collection)
-- public FormattedText org.cactoos.text.FormattedText(java.lang.String,java.util.Locale,java.util.Collection)
-- public java.lang.String org.cactoos.text.FormattedText.asString()
-- public java.lang.String org.cactoos.text.HexOf.asString()
++ public IoCheckedText org.cactoos.text.IoCheckedText(java.lang.CharSequence)
++ public IoCheckedText org.cactoos.text.IoCheckedText(org.cactoos.Text)
++ public IoCheckedText org.cactoos.text.IoCheckedText(org.cactoos.Text,org.cactoos.Func)
++ public java.lang.String org.cactoos.text.IoCheckedText.asString()
++ public bool org.cactoos.text.IoCheckedText.equals(java.lang.Object)
++ public int org.cactoos.text.IoCheckedText.hashCode()
++ public java.lang.String org.cactoos.text.IoCheckedText.toString()
++ public IsEmpty org.cactoos.text.IsEmpty(org.cactoos.Text)
++ public java.lang.Boolean org.cactoos.text.IsEmpty.value()
++ public transient Joined org.cactoos.text.Joined(java.lang.CharSequence,java.lang.CharSequence[])
++ public Joined org.cactoos.text.Joined(java.lang.CharSequence,java.lang.Iterable)
++ public transient Joined org.cactoos.text.Joined(java.lang.CharSequence,org.cactoos.Text[])
++ public Joined org.cactoos.text.Joined(org.cactoos.Text,java.lang.Iterable)
++ public transient Joined org.cactoos.text.Joined(org.cactoos.Text,org.cactoos.Text[])
-- public JoinedText org.cactoos.text.JoinedText(java.lang.String,java.lang.Iterable)
-- public transient JoinedText org.cactoos.text.JoinedText(java.lang.String,java.lang.String[])
-- public JoinedText org.cactoos.text.JoinedText(org.cactoos.Text,java.lang.Iterable)
-- public transient JoinedText org.cactoos.text.JoinedText(org.cactoos.Text,org.cactoos.Text[])
-- public LowerText org.cactoos.text.LowerText(java.lang.String)
-- public LowerText org.cactoos.text.LowerText(org.cactoos.Text)
-- public LowerText org.cactoos.text.LowerText(org.cactoos.Text,java.util.Locale)
++ public Lowered org.cactoos.text.Lowered(java.lang.CharSequence)
++ public Lowered org.cactoos.text.Lowered(org.cactoos.Text)
++ public Lowered org.cactoos.text.Lowered(org.cactoos.Text,java.util.Locale)
++ public Mapped org.cactoos.text.Mapped(org.cactoos.Func,org.cactoos.Text)
++ public Newline org.cactoos.text.Newline()
++ public NoNulls org.cactoos.text.NoNulls(org.cactoos.Text)
++ public Normalized org.cactoos.text.Normalized(java.lang.CharSequence)
++ public Normalized org.cactoos.text.Normalized(org.cactoos.Text)
-- public NormalizedText org.cactoos.text.NormalizedText(java.lang.String)
-- public NormalizedText org.cactoos.text.NormalizedText(org.cactoos.Text)
++ public PaddedStart org.cactoos.text.PaddedStart(org.cactoos.Text,int,char)
-- public PaddedStartText org.cactoos.text.PaddedStartText(org.cactoos.Text,int,char)
++ public PrefixOf org.cactoos.text.PrefixOf(java.lang.CharSequence,java.lang.CharSequence)
++ public PrefixOf org.cactoos.text.PrefixOf(org.cactoos.Text,java.lang.CharSequence)
-- public RandomText org.cactoos.text.RandomText()
-- public transient RandomText org.cactoos.text.RandomText(java.lang.Character[])
-- public RandomText org.cactoos.text.RandomText(java.lang.Integer)
-- public transient RandomText org.cactoos.text.RandomText(java.lang.Integer,java.lang.Character[])
-- public RandomText org.cactoos.text.RandomText(java.util.List)
-- public RandomText org.cactoos.text.RandomText(java.util.List,org.cactoos.Scalar)
-- public RandomText org.cactoos.text.RandomText(java.util.List,org.cactoos.Scalar,java.util.Random)
-- public RandomText org.cactoos.text.RandomText(org.cactoos.Scalar)
-- public transient RandomText org.cactoos.text.RandomText(org.cactoos.Scalar,java.lang.Character[])
-- public java.lang.String org.cactoos.text.RandomText.asString()
++ public Randomized org.cactoos.text.Randomized()
++ public transient Randomized org.cactoos.text.Randomized(java.lang.Character[])
++ public Randomized org.cactoos.text.Randomized(java.lang.Integer)
++ public transient Randomized org.cactoos.text.Randomized(java.lang.Integer,java.lang.Character[])
++ public Randomized org.cactoos.text.Randomized(java.lang.Iterable,org.cactoos.Scalar)
++ public Randomized org.cactoos.text.Randomized(java.lang.Iterable,org.cactoos.Scalar,java.util.Random)
++ public Randomized org.cactoos.text.Randomized(java.util.List)
++ public Randomized org.cactoos.text.Randomized(org.cactoos.Scalar)
++ public transient Randomized org.cactoos.text.Randomized(org.cactoos.Scalar,java.lang.Character[])
++ public Repeated org.cactoos.text.Repeated(java.lang.CharSequence,int)
++ public Repeated org.cactoos.text.Repeated(org.cactoos.Text,int)
-- public RepeatedText org.cactoos.text.RepeatedText(java.lang.String,int)
-- public RepeatedText org.cactoos.text.RepeatedText(org.cactoos.Text,int)
++ public Replaced org.cactoos.text.Replaced(org.cactoos.Text,java.lang.CharSequence,java.lang.CharSequence)
++ public Replaced org.cactoos.text.Replaced(org.cactoos.Text,org.cactoos.Scalar,org.cactoos.Func)
-- public ReplacedText org.cactoos.text.ReplacedText(org.cactoos.Text,java.lang.String,java.lang.String)
-- public ReplacedText org.cactoos.text.ReplacedText(org.cactoos.Text,org.cactoos.Scalar,org.cactoos.Func)
++ public Reversed org.cactoos.text.Reversed(org.cactoos.Text)
-- public ReversedText org.cactoos.text.ReversedText(org.cactoos.Text)
++ public Rotated org.cactoos.text.Rotated(org.cactoos.Text,int)
-- public RotatedText org.cactoos.text.RotatedText(org.cactoos.Text,int)
++ public Split org.cactoos.text.Split(java.lang.CharSequence,java.lang.CharSequence)
++ public Split org.cactoos.text.Split(java.lang.CharSequence,java.lang.CharSequence,int)
++ public Split org.cactoos.text.Split(java.lang.CharSequence,org.cactoos.Text)
++ public Split org.cactoos.text.Split(java.lang.CharSequence,org.cactoos.Text,int)
++ public Split org.cactoos.text.Split(org.cactoos.Text,java.lang.CharSequence)
++ public Split org.cactoos.text.Split(org.cactoos.Text,java.lang.CharSequence,int)
++ public Split org.cactoos.text.Split(org.cactoos.Text,org.cactoos.Text)
++ public Split org.cactoos.text.Split(org.cactoos.Text,org.cactoos.Text,int)
-- public SplitText org.cactoos.text.SplitText(java.lang.String,java.lang.String)
-- public SplitText org.cactoos.text.SplitText(java.lang.String,org.cactoos.Text)
-- public SplitText org.cactoos.text.SplitText(org.cactoos.Text,java.lang.String)
-- public SplitText org.cactoos.text.SplitText(org.cactoos.Text,org.cactoos.Text)
-- public SplitText org.cactoos.text.SplitText(org.cactoos.text.UncheckedText,org.cactoos.text.UncheckedText)
-- public java.util.Iterator org.cactoos.text.SplitText.iterator()
++ public StartsWith org.cactoos.text.StartsWith(java.lang.CharSequence,java.lang.CharSequence)
++ public StartsWith org.cactoos.text.StartsWith(org.cactoos.Text,org.cactoos.Text)
++ public java.lang.Boolean org.cactoos.text.StartsWith.value()
++ public Sticky org.cactoos.text.Sticky(org.cactoos.Text)
++ public Strict org.cactoos.text.Strict(java.util.regex.Pattern,org.cactoos.Text)
++ public Strict org.cactoos.text.Strict(org.cactoos.Func,org.cactoos.Text)
++ public Sub org.cactoos.text.Sub(java.lang.CharSequence,int)
++ public Sub org.cactoos.text.Sub(java.lang.CharSequence,int,int)
++ public Sub org.cactoos.text.Sub(org.cactoos.Text,int)
++ public Sub org.cactoos.text.Sub(org.cactoos.Text,int,int)
++ public Sub org.cactoos.text.Sub(org.cactoos.Text,int,org.cactoos.Func)
++ public Sub org.cactoos.text.Sub(org.cactoos.Text,int,org.cactoos.Scalar)
++ public Sub org.cactoos.text.Sub(org.cactoos.Text,org.cactoos.Func)
++ public Sub org.cactoos.text.Sub(org.cactoos.Text,org.cactoos.Func,org.cactoos.Func)
++ public Sub org.cactoos.text.Sub(org.cactoos.Text,org.cactoos.Scalar)
++ public Sub org.cactoos.text.Sub(org.cactoos.Text,org.cactoos.Scalar,org.cactoos.Func)
++ public Sub org.cactoos.text.Sub(org.cactoos.Text,org.cactoos.Scalar,org.cactoos.Scalar)
-- public SubText org.cactoos.text.SubText(java.lang.String,int)
-- public SubText org.cactoos.text.SubText(java.lang.String,int,int)
-- public SubText org.cactoos.text.SubText(org.cactoos.Text,int)
-- public SubText org.cactoos.text.SubText(org.cactoos.Text,int,int)
-- public SubText org.cactoos.text.SubText(org.cactoos.Text,org.cactoos.Scalar,org.cactoos.Scalar)
-- public SubText org.cactoos.text.SubText(org.cactoos.Text,org.cactoos.scalar.UncheckedScalar,org.cactoos.scalar.UncheckedScalar)
++ public SuffixOf org.cactoos.text.SuffixOf(java.lang.CharSequence,java.lang.CharSequence)
++ public SuffixOf org.cactoos.text.SuffixOf(org.cactoos.Text,java.lang.CharSequence)
++ public SwappedCase org.cactoos.text.SwappedCase(org.cactoos.Text)
-- public SwappedCaseText org.cactoos.text.SwappedCaseText(org.cactoos.Text)
-- public SyncText org.cactoos.text.SyncText(org.cactoos.Text)
-- public SyncText org.cactoos.text.SyncText(org.cactoos.Text,java.lang.Object)
-- public java.lang.String org.cactoos.text.SyncText.asString()
++ public Synced org.cactoos.text.Synced(org.cactoos.Text)
++ public Synced org.cactoos.text.Synced(org.cactoos.Text,java.lang.Object)
-- public TextBase64 org.cactoos.text.TextBase64(java.lang.String)
-- public TextBase64 org.cactoos.text.TextBase64(org.cactoos.Text)
-- public TextEnvelope org.cactoos.text.TextEnvelope(org.cactoos.Scalar)
-- public final java.lang.String org.cactoos.text.TextEnvelope.asString()
++ public final java.lang.String org.cactoos.text.TextEnvelope.asString()
-- public TextOf org.cactoos.text.TextOf(java.lang.String,java.nio.charset.Charset)
++ public TextOf org.cactoos.text.TextOf(java.util.Iterator)
++ public TextOfDateTime org.cactoos.text.TextOfDateTime(java.lang.String,java.time.LocalDate)
++ public TextOfDateTime org.cactoos.text.TextOfDateTime(java.lang.String,java.time.LocalDate,java.util.Locale)
++ public TextOfDateTime org.cactoos.text.TextOfDateTime(java.lang.String,java.time.LocalDateTime)
++ public TextOfDateTime org.cactoos.text.TextOfDateTime(java.lang.String,java.time.LocalDateTime,java.util.Locale)
++ public TextOfDateTime org.cactoos.text.TextOfDateTime(java.lang.String,java.time.OffsetDateTime)
++ public TextOfDateTime org.cactoos.text.TextOfDateTime(java.lang.String,java.time.OffsetDateTime,java.util.Locale)
++ public TextOfDateTime org.cactoos.text.TextOfDateTime(java.lang.String,java.time.ZonedDateTime)
++ public TextOfDateTime org.cactoos.text.TextOfDateTime(java.lang.String,java.time.ZonedDateTime,java.util.Locale)
++ public TextOfDateTime org.cactoos.text.TextOfDateTime(java.lang.String,java.util.Date)
++ public TextOfDateTime org.cactoos.text.TextOfDateTime(java.lang.String,java.util.Date,java.util.Locale)
++ public TextOfDateTime org.cactoos.text.TextOfDateTime(java.time.LocalDate)
++ public TextOfDateTime org.cactoos.text.TextOfDateTime(java.time.LocalDateTime)
++ public TextOfDateTime org.cactoos.text.TextOfDateTime(java.time.OffsetDateTime)
++ public TextOfDateTime org.cactoos.text.TextOfDateTime(java.time.ZonedDateTime)
++ public TextOfDateTime org.cactoos.text.TextOfDateTime(java.time.format.DateTimeFormatter,java.time.LocalDate)
++ public TextOfDateTime org.cactoos.text.TextOfDateTime(java.time.format.DateTimeFormatter,java.time.LocalDateTime)
++ public TextOfDateTime org.cactoos.text.TextOfDateTime(java.time.format.DateTimeFormatter,java.time.OffsetDateTime)
++ public TextOfDateTime org.cactoos.text.TextOfDateTime(java.time.format.DateTimeFormatter,java.time.ZonedDateTime)
++ public TextOfDateTime org.cactoos.text.TextOfDateTime(java.time.format.DateTimeFormatter,java.util.Date)
++ public TextOfDateTime org.cactoos.text.TextOfDateTime(java.util.Date)
++ public TextOfScalar org.cactoos.text.TextOfScalar(org.cactoos.Scalar)
++ public java.lang.String org.cactoos.text.TextOfScalar.asString()
++ public bool org.cactoos.text.TextOfScalar.equals(java.lang.Object)
++ public int org.cactoos.text.TextOfScalar.hashCode()
++ public java.lang.String org.cactoos.text.TextOfScalar.toString()
++ public TextOfString org.cactoos.text.TextOfString(java.lang.String)
++ public java.lang.String org.cactoos.text.TextOfString.asString()
++ public bool org.cactoos.text.TextOfString.equals(java.lang.Object)
++ public int org.cactoos.text.TextOfString.hashCode()
++ public java.lang.String org.cactoos.text.TextOfString.toString()
++ public Trimmed org.cactoos.text.Trimmed(org.cactoos.Text)
++ public TrimmedLeft org.cactoos.text.TrimmedLeft(org.cactoos.Text)
-- public TrimmedLeftText org.cactoos.text.TrimmedLeftText(org.cactoos.Text)
-- public java.lang.String org.cactoos.text.TrimmedLeftText.asString()
++ public TrimmedRight org.cactoos.text.TrimmedRight(org.cactoos.Text)
-- public TrimmedRightText org.cactoos.text.TrimmedRightText(org.cactoos.Text)
-- public java.lang.String org.cactoos.text.TrimmedRightText.asString()
-- public TrimmedText org.cactoos.text.TrimmedText(org.cactoos.Text)
-- public java.lang.String org.cactoos.text.TrimmedText.asString()
++ public UncheckedText org.cactoos.text.UncheckedText(java.lang.CharSequence)
-- public UncheckedText org.cactoos.text.UncheckedText(java.lang.String)
++ public bool org.cactoos.text.UncheckedText.equals(java.lang.Object)
++ public int org.cactoos.text.UncheckedText.hashCode()
++ public java.lang.String org.cactoos.text.UncheckedText.toString()
++ public Upper org.cactoos.text.Upper(java.lang.CharSequence)
++ public Upper org.cactoos.text.Upper(org.cactoos.Text)
++ public Upper org.cactoos.text.Upper(org.cactoos.Text,java.util.Locale)
-- public UpperText org.cactoos.text.UpperText(java.lang.String)
-- public UpperText org.cactoos.text.UpperText(org.cactoos.Text)
-- public UpperText org.cactoos.text.UpperText(org.cactoos.Text,java.util.Locale)
-- public java.lang.String org.cactoos.text.UpperText.asString()
-- public DateAsText org.cactoos.time.DateAsText()
-- public DateAsText org.cactoos.time.DateAsText(java.util.Date)
-- public DateAsText org.cactoos.time.DateAsText(java.util.Date,java.lang.String)
-- public DateAsText org.cactoos.time.DateAsText(java.util.Date,java.lang.String,java.util.Locale)
-- public DateAsText org.cactoos.time.DateAsText(java.util.Date,java.time.format.DateTimeFormatter)
-- public DateAsText org.cactoos.time.DateAsText(long)
-- public DateAsText org.cactoos.time.DateAsText(long,java.lang.String)
-- public DateAsText org.cactoos.time.DateAsText(long,java.lang.String,java.util.Locale)
-- public java.lang.String org.cactoos.time.DateAsText.asString()
-- public java.time.format.DateTimeFormatter org.cactoos.time.Iso.get()
++ public java.time.format.DateTimeFormatter org.cactoos.time.Iso.value()
-- public LocalDateAsText org.cactoos.time.LocalDateAsText(java.time.LocalDate)
-- public LocalDateAsText org.cactoos.time.LocalDateAsText(java.time.LocalDate,java.lang.String)
-- public LocalDateAsText org.cactoos.time.LocalDateAsText(java.time.LocalDate,java.lang.String,java.util.Locale)
-- public LocalDateAsText org.cactoos.time.LocalDateAsText(java.time.LocalDate,java.time.format.DateTimeFormatter)
-- public java.lang.String org.cactoos.time.LocalDateAsText.asString()
-- public LocalDateTimeAsText org.cactoos.time.LocalDateTimeAsText(java.time.LocalDateTime)
-- public LocalDateTimeAsText org.cactoos.time.LocalDateTimeAsText(java.time.LocalDateTime,java.lang.String)
-- public LocalDateTimeAsText org.cactoos.time.LocalDateTimeAsText(java.time.LocalDateTime,java.lang.String,java.util.Locale)
-- public LocalDateTimeAsText org.cactoos.time.LocalDateTimeAsText(java.time.LocalDateTime,java.time.format.DateTimeFormatter)
-- public java.lang.String org.cactoos.time.LocalDateTimeAsText.asString()
-- public OffsetDateTimeAsText org.cactoos.time.OffsetDateTimeAsText(java.time.OffsetDateTime)
-- public OffsetDateTimeAsText org.cactoos.time.OffsetDateTimeAsText(java.time.OffsetDateTime,java.lang.String)
-- public OffsetDateTimeAsText org.cactoos.time.OffsetDateTimeAsText(java.time.OffsetDateTime,java.lang.String,java.util.Locale)
-- public OffsetDateTimeAsText org.cactoos.time.OffsetDateTimeAsText(java.time.OffsetDateTime,java.time.format.DateTimeFormatter)
-- public java.lang.String org.cactoos.time.OffsetDateTimeAsText.asString()
-- public ZonedDateTimeAsText org.cactoos.time.ZonedDateTimeAsText(java.time.ZonedDateTime)
-- public ZonedDateTimeAsText org.cactoos.time.ZonedDateTimeAsText(java.time.ZonedDateTime,java.lang.String)
-- public ZonedDateTimeAsText org.cactoos.time.ZonedDateTimeAsText(java.time.ZonedDateTime,java.lang.String,java.util.Locale)
-- public ZonedDateTimeAsText org.cactoos.time.ZonedDateTimeAsText(java.time.ZonedDateTime,java.time.format.DateTimeFormatter)
-- public java.lang.String org.cactoos.time.ZonedDateTimeAsText.asString()