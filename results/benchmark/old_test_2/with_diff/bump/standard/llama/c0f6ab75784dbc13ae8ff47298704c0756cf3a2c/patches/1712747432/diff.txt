1,7c1,18
< private static AnalysisEngineConfiguration buildAnalysisEngineConfiguration() {
<         return AnalysisEngineConfiguration.builder()
<                 .addEnabledLanguages(globalConfig.getEnabledLanguages())
<                 .setClientPid(globalConfig.getClientPid())
<                 .setExtraProperties(globalConfig.extraProperties())
<                 .setWorkDir(globalConfig.getWorkDir())
<                 .setModulesProvider(globalConfig.getModulesProvider())
---
> private static org.sonarsource.sonarlint.core.analysis.api.AnalysisEngineConfiguration buildAnalysisEngineConfiguration() {
>     return org.sonarsource.sonarlint.core.analysis.api.AnalysisEngineConfiguration.builder()
>             .addEnabledLanguages(sorald.sonar.SonarLintEngine.globalConfig.getEnabledLanguages())
>             .setClientPid(sorald.sonar.SonarLintEngine.globalConfig.getClientPid())
>             .setExtraProperties(sorald.sonar.SonarLintEngine.globalConfig.extraProperties())
>             .setWorkDir(sorald.sonar.SonarLintEngine.globalConfig.getWorkDir())
>             .setModulesProvider(sorald.sonar.SonarLintEngine.globalConfig.getModulesProvider())
>             .setLanguageSupportRepository(new LanguageSupportRepository() {
>                 @Override
>                 public java.util.Set<org.sonarsource.sonarlint.core.commons.Language> getEnabledLanguagesInConnectedMode() {
>                     return sorald.sonar.SonarLintEngine.globalConfig.getEnabledLanguages();
>                 }
> 
>                 @Override
>                 public java.util.Set<org.sonarsource.sonarlint.core.commons.Language> getEnabledLanguagesInStandaloneMode() {
>                     return sorald.sonar.SonarLintEngine.globalConfig.getEnabledLanguages();
>                 }
>             })
