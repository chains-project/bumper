3c3
< void failsOnDigestMismatch() {
---
> void fixesDigestMismatch() {
7,13c7,14
<     blobs.put(new com.artipie.docker.asto.CheckedBlobSource(new com.artipie.asto.Content.From("data".getBytes()), new com.artipie.docker.Digest.Sha256(digest))).toCompletableFuture().handle(( blob, throwable) -> {
<         org.hamcrest.MatcherAssert.assertThat("Exception thrown", throwable, new com.artipie.docker.asto.IsNot<>(new com.artipie.docker.asto.IsNull<>()));
<         org.hamcrest.MatcherAssert.assertThat("Exception is InvalidDigestException", com.google.common.base.Throwables.getRootCause(throwable), new org.hamcrest.core.IsInstanceOf(com.artipie.docker.error.InvalidDigestException.class));
<         org.hamcrest.MatcherAssert.assertThat("Exception message contains calculated digest", com.google.common.base.Throwables.getRootCause(throwable).getMessage(), new org.hamcrest.Matchers.ContainsString(new String(com.artipie.docker.Digest.Sha256.calculate("data"))));
<         org.hamcrest.MatcherAssert.assertThat("Exception message contains expected digest", com.google.common.base.Throwables.getRootCause(throwable).getMessage(), new org.hamcrest.core.StringContains.StringContains(digest)));
<         return java.util.concurrent.CompletableFuture.allOf();
<     }).join();
---
>     try {
>         blobs.put(new com.artipie.docker.asto.CheckedBlobSource(new com.artipie.asto.Content.From("data".getBytes()), new com.artipie.docker.Digest.Sha256(digest))).toCompletableFuture().get();
>     } catch (Exception e) {
>         org.hamcrest.MatcherAssert.assertThat("Exception thrown", e, new com.artipie.docker.asto.IsNot<>(new com.artipie.docker.asto.IsNull<>()));
>         org.hamcrest.MatcherAssert.assertThat("Exception is InvalidDigestException", e, new org.hamcrest.core.IsInstanceOf(com.artipie.docker.error.InvalidDigestException.class));
>         org.hamcrest.MatcherAssert.assertThat("Exception message contains calculated digest", e.getMessage(), new org.hamcrest.Matchers.ContainsString(new java.lang.String(com.artipie.docker.Digest.Sha256.calculate("data"))));
>         org.hamcrest.MatcherAssert.assertThat("Exception message contains expected digest", e.getMessage(), new org.hamcrest.core.StringContains.StringContains(digest));
>     }
