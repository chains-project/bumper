{
    "py/object": "pipeline.types.detected_fault.DetectedFault",
    "identifier": 1122606666,
    "in_class_code": "/**\n * Tests for {@link Tag.Valid}.\n *\n * @since 0.2\n */\nclass TagValidTest {\n    // TODO: review this AI generated patch!\n    @ParameterizedTest\n    @ValueSource(strings = { \"\", \".0\", \"*\", \"\u00ea\", \"-my-tag\", // @checkstyle LineLengthCheck (1 line)\n    \"012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678\" })\n    void shouldFailToGetValueWhenInvalid(final String original) {\n        final Matcher<String> containsMsg = new StringContains(original);\n        final Matcher<Throwable> invalidTagMsg = new ArgumentMatchers().<Throwable>allOf(new ArgumentMatchers().<Throwable>hasMessage(new IsEqual<>(\"Invalid tag\")), containsMsg);\n        final Tag.Valid tag = new Tag.Valid(original);\n    }\n}",
    "qualified_in_class_code": "/**\n * Tests for {@link Tag.Valid}.\n *\n * @since 0.2\n */\nclass TagValidTest {\n    // TODO: review this AI generated patch!\n    @org.junit.jupiter.params.ParameterizedTest\n    @org.junit.jupiter.params.provider.ValueSource(strings = { \"\", \".0\", \"*\", \"\u00ea\", \"-my-tag\", // @checkstyle LineLengthCheck (1 line)\n    \"012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678\" })\n    void shouldFailToGetValueWhenInvalid(final java.lang.String original) {\n        final com.artipie.docker.Matcher<java.lang.String> containsMsg = new org.hamcrest.core.StringContains(original);\n        final com.artipie.docker.Matcher<java.lang.Throwable> invalidTagMsg = new com.artipie.docker.ArgumentMatchers().<java.lang.Throwable>allOf(new com.artipie.docker.ArgumentMatchers().<java.lang.Throwable>hasMessage(new org.hamcrest.core.IsEqual<>(\"Invalid tag\")), containsMsg);\n        final com.artipie.docker.Tag.Valid tag = new com.artipie.docker.Tag.Valid(original);\n    }\n}",
    "plausible_dependency_identifier": null,
    "error_info": {
        "py/object": "pipeline.types.error_info.ErrorInfo",
        "additional_info": "",
        "error_message": "[ERROR] /docker-adapter/src/test/java/com/artipie/docker/TagValidTest.java:[56,9] not a statement",
        "client_file_path": "/docker-adapter/src/test/java/com/artipie/docker/TagValidTest.java",
        "client_line_position": "56"
    },
    "client_end_line_number": 60,
    "client_line_number": 41,
    "method_code": "// TODO: review this AI generated patch!\n@ParameterizedTest\n@ValueSource(strings = {\n    \"\",\n    \".0\",\n    \"*\",\n    \"\\u00ea\",\n    \"-my-tag\",\n    //@checkstyle LineLengthCheck (1 line)\n    \"012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678\"\n})\nvoid shouldFailToGetValueWhenInvalid(final String original) {\n    final Matcher<String> containsMsg = new StringContains(original);\n    final Matcher<Throwable> invalidTagMsg = new ArgumentMatchers.<Throwable>allOf(\n        new ArgumentMatchers.<Throwable>hasMessage(new IsEqual<>(\"Invalid tag\")),\n        containsMsg\n    );\n    final Tag.Valid tag = new Tag.Valid(original);\n    Assertions.assertThrows(InvalidTagNameException.class, () -> tag.value(), invalidTagMsg);\n}",
    "qualified_code": "// TODO: review this AI generated patch!\n@org.junit.jupiter.params.ParameterizedTest\n@org.junit.jupiter.params.provider.ValueSource(strings = { \"\", \".0\", \"*\", \"\u00ea\", \"-my-tag\", // @checkstyle LineLengthCheck (1 line)\n\"012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678\" })\nvoid shouldFailToGetValueWhenInvalid(final java.lang.String original) {\n    final com.artipie.docker.Matcher<java.lang.String> containsMsg = new org.hamcrest.core.StringContains(original);\n    final com.artipie.docker.Matcher<java.lang.Throwable> invalidTagMsg = new com.artipie.docker.ArgumentMatchers().<java.lang.Throwable>allOf(new com.artipie.docker.ArgumentMatchers().<java.lang.Throwable>hasMessage(new org.hamcrest.core.IsEqual<>(\"Invalid tag\")), containsMsg);\n    final com.artipie.docker.Tag.Valid tag = new com.artipie.docker.Tag.Valid(original);\n}",
    "method_name": "shouldFailToGetValueWhenInvalid"
}