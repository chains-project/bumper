{
    "py/object": "pipeline.types.detected_fault.DetectedFault",
    "identifier": 1577592551,
    "in_class_code": "/**\n * Policy factory to create {@link YamlPolicy}. Yaml policy is read from storage, and it's required\n * to describe this storage in the configuration. Configuration format is the following:\n *\n * policy:\n * type: yaml_policy\n * storage:\n * type: fs\n * path: /some/path\n *\n * The storage itself is expected to have yaml files with permissions in the following structure:\n *\n * ..\n * \u251c\u2500\u2500 roles.yaml\n * \u251c\u2500\u2500 users\n * \u2502   \u251c\u2500\u2500 david.yaml\n * \u2502   \u251c\u2500\u2500 jane.yaml\n * \u2502   \u251c\u2500\u2500 ...\n *\n * @since 1.2\n */\n@ArtipiePolicyFactory(\"yaml_policy\")\npublic final class YamlPolicyFactory implements PolicyFactory {\n    @Override\n    public Policy<?> getPolicy(final PolicyConfig config) {\n        final PolicyConfig sub = config.config(\"storage\");\n        try {\n            return new YamlPolicy(new BlockingStorage(new Storages().newStorage(sub.string(\"type\"), Yaml.createYamlInput(sub.toString()).readYamlMapping())));\n        } catch (final IOException err) {\n            throw new UncheckedIOException(err);\n        }\n    }\n}",
    "qualified_in_class_code": "/**\n * Policy factory to create {@link YamlPolicy}. Yaml policy is read from storage, and it's required\n * to describe this storage in the configuration. Configuration format is the following:\n *\n * policy:\n *   type: yaml_policy\n *   storage:\n *     type: fs\n *     path: /some/path\n *\n * The storage itself is expected to have yaml files with permissions in the following structure:\n *\n * ..\n * \u251c\u2500\u2500 roles.yaml\n * \u251c\u2500\u2500 users\n * \u2502   \u251c\u2500\u2500 david.yaml\n * \u2502   \u251c\u2500\u2500 jane.yaml\n * \u2502   \u251c\u2500\u2500 ...\n *\n * @since 1.2\n */\n@com.artipie.security.policy.ArtipiePolicyFactory(\"yaml_policy\")\npublic final class YamlPolicyFactory implements com.artipie.security.policy.PolicyFactory {\n    @java.lang.Override\n    public com.artipie.security.policy.Policy<?> getPolicy(final com.artipie.security.policy.PolicyConfig config) {\n        final com.artipie.security.policy.PolicyConfig sub = config.config(\"storage\");\n        try {\n            return new com.artipie.security.policy.YamlPolicy(new com.artipie.asto.blocking.BlockingStorage(new com.artipie.security.policy.Storages().newStorage(sub.string(\"type\"), com.amihaiemil.eoyaml.Yaml.createYamlInput(sub.toString()).readYamlMapping())));\n        } catch (final java.io.IOException err) {\n            throw new java.io.UncheckedIOException(err);\n        }\n    }\n}",
    "plausible_dependency_identifier": null,
    "error_info": {
        "py/object": "pipeline.types.error_info.ErrorInfo",
        "additional_info": "  symbol:   class Storages\n  location: class com.artipie.security.policy.YamlPolicyFactory\n",
        "error_message": "[ERROR] /http/src/main/java/com/artipie/security/policy/YamlPolicyFactory.java:[44,25] cannot find symbol",
        "client_file_path": "/http/src/main/java/com/artipie/security/policy/YamlPolicyFactory.java",
        "client_line_position": "44"
    },
    "client_end_line_number": 52,
    "client_line_number": 38,
    "method_code": "@Override\n    public Policy<?> getPolicy(final PolicyConfig config) {\n        final PolicyConfig sub = config.config(\"storage\");\n        try {\n            return new YamlPolicy(\n                new BlockingStorage(\n                    new Storages().newStorage(\n                        sub.string(\"type\"), Yaml.createYamlInput(sub.toString()).readYamlMapping()\n                    )\n                )\n            );\n        } catch (final IOException err) {\n            throw new UncheckedIOException(err);\n        }\n    }",
    "qualified_code": "@java.lang.Override\npublic com.artipie.security.policy.Policy<?> getPolicy(final com.artipie.security.policy.PolicyConfig config) {\n    final com.artipie.security.policy.PolicyConfig sub = config.config(\"storage\");\n    try {\n        return new com.artipie.security.policy.YamlPolicy(new com.artipie.asto.blocking.BlockingStorage(new com.artipie.security.policy.Storages().newStorage(sub.string(\"type\"), com.amihaiemil.eoyaml.Yaml.createYamlInput(sub.toString()).readYamlMapping())));\n    } catch (final java.io.IOException err) {\n        throw new java.io.UncheckedIOException(err);\n    }\n}",
    "method_name": "getPolicy"
}