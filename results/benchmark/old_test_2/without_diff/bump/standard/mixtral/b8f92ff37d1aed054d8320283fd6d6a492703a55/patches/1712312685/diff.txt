0a1,10
> import org.apache.maven.surefire.api.util.DefaultScanResult.ClasspathEntry;
> import org.apache.maven.surefire.api.util.ScanResult;
> import org.apache.maven.shared.utils.reflection.ReflectionUtils;
> 
> import java.io.File;
> import java.lang.reflect.Method;
> import java.util.Arrays;
> import java.util.List;
> import java.util.stream.Collectors;
> 
2c12,21
<         DirectoryScanner directoryScanner = new DirectoryScanner(testSrcFolder, TestListResolver.getWildcard());
---
>     ClasspathEntry classpathEntry = new ClasspathEntry(testSrcFolder.getAbsolutePath(), null);
>     ScanResult scanResult = new ScanResult(Arrays.asList(classpathEntry), null);
>     Method getWildcardMethod;
>     try {
>         getWildcardMethod = ReflectionUtils.findMethod(TestListResolver.class, "getWildcard");
>     } catch (Exception e) {
>         throw new RuntimeException("Failed to find getWildcard method", e);
>     }
>     Object wildcard = ReflectionUtils.invokeMethod(getWildcardMethod, null);
>     DirectoryScanner directoryScanner = new DirectoryScanner(testSrcFolder, wildcard);
