0a1,15
> import net.minecraft.server.v1_12_R1.EntityPlayer;
> import net.minecraft.server.v1_12_R1.WorldServer;
> import org.apache.commons.lang3.tuple.Pair;
> import org.bukkit.Bukkit;
> import org.bukkit.World;
> import org.bukkit.craftbukkit.v1_12_R1.CraftServer;
> import org.bukkit.craftbukkit.v1_12_R1.CraftWorld;
> import org.bukkit.craftbukkit.v1_12_R1.entity.CraftPlayer;
> import org.bukkit.entity.Player;
> import java.util.Random;
> import java.util.UUID;
> import java.util.concurrent.ThreadLocalRandom;
> 
> public class PlayerUtils {
> 
4c19,20
<      * @param world ワールドのハンドルを取得するための引数。
---
>      * @param world
>      *          ワールドのハンドルを取得するための引数。
7,8c23
<     public static EntityPlayer getRandomPlayer(World world)
<     {
---
>     public static EntityPlayer getRandomPlayer(World world) {
10,20c25,33
<         String first = random.nextBoolean()
<             ? RandomStringUtils.randomAlphanumeric(new Random().nextInt(13) + 1)
<             : RandomWordUtils.getRandomWord();
<         String last = random.nextBoolean()
<             ? RandomStringUtils.randomAlphanumeric(new Random().nextInt(13) + 1)
<             : RandomWordUtils.getRandomWord();
< 
<         if (random.nextBoolean())
<         {
<             first = develop.p2p.lib.LeetConverter.convert(first);
<             last = develop.p2p.lib.LeetConverter.convert(last);
---
>         String first = (random.nextBoolean()) ?
>                 org.apache.commons.lang3.RandomStringUtils.randomAlphanumeric(new Random().nextInt(13) + 1) :
>                 getRandomWord();
>         String last = (random.nextBoolean()) ?
>                 org.apache.commons.lang3.RandomStringUtils.randomAlphanumeric(new Random().nextInt(13) + 1) :
>                 getRandomWord();
>         if (random.nextBoolean()) {
>             first = leetConvert(first);
>             last = leetConvert(last);
22,23c35
< 
<         String name = first + (random.nextBoolean() ? "_": "") + last + (random.nextBoolean() ? "19" + random.nextInt(120): "");
---
>         String name = ((first + (random.nextBoolean() ? "_" : "")) + last) + (random.nextBoolean() ? "19" + random.nextInt(120) : "");
25c37
<             name = random.nextBoolean() ? first: last;
---
>             name = (random.nextBoolean()) ? first : last;
28,30c40
<             name = RandomStringUtils.randomAlphanumeric(random.nextInt(16));
< 
<         WorldServer worldServer = ((CraftWorld) world).getHandle();
---
>             name = org.apache.commons.lang3.RandomStringUtils.randomAlphanumeric(random.nextInt(16));
31a42
>         WorldServer worldServer = ((CraftWorld) (world)).getHandle();
32a44,47
>         com.mojang.authlib.GameProfile profile = new com.mojang.authlib.GameProfile(UUID.randomUUID(), name);
>         profile.getProperties().put("textures", new com.mojang.authlib.properties.Property("textures", skin.getLeft(), skin.getRight()));
>         return new net.minecraft.server.v1_12_R1.EntityPlayer(((CraftServer) (Bukkit.getServer())).getServer(), worldServer, profile, new net.minecraft.server.v1_12_R1.PlayerInteractManager(worldServer));
>     }
34,36c49,53
<         GameProfile profile = new GameProfile(UUID.randomUUID(), name);
< 
<         profile.getProperties().put("textures", new Property("textures", skin.getLeft(), skin.getRight()));
---
>     private static String getRandomWord() {
>         // Implement this method to return a random word.
>         // You can use any library or method you want, as long as it doesn't rely on the missing package.
>         return "random";
>     }
38,43c55,96
<         return new EntityPlayer(
<             ((CraftServer) Bukkit.getServer()).getServer(),
<             worldServer,
<             profile,
<             new PlayerInteractManager(worldServer)
<         );
---
>     private static String leetConvert(String input) {
>         StringBuilder output = new StringBuilder();
>         for (char c : input.toCharArray()) {
>             switch (c) {
>                 case 'A':
>                 case 'a':
>                     output.append("4");
>                     break;
>                 case 'B':
>                 case 'b':
>                     output.append("8");
>                     break;
>                 case 'E':
>                 case 'e':
>                     output.append("3");
>                     break;
>                 case 'G':
>                 case 'g':
>                     output.append("6");
>                     break;
>                 case 'I':
>                 case 'i':
>                     output.append("1");
>                     break;
>                 case 'O':
>                 case 'o':
>                     output.append("0");
>                     break;
>                 case 'S':
>                 case 's':
>                     output.append("5");
>                     break;
>                 case 'T':
>                 case 't':
>                     output.append("7");
>                     break;
>                 default:
>                     output.append(c);
>             }
>         }
>         return output.toString();
>     }
