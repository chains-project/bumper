0a1,21
> import java.nio.charset.StandardCharsets;
> import java.util.concurrent.CompletableFuture;
> import java.util.concurrent.ExecutionException;
> import org.hamcrest.MatcherAssert;
> import org.junit.jupiter.api.Test;
> import com.artipie.asto.Content;
> import com.artipie.asto.MemoryStorage;
> import com.artipie.asto.ext.Blob Layouter;
> import com.artipie.asto.ext.Key;
> import com.artipie.docker.Digest;
> import com.artipie.docker.RepoName;
> import com.artipie.docker.RepoName.Simple;
> import com.artipie.docker.asto.CheckedBlobSource;
> import com.artipie.docker.asto.AstoBlobs;
> 
> public class AstoBlobsITCase {
> 
>     private static boolean stringContains(String haystack, String needle) {
>         return haystack.contains(needle);
>     }
> 
2,3c23,24
<     void failsOnDigestMismatch() {
<         final InMemoryStorage storage = new InMemoryStorage();
---
>     void fixedOnDigestMismatch() throws ExecutionException, InterruptedException {
>         final MemoryStorage storage = new MemoryStorage();
5c26,28
<             storage, new DefaultLayout(), new RepoName.Simple("any")
---
>             storage,
>             new Layouter(new Key.ByRepoPath()),
>             new Simple("any")
9c32,35
<             new CheckedBlobSource(new Content.From("data".getBytes()), new Digest.Sha256(digest))
---
>             new CheckedBlobSource(
>                 new Content.From("data".getBytes(StandardCharsets.UTF_8)),
>                 new Digest.Sha256(digest)
>             )
15c41
<                     new IsNot<>(new IsNull<>())
---
>                     new Not<>(new IsNull<>())
20c46
<                     new IsInstanceOf(InvalidDigestException.class)
---
>                     new InstanceOf(InvalidDigestException.class)
23a50
>                     stringContains(
25,26d51
<                     new StringContains(
<                         true,
31a57
>                     stringContains(
33c59,61
<                     new StringContains(true, digest)
---
>                         digest
>                     ),
>                     is(true)
37c65,66
<         ).join();
---
>         ).get();
>     }
