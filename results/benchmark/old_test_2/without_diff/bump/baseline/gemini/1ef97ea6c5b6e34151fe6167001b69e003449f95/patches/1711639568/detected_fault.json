{
    "py/object": "pipeline.types.detected_fault.DetectedFault",
    "identifier": 1038677529,
    "in_class_code": "public class DateTime extends DateAndTime {\n    protected DateTime(Faker faker) {\n        super(faker);\n    }\n\n    @Override\n    public Timestamp between(Date from, Date to) throws IllegalArgumentException {\n        return new Timestamp(super.between(from, to).getTime());\n    }\n}",
    "qualified_in_class_code": "public class DateTime extends net.datafaker.DateAndTime {\n    protected DateTime(net.datafaker.Faker faker) {\n        super(faker);\n    }\n\n    @java.lang.Override\n    public java.sql.Timestamp between(java.util.Date from, java.util.Date to) throws java.lang.IllegalArgumentException {\n        return new java.sql.Timestamp(super.between(from, to).getTime());\n    }\n}",
    "plausible_dependency_identifier": null,
    "error_info": {
        "py/object": "pipeline.types.error_info.ErrorInfo",
        "additional_info": "",
        "error_message": "[ERROR] /flink-faker/src/main/java/com/github/knaufk/flink/faker/DateTime.java:[45,40] incompatible types: java.util.Date cannot be converted to java.sql.Timestamp",
        "client_file_path": "/flink-faker/src/main/java/com/github/knaufk/flink/faker/DateTime.java",
        "client_line_position": "45"
    },
    "client_end_line_number": 46,
    "client_line_number": 43,
    "method_code": "@Override\n  public Timestamp between(Date from, Date to) throws IllegalArgumentException {\n    return new Timestamp(super.between(from, to).getTime());\n  }",
    "qualified_code": "@java.lang.Override\npublic java.sql.Timestamp between(java.util.Date from, java.util.Date to) throws java.lang.IllegalArgumentException {\n    return new java.sql.Timestamp(super.between(from, to).getTime());\n}",
    "method_name": "between"
}