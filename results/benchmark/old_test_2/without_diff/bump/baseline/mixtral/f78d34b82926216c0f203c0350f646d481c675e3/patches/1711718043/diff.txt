1,8c1,18
< /**
<      * ワールド内に新しいプレイヤーを捏造して、{@code EntityPlayer}として返します。
<      *
<      * @param world ワールドのハンドルを取得するための引数。
<      * @return 創造されたプレイヤー。
<      */
<     public static EntityPlayer getRandomPlayer(World world)
<     {
---
> import net.minecraft.server.v1_12_R1.EntityPlayer;
> import net.minecraft.server.v1_12_R1.GameProfile;
> import net.minecraft.server.v1_12_R1.PlayerInteractManager;
> import net.minecraft.server.v1_12_R1.WorldServer;
> import org.bukkit.craftbukkit.v1_12_R1.CraftServer;
> import org.bukkit.craftbukkit.v1_12_R1.CraftWorld;
> import org.bukkit.craftbukkit.v1_12_R1.entity.CraftPlayer;
> import org.bukkit.entity.Player;
> 
> import java.util.UUID;
> import java.util.regex.Pattern;
> 
> import static org.apache.commons.lang3.RandomStringUtils.randomAlphanumeric;
> import static org.apache.commons.lang3.RandomStringUtils.randomAlphanumeric(int i);
> 
> public class PlayerUtils {
> 
>     public static EntityPlayer getRandomPlayer(World world) {
11,12c21,22
<             ? RandomStringUtils.randomAlphanumeric(new Random().nextInt(13) + 1)
<             : RandomWordUtils.getRandomWord();
---
>                 ? randomAlphanumeric(new Random().nextInt(13) + 1)
>                 : getRandomWord();
14,15c24,25
<             ? RandomStringUtils.randomAlphanumeric(new Random().nextInt(13) + 1)
<             : RandomWordUtils.getRandomWord();
---
>                 ? randomAlphanumeric(new Random().nextInt(13) + 1)
>                 : getRandomWord();
17,20c27,29
<         if (random.nextBoolean())
<         {
<             first = develop.p2p.lib.LeetConverter.convert(first);
<             last = develop.p2p.lib.LeetConverter.convert(last);
---
>         if (random.nextBoolean()) {
>             first = LeetConverter.convert(first);
>             last = LeetConverter.convert(last);
28c37
<             name = RandomStringUtils.randomAlphanumeric(random.nextInt(16));
---
>             name = randomAlphanumeric(random.nextInt(16));
44a54,100
> 
>     private static String getRandomWord() {
>         return Pattern.compile("\\s+").split(randomAlphanumeric(10))[0];
>     }
> 
>     private static class LeetConverter {
>         private static final Pattern LEET_PATTERN = Pattern.compile("[aeiou]");
> 
>         private static String convert(String input) {
>             return LEET_PATTERN.matcher(input).replaceAll(match -> {
>                 char replacement = match.group().charAt(0);
>                 switch (replacement) {
>                     case 'a':
>                         return "@";
>                     case 'e':
>                         return "3";
>                     case 'i':
>                         return "1";
>                     case 'o':
>                         return "0";
>                     case 'u':
>                         return "v";
>                     default:
>                         return match.group();
>                 }
>             });
>         }
>     }
> 
>     private static class Pair<F, S> {
>         private final F first;
>         private final S second;
> 
>         private Pair(F first, S second) {
>             this.first = first;
>             this.second = second;
>         }
> 
>         private F getLeft() {
>             return first;
>         }
> 
>         private S getRight() {
>             return second;
>         }
>     }
> }
\ No newline at end of file
