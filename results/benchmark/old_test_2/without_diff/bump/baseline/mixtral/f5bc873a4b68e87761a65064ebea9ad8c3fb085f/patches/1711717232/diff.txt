1a2,64
> import org.apache.maven.plugin.AbstractMojo;
> import org.apache.maven.plugin.BuildException;
> import org.apache.maven.plugins.annotations.Component;
> import org.apache.maven.plugins.annotations.Mojo;
> import org.apache.maven.plugins.annotations.Parameter;
> import org.apache.maven.project.MavenProject;
> import org.codehaus.plexus.components.io.resources.PlexusIoFileResolver;
> import org.codehaus.plexus.util. FileUtils;
> 
> import java.io.File;
> import java.io.IOException;
> import java.util.Collections;
> import java.util.List;
> import java.util.zip.ZipEntry;
> import java.util.zip.ZipFile;
> 
> @Mojo(name = "unpack-theme", requiresProject = true, threadSafe = true)
> public class UnPackThemeMojo extends AbstractMojo {
> 
>     @Component
>     private MavenProject mavenProject;
> 
>     @Parameter(defaultValue = "${project.basedir}", readonly = true)
>     private File projectBaseDir;
> 
>     @Parameter(defaultValue = "${component.resourceResolver}", readonly = true)
>     private PlexusIoFileResolver fileResolver;
> 
>     @Override
>     public void execute() throws DependencyResolutionRequiredException, IOException {
>         File targetDir = new File(projectBaseDir, "target");
>         if (!targetDir.exists()) {
>             FileUtils.forceMkdir(targetDir);
>         }
>         List<String> themes = Collections.singletonList("tobago-theme");
>         for (String theme : themes) {
>             File themeDir = new File(targetDir, theme);
>             if (!themeDir.exists()) {
>                 FileUtils.forceMkdir(themeDir);
>             }
>             File themeZip = new File(themeDir, theme + ".zip");
>             if (!themeZip.exists()) {
>                 throw new BuildException("Missing theme ZIP file: " + themeZip.getAbsolutePath());
>             }
>             try (ZipFile zipFile = new ZipFile(themeZip)) {
>                 for (ZipEntry entry : Collections.list(zipFile.entries())) {
>                     if (!entry.isDirectory()) {
>                         File destFile = new File(themeDir, entry.getName());
>                         File destParent = destFile.getParentFile();
>                         if (destParent != null && !destParent.exists()) {
>                             FileUtils.forceMkdir(destParent);
>                         }
>                         if (!destFile.exists() || destFile.length() != entry.getSize()) {
>                             try (InputStream inputStream = zipFile.getInputStream(entry)) {
>                                 FileUtils.copyInputStreamToFile(inputStream, destFile);
>                             }
>                         }
>                     }
>                 }
>             }
>         }
>     }
> }
\ No newline at end of file
