@Override
public void init(Player player, InventoryContents contents) {
	try {
		ItemStack customDefaultBorders = XMaterial.WHITE_STAINED_GLASS_PANE.parseItem();
		if (!main.getActiveTranslator(targetPlayerUUID).getInLangCode().equals("")) {
			customDefaultBorders = XMaterial.YELLOW_STAINED_GLASS_PANE.parseItem();
		}
		ItemMeta defaultBorderMeta = customDefaultBorders.getItemMeta();
		defaultBorderMeta.setDisplayName(" ");
		customDefaultBorders.setItemMeta(defaultBorderMeta);
		contents.fillBorders(ClickableItem.empty(customDefaultBorders));
		
		ActiveTranslator currTranslator = main.getActiveTranslator(targetPlayerUUID);
		
		Pagination pagination = contents.pagination();
		ClickableItem[] listOfAvailableLangs = new ClickableItem[main.getSupportedTranslatorLanguages().size()];

		for (int i = 0; i < main.getSupportedTranslatorLanguages().size(); i++) {
			ItemStack currentLang = XMaterial.ARROW.parseItem();
			if (XMaterial.TARGET.parseItem() != null) {
				currentLang = XMaterial.TARGET.parseItem();
			}
			ItemMeta currentLangMeta = currentLang.getItemMeta();
			
			ArrayList<String> lore = new ArrayList<>();
			currentLangMeta.addItemFlags(ItemFlag.HIDE_ENCHANTS);
			if (currTranslator.getOutLangCode().equals(main.getSupportedTranslatorLanguages().get(i).getLangCode())) {
				currentLangMeta.addEnchant(XEnchantment.matchXEnchantment("power").get().parseEnchantment(), 1, false);
				lore.add(ChatColor.YELLOW + "" + ChatColor.ITALIC + CommonDefinitions.getMessage("wwctGUISourceOrTargetTranslationAlreadyActive"));
			}
			currentLangMeta.setDisplayName(main.getSupportedTranslatorLanguages().get(i).getLangName());
			if (!main.getSupportedTranslatorLanguages().get(i).getNativeLangName().equals("")) {
				lore.add(main.getSupportedTranslatorLanguages().get(i).getNativeLangName());
			}
			lore.add(main.getSupportedTranslatorLanguages().get(i).getLangCode());
			currentLangMeta.setLore(lore);
			currentLang.setItemMeta(currentLangMeta);
			String outLang = main.getSupportedTranslatorLanguages().get(i).getLangCode();
			listOfAvailableLangs[i] = ClickableItem.of(currentLang, e -> {
				WWCTranslate translateCommand;
				if (!targetPlayerUUID.equals("GLOBAL-TRANSLATE-ENABLED")) {
					translateCommand = new WWCTranslate((CommandSender)player, null, null, new String[] {main.getServer().getPlayer(UUID.fromString(targetPlayerUUID)).getName(), selectedSourceLanguage, outLang});
				} else {
					translateCommand = new WWCGlobal((CommandSender)player, null, null, new String[] {selectedSourceLanguage, outLang});
				}
				player.closeInventory();
				translateCommand.processCommand();
			});
		}

		pagination.setItems(listOfAvailableLangs);
		pagination.setItemsPerPage(28);
		pagination.addToIterator(contents.newIterator(SlotIterator.Type.HORIZONTAL, 1, 1).allowOverride(false));

		if (!pagination.isFirst()) {
			contents.set(5, 2,
					ClickableItem.of(WWCInventoryManager.getCommonButton("Previous"),
							e -> getTargetLanguageInventory(selectedSourceLanguage, targetPlayerUUID).open(player,
									pagination.previous().getPage())));
		} else {
			contents.set(5, 2,
					ClickableItem.of(WWCInventoryManager.getCommonButton("Previous"),
							e -> WWCTranslateGUISourceLanguage.getSourceLanguageInventory(selectedSourceLanguage, targetPlayerUUID).open(player)));
		}

		if (!pagination.isLast()) {
			contents.set(5, 6,
					ClickableItem.of(WWCInventoryManager.getCommonButton("Next"),
							e -> getTargetLanguageInventory(selectedSourceLanguage, targetPlayerUUID).open(player,
									pagination.next().getPage())));
		}
		
		contents.set(5, 8, ClickableItem.of(WWCInventoryManager.getCommonButton("Page Number", new String[] {String.valueOf(pagination.getPage() + 1)}), e -> {}));
	} catch (Exception e) {
		WWCInventoryManager.inventoryError(player, e);
	}
}